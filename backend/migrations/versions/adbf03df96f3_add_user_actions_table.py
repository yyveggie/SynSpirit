"""Add user_actions table

Revision ID: adbf03df96f3
Revises: 877a22405402
Create Date: 2025-04-16 23:59:55.754351

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'adbf03df96f3'
down_revision = '877a22405402'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('target_type', sa.String(length=50), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'action_type', 'target_type', 'target_id', name='uq_user_action_target')
    )
    with op.batch_alter_table('user_actions', schema=None) as batch_op:
        batch_op.create_index('ix_user_action_target', ['user_id', 'target_type', 'target_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_actions_action_type'), ['action_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_actions_target_id'), ['target_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_actions_target_type'), ['target_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_actions_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('dynamics', schema=None) as batch_op:
        batch_op.alter_column('action_type',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Type of dynamic (e.g., SHARE_ARTICLE, COMMENT_ARTICLE)',
               existing_nullable=False)
        batch_op.alter_column('target_article_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID of the article being shared/commented on',
               existing_nullable=True)
        batch_op.alter_column('target_tool_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='ID of the tool being referenced',
               existing_nullable=True)
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='User comment when sharing, or other content',
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.drop_index('idx_dynamics_target_article_id')
        batch_op.drop_index('idx_dynamics_target_tool_id')
        batch_op.drop_index('idx_dynamics_user_id')
        batch_op.create_index(batch_op.f('ix_dynamics_action_type'), ['action_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_dynamics_target_article_id'), ['target_article_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_dynamics_target_tool_id'), ['target_tool_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_dynamics_user_id'), ['user_id'], unique=False)
        batch_op.drop_constraint('fk_article', type_='foreignkey')
        batch_op.drop_constraint('fk_user', type_='foreignkey')
        batch_op.drop_constraint('fk_tool', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tools', ['target_tool_id'], ['id'])
        batch_op.create_foreign_key(None, 'articles', ['target_article_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dynamics', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_tool', 'tools', ['target_tool_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_user', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_article', 'articles', ['target_article_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_index(batch_op.f('ix_dynamics_user_id'))
        batch_op.drop_index(batch_op.f('ix_dynamics_target_tool_id'))
        batch_op.drop_index(batch_op.f('ix_dynamics_target_article_id'))
        batch_op.drop_index(batch_op.f('ix_dynamics_action_type'))
        batch_op.create_index('idx_dynamics_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_dynamics_target_tool_id', ['target_tool_id'], unique=False)
        batch_op.create_index('idx_dynamics_target_article_id', ['target_article_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               comment='User comment when sharing, or other content',
               existing_nullable=True)
        batch_op.alter_column('target_tool_id',
               existing_type=sa.INTEGER(),
               comment='ID of the tool being referenced',
               existing_nullable=True)
        batch_op.alter_column('target_article_id',
               existing_type=sa.INTEGER(),
               comment='ID of the article being shared/commented on',
               existing_nullable=True)
        batch_op.alter_column('action_type',
               existing_type=sa.VARCHAR(length=50),
               comment='Type of dynamic (e.g., SHARE_ARTICLE, COMMENT_ARTICLE)',
               existing_nullable=False)

    with op.batch_alter_table('user_actions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_actions_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_actions_target_type'))
        batch_op.drop_index(batch_op.f('ix_user_actions_target_id'))
        batch_op.drop_index(batch_op.f('ix_user_actions_action_type'))
        batch_op.drop_index('ix_user_action_target')

    op.drop_table('user_actions')
    # ### end Alembic commands ###
