"""Add counter caches to Article model

Revision ID: 2d2b7731a5fc
Revises: e467d638e84f
Create Date: 2025-05-05 18:08:44.308501

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2d2b7731a5fc'
down_revision = 'e467d638e84f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('likes_count', sa.Integer(), nullable=False, server_default='0'))
        batch_op.add_column(sa.Column('collects_count', sa.Integer(), nullable=False, server_default='0'))
        batch_op.add_column(sa.Column('shares_count', sa.Integer(), nullable=False, server_default='0'))
        batch_op.add_column(sa.Column('comments_count', sa.Integer(), nullable=False, server_default='0'))
        batch_op.add_column(sa.Column('answers_count', sa.Integer(), nullable=False, server_default='0'))
        batch_op.alter_column('view_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               server_default='0')
        batch_op.create_index(batch_op.f('ix_articles_answers_count'), ['answers_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_articles_collects_count'), ['collects_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_articles_comments_count'), ['comments_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_articles_likes_count'), ['likes_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_articles_shares_count'), ['shares_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_articles_view_count'), ['view_count'], unique=False)

    with op.batch_alter_table('post_comment_likes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('post_comment_likes_user_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('post_comment_likes_post_comment_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'post_comments', ['post_comment_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('post_comments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('replied_user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('likes_count', sa.Integer(), nullable=False, server_default='0'))
        batch_op.create_index(batch_op.f('ix_post_comments_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_comments_likes_count'), ['likes_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_comments_parent_id'), ['parent_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_comments_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_comments_user_id'), ['user_id'], unique=False)
        batch_op.drop_constraint('post_comments_parent_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('post_comments_post_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['replied_user_id'], ['id'])
        batch_op.create_foreign_key(None, 'post_comments', ['parent_id'], ['id'])

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('view_count',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('view_count',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('post_comments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('post_comments_post_id_fkey', 'posts', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('post_comments_parent_id_fkey', 'post_comments', ['parent_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_post_comments_user_id'))
        batch_op.drop_index(batch_op.f('ix_post_comments_post_id'))
        batch_op.drop_index(batch_op.f('ix_post_comments_parent_id'))
        batch_op.drop_index(batch_op.f('ix_post_comments_likes_count'))
        batch_op.drop_index(batch_op.f('ix_post_comments_created_at'))
        batch_op.drop_column('likes_count')
        batch_op.drop_column('replied_user_id')

    with op.batch_alter_table('post_comment_likes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('post_comment_likes_post_comment_id_fkey', 'post_comments', ['post_comment_id'], ['id'])
        batch_op.create_foreign_key('post_comment_likes_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.drop_column('timestamp')

    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_articles_view_count'))
        batch_op.drop_index(batch_op.f('ix_articles_shares_count'))
        batch_op.drop_index(batch_op.f('ix_articles_likes_count'))
        batch_op.drop_index(batch_op.f('ix_articles_comments_count'))
        batch_op.drop_index(batch_op.f('ix_articles_collects_count'))
        batch_op.drop_index(batch_op.f('ix_articles_answers_count'))
        batch_op.alter_column('view_count',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('answers_count')
        batch_op.drop_column('comments_count')
        batch_op.drop_column('shares_count')
        batch_op.drop_column('collects_count')
        batch_op.drop_column('likes_count')

    # ### end Alembic commands ###
