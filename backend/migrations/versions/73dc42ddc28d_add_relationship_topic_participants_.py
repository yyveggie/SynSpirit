"""Add relationship_topic_participants table

Revision ID: 73dc42ddc28d
Revises: b1339eebd194
Create Date: 2025-04-24 01:30:59.091865

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '73dc42ddc28d'
down_revision = 'b1339eebd194'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('relationship_topic_participants',
    sa.Column('relationship_topic_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['relationship_topic_id'], ['relationship_topics.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('relationship_topic_id', 'topic_id'),
    info={'bind_key': None}
    )
    op.drop_table('post_likes')
    op.drop_table('notifications')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.drop_constraint('categories_name_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_categories_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_categories_slug'), ['slug'], unique=True)

    with op.batch_alter_table('post_comments', schema=None) as batch_op:
        batch_op.drop_constraint('fk_post_comments_parent_id', type_='foreignkey')
        batch_op.create_foreign_key(None, 'post_comments', ['parent_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('topic_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_posts_topic_id'), ['topic_id'], unique=False)
        batch_op.drop_column('is_published')

    with op.batch_alter_table('relationship_topics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('slug', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('relation_type', sa.String(length=50), nullable=True))
        batch_op.create_unique_constraint(None, ['slug'])
        batch_op.drop_constraint('fk_relationship_topics_topic_id', type_='foreignkey')
        batch_op.drop_constraint('fk_relationship_topics_post_id', type_='foreignkey')
        batch_op.drop_column('post_id')
        batch_op.drop_column('topic_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('relationship_topics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('fk_relationship_topics_post_id', 'posts', ['post_id'], ['id'])
        batch_op.create_foreign_key('fk_relationship_topics_topic_id', 'topics', ['topic_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('relation_type')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('description')
        batch_op.drop_column('slug')
        batch_op.drop_column('name')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_published', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_posts_topic_id'))
        batch_op.alter_column('topic_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('post_comments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_post_comments_parent_id', 'post_comments', ['parent_id'], ['id'])

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categories_slug'))
        batch_op.drop_index(batch_op.f('ix_categories_name'))
        batch_op.create_unique_constraint('categories_name_key', ['name'])
        batch_op.alter_column('description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('target_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('target_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('actor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], name='notifications_actor_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_table('post_likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='post_likes_post_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='post_likes_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='post_likes_pkey'),
    sa.UniqueConstraint('post_id', 'user_id', name='unique_post_like')
    )
    op.drop_table('relationship_topic_participants')
    # ### end Alembic commands ###
