"""Add comment likes table and relationship

Revision ID: 2ca10ed637be
Revises: cf4c02f193d8
Create Date: 2025-04-20 11:58:59.740543

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2ca10ed637be'
down_revision = 'cf4c02f193d8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.drop_index('idx_article_vector', postgresql_using='ivfflat')

    with op.batch_alter_table('comment_likes', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('comment_likes_comment_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('comment_likes_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'comments', ['comment_id'], ['id'])

    with op.batch_alter_table('tools', schema=None) as batch_op:
        batch_op.drop_index('idx_tool_vector', postgresql_using='ivfflat')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tools', schema=None) as batch_op:
        batch_op.create_index('idx_tool_vector', ['vector_embedding'], unique=False, postgresql_using='ivfflat')

    with op.batch_alter_table('comment_likes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('comment_likes_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('comment_likes_comment_id_fkey', 'comments', ['comment_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.create_index('idx_article_vector', ['vector_embedding'], unique=False, postgresql_using='ivfflat')

    # ### end Alembic commands ###
