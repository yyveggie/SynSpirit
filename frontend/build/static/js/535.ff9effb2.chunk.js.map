{"version":3,"file":"static/js/535.ff9effb2.chunk.js","mappings":"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","sources":["components/ImageViewer.tsx","components/ActionCommentSection.tsx","components/DynamicTimelineView.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface ImageViewerProps {\n  images: string[];\n  initialIndex?: number;\n  onClose: () => void;\n  isOpen: boolean;\n}\n\n/**\n * 图片查看器组件\n * \n * 功能：\n * - 在当前视野中间显示图片，而非页面顶部\n * - 支持多图切换、放大缩小\n * - 严格限制图片大小，没有多余黑色边框\n * - 响应键盘操作\n */\nconst ImageViewer: React.FC<ImageViewerProps> = ({ images, initialIndex = 0, onClose, isOpen }) => {\n  const [currentIndex, setCurrentIndex] = useState(initialIndex);\n  \n  // 重置索引\n  useEffect(() => {\n    if (isOpen) {\n      setCurrentIndex(initialIndex);\n    }\n  }, [isOpen, initialIndex]);\n  \n  // 键盘事件\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') onClose();\n      else if (e.key === 'ArrowRight') nextImage();\n      else if (e.key === 'ArrowLeft') prevImage();\n    };\n    \n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n    \n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, onClose]);\n  \n  // 导航函数\n  const nextImage = useCallback(() => {\n    setCurrentIndex(prev => (prev + 1) % images.length);\n  }, [images.length]);\n  \n  const prevImage = useCallback(() => {\n    setCurrentIndex(prev => (prev - 1 + images.length) % images.length);\n  }, [images.length]);\n  \n  if (!isOpen || !images.length) return null;\n  \n  // 卡片宽度 - 限制小一些\n  const cardWidth = 500; // 像素\n  \n  const viewerContent = (\n    <div\n      className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/75\"\n      onClick={onClose}\n    >\n      {/* 内容容器 */}\n      <div\n        className=\"relative bg-black p-1 sm:p-2 rounded-lg shadow-xl max-w-[95vw] sm:max-w-2xl md:max-w-3xl lg:max-w-4xl\"\n        onClick={e => e.stopPropagation()}\n      >\n        {/* 图片容器 */}\n        <div\n          className=\"flex items-center justify-center\"\n        >\n          <img\n            src={images[currentIndex]}\n            alt={`View ${currentIndex + 1} of ${images.length}`}\n            style={{\n              maxWidth: 'calc(100vw - 40px)',\n              maxHeight: 'calc(100vh - 80px)',\n              objectFit: 'contain',\n              borderRadius: '4px'\n            }}\n          />\n        </div>\n        \n        {images.length > 1 && (\n          <>\n            <button\n              aria-label=\"Previous image\"\n              className=\"absolute left-2 sm:left-3 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-white text-3xl rounded-full bg-black/40 hover:bg-black/60 transition-all\"\n              onClick={e => { e.stopPropagation(); prevImage(); }}\n            >\n              &#8249;\n            </button>\n            \n            <button\n              aria-label=\"Next image\"\n              className=\"absolute right-2 sm:right-3 top-1/2 -translate-y-1/2 w-10 h-10 flex items-center justify-center text-white text-3xl rounded-full bg-black/40 hover:bg-black/60 transition-all\"\n              onClick={e => { e.stopPropagation(); nextImage(); }}\n            >\n              &#8250;\n            </button>\n            \n            <div\n              className=\"absolute bottom-2 sm:bottom-3 left-1/2 -translate-x-1/2 px-3 py-1 text-sm text-white bg-black/50 rounded-md\"\n            >\n              {currentIndex + 1} / {images.length}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n\n  return createPortal(viewerContent, document.body);\n};\n\nexport default ImageViewer; ","import React, { useState, useEffect, useCallback, useRef, useMemo, memo } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL, DEFAULT_AVATAR } from '../config';\nimport { useAuth } from '../context/AuthContext';\nimport { toast } from 'react-toastify';\nimport { FaHeart, FaRegHeart, FaSpinner, FaReply, FaTrashAlt } from 'react-icons/fa';\nimport { BsArrowReturnRight, BsTrash } from 'react-icons/bs';\nimport UserAvatar from './UserAvatar';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { useMutation, useQueryClient, useQuery, QueryKey } from '@tanstack/react-query';\nimport { RefreshCcw } from 'lucide-react';\n\n// --- 复用 DynamicDetailView 中的类型定义 (或单独定义) ---\ninterface User {\n    id: number;\n    email: string;\n    nickname?: string | null;\n}\n\ninterface CommentUser { \n    id: number;\n    nickname: string | null;\n    email: string | null;\n    avatar?: string | null;\n}\n\ninterface ActionCommentData {\n    id: number;\n    content: string;\n    created_at: string;\n    user_id: number | null;\n    action_id: number;\n    parent_id: number | null;\n    user: CommentUser | null;\n    replies: ActionCommentData[];\n    is_deleted: boolean;\n    likes_count?: number;\n    is_liked?: boolean;\n    is_ai_generated: boolean;\n}\n\n// --- 新增：定义 API 响应的顶层结构 ---\ninterface ActionCommentsApiResponse {\n    comments: ActionCommentData[];\n    // 如果 API 还返回其他如分页等信息，可以在此添加\n}\n\n// --- 修改 CommentItem Props (移除与 ArticleCard 相关的 props) ---\ninterface CommentItemProps {\n    comment: ActionCommentData;\n    currentUser: User | null;\n    depth?: number;\n    isLastReply?: boolean;\n    token: string | null;\n    replyToCommentId: number | null;\n    setReplyToCommentId: (id: number | null) => void;\n    replyContent: string;\n    setReplyContent: (content: string) => void;\n    handleReplySubmit: (parentId: number) => Promise<void>;\n    submittingReply: boolean;\n    formatCommentDate: (dateString: string) => string;\n    handleDeleteComment: (commentId: number) => Promise<void>;\n    forceExpandCommentId: number | null;\n    handleLikeComment: (commentId: number, isLiked: boolean) => Promise<void>;\n    scrollToCommentId?: number | null;\n    onScrolledToComment?: () => void;\n}\n\n// --- 复制 CommentItem 组件 (基本不变) ---\nconst CommentItem: React.FC<CommentItemProps> = memo(({ \n    comment, currentUser, depth = 0, isLastReply = false, token, replyToCommentId, \n    setReplyToCommentId, replyContent, setReplyContent, handleReplySubmit, \n    submittingReply, formatCommentDate, handleDeleteComment, forceExpandCommentId, handleLikeComment,\n    scrollToCommentId, onScrolledToComment\n}) => {\n    // AI 评论的特殊处理\n    const isAIReply = comment.is_ai_generated;\n    const displayName = isAIReply \n                        ? (comment.user?.nickname || 'Lynn')\n                        : (comment.user?.nickname || comment.user?.email?.split('@')[0] || '匿名用户');\n    const userAvatar = isAIReply \n                        ? DEFAULT_AVATAR // 使用配置的AI头像\n                        : comment.user?.avatar;\n    const userIdForAvatar = isAIReply ? undefined : comment.user?.id; // AI 没有真实用户ID，或用特定值\n\n    const indentStyle = { paddingLeft: `${depth * 1.5}rem` };\n    const [isCollapsed, setIsCollapsed] = useState(depth >= 3); \n    const isReplying = replyToCommentId === comment.id;\n    // 修改：AI评论不能被删除\n    const canDelete = currentUser && comment.user && currentUser.id === comment.user.id && !comment.is_deleted && !isAIReply;\n    const hasReplies = comment.replies && comment.replies.length > 0;\n    const replyBoxRef = useRef<HTMLDivElement>(null);\n    const commentItemRef = useRef<HTMLDivElement>(null);\n    \n    const [localIsLiked, setLocalIsLiked] = useState(comment.is_liked || false);\n    const [localLikesCount, setLocalLikesCount] = useState(comment.likes_count || 0);\n    const [isLiking, setIsLiking] = useState(false);\n    const [isStyleReady, setIsStyleReady] = useState(false);\n    \n    const countTotalReplies = (replies: ActionCommentData[] = []): number => {\n        let total = replies.length;\n        for (const reply of replies) {\n        if (reply.replies && reply.replies.length > 0) {\n            total += countTotalReplies(reply.replies);\n        }\n        }\n        return total;\n    };\n    const totalRepliesCount = useMemo(() => countTotalReplies(comment.replies || []), [comment.replies]);\n    \n    const onLikeClick = async () => {\n        if (!token || isLiking || comment.is_deleted) return;\n        setIsLiking(true);\n        const originalLiked = localIsLiked;\n        const originalCount = localLikesCount;\n        setLocalIsLiked(!localIsLiked);\n        setLocalLikesCount(localIsLiked ? localLikesCount - 1 : localLikesCount + 1);\n        try {\n            await handleLikeComment(comment.id, originalLiked);\n        } catch (error) {\n            setLocalIsLiked(originalLiked);\n            setLocalLikesCount(originalCount);\n            toast.error(\"点赞失败\");\n        } finally {\n            setIsLiking(false);\n        }\n    };\n\n    useEffect(() => {\n        if (!isReplying) return;\n        const handleClickOutside = (event: MouseEvent) => {\n        if (replyBoxRef.current && !replyBoxRef.current.contains(event.target as Node)) {\n            setReplyToCommentId(null);\n            setReplyContent(''); // 清除回复内容\n        }\n        };\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, [isReplying, setReplyToCommentId, setReplyContent]); // 添加 setReplyContent 到依赖数组\n\n    useEffect(() => {\n        if (forceExpandCommentId === comment.id) {\n            setIsCollapsed(false);\n        }\n    }, [forceExpandCommentId, comment.id]);\n    \n    useEffect(() => {\n        setLocalIsLiked(comment.is_liked || false);\n        setLocalLikesCount(comment.likes_count || 0);\n    }, [comment.is_liked, comment.likes_count]);\n\n    useEffect(() => {\n        setIsStyleReady(true);\n    }, []);\n\n    useEffect(() => {\n        // 当回复框打开时，滚动到回复框使其可见\n        if (isReplying && replyBoxRef.current) {\n            replyBoxRef.current.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n        }\n    }, [isReplying]);\n\n    useEffect(() => {\n        // 如果当前评论是指定要滚动到的评论\n        if (comment.id === scrollToCommentId && commentItemRef.current) {\n            commentItemRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            onScrolledToComment?.(); // 通知父组件已滚动，可以重置 scrollToCommentId\n        }\n    }, [comment.id, scrollToCommentId, onScrolledToComment, commentItemRef]);\n\n    // --- JSX (基本复用，移除连接线逻辑，简化样式) ---\n    return (\n        <div \n            ref={commentItemRef}\n            className=\"comment-item text-gray-200\" \n            style={{ opacity: isStyleReady ? 1 : 0, transition: 'opacity 0.15s ease-in-out' }}\n        >\n            {/* 移除连接线 div */} \n            <div style={indentStyle} className=\"comment-content-wrapper\">\n                <div className=\"flex items-center space-x-2 mb-1\">\n                    <UserAvatar userId={userIdForAvatar} username={displayName} avatar={userAvatar} size=\"sm\" showName={false}/>\n                    <span className={`text-sm font-medium ${isAIReply ? 'text-purple-400' : (comment.user ? 'text-gray-100' : 'text-gray-400')}`}>\n                        {displayName}\n                    </span>\n                    <span className=\"text-gray-400 text-xs pt-0.5 ml-auto\">{formatCommentDate(comment.created_at)}</span>\n                </div>\n                <div className={`pl-8 ${hasReplies && isCollapsed ? 'pb-0' : (depth > 0 ? 'pb-1' : 'pb-1') }`}>\n                    <p className={`text-sm whitespace-pre-wrap break-words mb-1.5 ${comment.is_deleted ? 'text-gray-500 italic' : (isAIReply ? 'text-purple-50' : 'text-gray-100')}`}>{comment.content}</p>\n                    {!comment.is_deleted && (\n                        <div className=\"flex items-center space-x-3 text-xs mt-1\">\n                            {hasReplies && (\n                                <button \n                                    onClick={() => setIsCollapsed(!isCollapsed)} \n                                    className=\"text-xs text-blue-400 hover:text-blue-300 focus:outline-none min-w-[36px] text-left\"\n                                >\n                                    {isCollapsed ? `[+${totalRepliesCount}]` : '[-]'}\n                                </button>\n                            )}\n                            <button \n                                onClick={() => {\n                                    if (isReplying) {\n                                        setReplyToCommentId(null);\n                                        setReplyContent(''); // 关闭时清空内容\n                                    } else {\n                                        setReplyToCommentId(comment.id);\n                                    }\n                                }} \n                                className=\"flex items-center text-gray-400 hover:text-blue-400 p-0.5 rounded\"\n                            >\n                                <BsArrowReturnRight />\n                            </button>\n                            <button onClick={onLikeClick} disabled={isLiking} className={`flex items-center p-0.5 rounded ${localIsLiked ? 'text-pink-500 hover:text-pink-400' : 'text-gray-400 hover:text-pink-400'}`}>\n                                {localIsLiked ? <FaHeart /> : <FaRegHeart />}\n                                <span \n                                    className=\"ml-1 text-xs tabular-nums\" \n                                    style={{ visibility: localLikesCount > 0 ? 'visible' : 'hidden' }}\n                                >\n                                    {localLikesCount > 0 ? localLikesCount : '0'}\n                                </span>\n                            </button>\n                            {canDelete && <button onClick={() => handleDeleteComment(comment.id)} className=\"flex items-center text-gray-400 hover:text-red-400 p-0.5 rounded\"><BsTrash /></button>}\n                        </div>\n                    )}\n                    {/* 使用 framer-motion 包裹回复框 */}\n                    <motion.div\n                        className=\"relative overflow-hidden mt-2\" // mt-2 原来在内部 div 上，移到 motion.div\n                        initial={false}\n                        animate={{\n                            height: isReplying ? 'auto' : 0,\n                            opacity: isReplying ? 1 : 0,\n                            // marginTop: isReplying ? '0.5rem' : 0, // 保持 Tailwind 的 mt-2\n                        }}\n                        transition={{ duration: 0.25, ease: \"easeInOut\" }}\n                    >\n                        <div ref={replyBoxRef}> {/* ref 用于点击外部检测 */}\n                            <textarea \n                                value={isReplying ? replyContent : ''} // 仅当回复此项时显示和使用 replyContent\n                                onChange={(e) => {\n                                    if (isReplying) setReplyContent(e.target.value);\n                                }} \n                                placeholder={`回复 ${displayName}...`} \n                                rows={2} \n                                className=\"w-full px-2 py-1.5 text-sm rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 resize-none bg-black/10 backdrop-blur-md text-gray-100 placeholder-gray-400\"\n                                autoFocus={isReplying} // 仅在回复时自动聚焦\n                                tabIndex={isReplying ? 0 : -1} // 控制可访问性\n                            />\n                            <button \n                                onClick={async () => { \n                                    // 确保 replyContent 来自当前激活的回复操作\n                                    if (isReplying) await handleReplySubmit(comment.id); \n                                }} \n                                disabled={!replyContent.trim() || submittingReply} \n                                className={`absolute bottom-2 right-2 p-1 rounded-md ${!replyContent.trim() || submittingReply ? 'text-gray-500 cursor-not-allowed' : 'text-blue-400 hover:text-blue-300'}`}\n                                tabIndex={isReplying ? 0 : -1} // 控制可访问性\n                            >\n                                {submittingReply ? <FaSpinner className=\"animate-spin h-4 w-4\" /> : <BsArrowReturnRight className=\"h-4 w-4\" />}\n                            </button>\n                        </div>\n                    </motion.div>\n                </div>\n            </div>\n            {!isCollapsed && comment.replies && comment.replies.length > 0 && (\n                <div className=\"replies-container mt-1\">\n                    {comment.replies.map((reply, index) => (\n                        <CommentItem \n                            key={reply.id} \n                            comment={reply} \n                            currentUser={currentUser} \n                            depth={depth + 1} \n                            isLastReply={index === comment.replies.length - 1} \n                            token={token} \n                            replyToCommentId={replyToCommentId} \n                            setReplyToCommentId={setReplyToCommentId} \n                            replyContent={replyContent} \n                            setReplyContent={setReplyContent} \n                            handleReplySubmit={handleReplySubmit} \n                            submittingReply={submittingReply} \n                            formatCommentDate={formatCommentDate} \n                            handleDeleteComment={handleDeleteComment} \n                            forceExpandCommentId={forceExpandCommentId} \n                            handleLikeComment={handleLikeComment}\n                            scrollToCommentId={scrollToCommentId}\n                            onScrolledToComment={onScrolledToComment}\n                        />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n});\n\n// --- 定义 ActionCommentSection Props --- \ninterface ActionCommentSectionProps {\n    actionId: number;\n    wrapperClassName?: string;\n    wrapperStyle?: React.CSSProperties;\n}\n\n// --- 主组件 ActionCommentSection --- \nconst ActionCommentSection: React.FC<ActionCommentSectionProps> = memo(({ actionId, wrapperClassName, wrapperStyle }) => {\n    const { user: currentUser, token } = useAuth();\n    const queryClient = useQueryClient();\n    const [newComment, setNewComment] = useState('');\n    const [submittingComment, setSubmittingComment] = useState(false);\n    const [replyToCommentId, setReplyToCommentId] = useState<number | null>(null);\n    const [replyContent, setReplyContent] = useState('');\n    const [submittingReply, setSubmittingReply] = useState(false);\n    const [forceExpandCommentId, setForceExpandCommentId] = useState<number | null>(null);\n    const commentInputRef = useRef<HTMLTextAreaElement>(null);\n    const [isCommentBoxFocused, setIsCommentBoxFocused] = useState(false);\n    const [refreshAnimationKey, setRefreshAnimationKey] = useState(0);\n    const [sortBy, setSortBy] = useState<'latest' | 'popular'>('latest');\n    const [scrollToCommentId, setScrollToCommentId] = useState<number | null>(null);\n\n    const formatCommentDate = (dateString: string) => { return new Date(dateString).toLocaleString('zh-CN'); };\n\n    const handleCommentInputFocus = () => {\n        setIsCommentBoxFocused(true);\n    };\n\n    const handleCommentInputBlur = () => {\n        setIsCommentBoxFocused(false);\n    };\n    \n    const handleNewCommentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setNewComment(e.target.value);\n    };\n\n    // --- Modify useQuery for comments ---\n    const commentsQueryKey = useMemo(() => ['actionComments', actionId, sortBy], [actionId, sortBy]);\n\n    const {\n        data: apiResponse,\n        isLoading: loadingComments,\n        isError: isCommentErrorBoolean,\n        error: commentErrorObject,\n        refetch: refetchComments\n    } = useQuery<ActionCommentsApiResponse, Error, ActionCommentsApiResponse, QueryKey>({\n        queryKey: commentsQueryKey,\n        queryFn: async () => {\n            const response = await axios.get<ActionCommentsApiResponse>(`${API_BASE_URL}/api/actions/${actionId}/comments?sort_by=${sortBy}`, {\n                headers: token ? { 'Authorization': `Bearer ${token}` } : {}\n            });\n            return response.data;\n        },\n        enabled: !!actionId,\n        placeholderData: (previousData) => previousData\n    });\n\n    const comments = apiResponse?.comments || [];\n    const commentError = isCommentErrorBoolean ? commentErrorObject?.message || '加载评论失败' : null;\n\n    const handleRefreshComments = () => {\n        refetchComments();\n        setRefreshAnimationKey(prev => prev + 1);\n        toast.info(\"正在刷新评论...\");\n    };\n\n    // --- Add handler for sort change ---\n    const handleSortChange = (newSortBy: 'latest' | 'popular') => {\n        setSortBy(newSortBy);\n        toast.info(newSortBy === 'latest' ? \"按最新排序\" : \"按热门排序\");\n    };\n\n    // --- Mutations (Example: Submit Comment) ---\n    const submitCommentMutation = useMutation<\n        ActionCommentData,\n        Error,\n        { content: string; mentionLynn?: boolean }\n    >({\n        mutationFn: async ({ content, mentionLynn }) => {\n            const postUrl = `${API_BASE_URL}/api/actions/${actionId}/comments`;\n            \n            const requestBody: { content: string; mention_lynn?: boolean } = {\n                content: content.trim(),\n            };\n            if (mentionLynn) {\n                requestBody.mention_lynn = true;\n            }\n\n            const response = await axios.post<ActionCommentData>(\n                postUrl,\n                requestBody,\n                { headers: { Authorization: `Bearer ${token}` } }\n            );\n            return response.data;\n        },\n        onSuccess: () => {\n            queryClient.invalidateQueries({ queryKey: ['actionComments', actionId] });\n            setNewComment('');\n            toast.success('评论发表成功！');\n        },\n        onError: (err) => {\n            console.error(\"提交动态评论失败:\", err);\n            toast.error(err.message || '评论提交失败');\n        },\n        onSettled: () => {\n            setSubmittingComment(false);\n        }\n    });\n\n    const handleSubmitComment = () => {\n        if (!token || !newComment.trim()) {\n            toast.warn(\"评论内容不能为空且需要登录。\");\n            return;\n        }\n        setSubmittingComment(true);\n\n        const mentionLynn = newComment.toLowerCase().includes('@lynn');\n\n        submitCommentMutation.mutate({ content: newComment, mentionLynn });\n    };\n    \n    // --- Submit Reply Mutation (Similar structure) ---\n    const submitReplyMutation = useMutation<\n        ActionCommentData,\n        Error,\n        { parentId: number, content: string, mentionLynn?: boolean }\n    >({\n        mutationFn: async ({ parentId, content, mentionLynn }) => {\n            const replyUrl = `${API_BASE_URL}/api/actions/${actionId}/comments`;\n            \n            const requestBody: { content: string; parent_id: number; mention_lynn?: boolean } = {\n                content: content.trim(),\n                parent_id: parentId,\n            };\n            if (mentionLynn) {\n                requestBody.mention_lynn = true;\n            }\n\n            const response = await axios.post<ActionCommentData>(\n                replyUrl,\n                requestBody,\n                { headers: { Authorization: `Bearer ${token}` } }\n            );\n            return response.data;\n        },\n        onSuccess: (newReplyData) => {\n            queryClient.invalidateQueries({ queryKey: ['actionComments', actionId] });\n            setReplyContent('');\n            setReplyToCommentId(null);\n            toast.success('回复成功！');\n            if (newReplyData && newReplyData.id) {\n                setScrollToCommentId(newReplyData.id);\n                if (newReplyData.parent_id) {\n                    setForceExpandCommentId(newReplyData.parent_id);\n                }\n            }\n        },\n        onError: (err) => {\n            console.error(\"提交动态回复失败:\", err);\n            toast.error(err.message || '回复提交失败');\n        },\n        onSettled: () => {\n            setSubmittingReply(false);\n        }\n    });\n\n    const handleSubmitReply = async (parentId: number) => {\n        if (!token || !replyContent.trim()) {\n            toast.warn(\"回复内容不能为空且需要登录。\");\n            return;\n        }\n        setSubmittingReply(true);\n\n        const mentionLynnForReply = replyContent.toLowerCase().includes('@lynn');\n\n        await submitReplyMutation.mutate({ parentId, content: replyContent, mentionLynn: mentionLynnForReply });\n    };\n\n    const handleDeleteComment = useCallback(async (commentId: number) => {\n        if (!token || !window.confirm(\"删除评论?\")) return;\n        try {\n            await axios.delete(`${API_BASE_URL}/api/comments/${commentId}`, { headers: { 'Authorization': `Bearer ${token}` } });\n            queryClient.invalidateQueries({ queryKey: ['actionComments', actionId] });\n            toast.success(\"已删除\");\n        } catch (err) { toast.error('删除失败'); }\n    }, [token, actionId, queryClient]);\n\n    const handleLikeComment = useCallback(async (commentId: number, isLiked: boolean) => {\n        if (!token) return;\n        const url = `${API_BASE_URL}/api/comments/${commentId}/like?target_type=action`;\n        try {\n            if (isLiked) { await axios.delete(url, { headers: { 'Authorization': `Bearer ${token}` } }); }\n            else { await axios.post(url, {}, { headers: { 'Authorization': `Bearer ${token}` } }); }\n            queryClient.invalidateQueries({ queryKey: ['actionComments', actionId] });\n        } catch (err) { \n            toast.error('点赞操作失败');\n            throw err;\n        }\n    }, [token, actionId, queryClient]);\n\n    const handleSetReplyTo = useCallback((id: number | null) => {\n        setReplyToCommentId(id);\n        if (id !== null) {\n            setForceExpandCommentId(id); // 当开始回复时，强制展开该评论\n        } else {\n            // Optional: If you want to reset forceExpand when reply box is closed, \n            // but usually we want it to stay expanded once interacted with.\n            // setForceExpandCommentId(null); \n        }\n    }, [setReplyToCommentId, setForceExpandCommentId]);\n\n    return (\n        <div \n            className={`action-comment-section ${wrapperClassName || ''}`} \n            style={wrapperStyle}\n        >\n            {/* 评论输入区域 和 右侧按钮组 - 使用 Flex 布局 */}\n            {currentUser && token && (\n                <div className=\"mb-6 flex items-center space-x-2\"> \n                    {/* 输入框容器 (占据大部分空间) */}\n                    <div className=\"relative flex-grow\"> \n                        <textarea \n                            ref={commentInputRef} \n                            value={newComment}\n                            onChange={handleNewCommentChange}\n                            onFocus={handleCommentInputFocus}\n                            onBlur={handleCommentInputBlur}\n                            className={`w-full px-3 py-2 pb-10 bg-black/10 backdrop-blur-md rounded-lg \n                                focus:outline-none focus:ring-1 focus:ring-blue-500 text-gray-100 text-sm \n                                border border-gray-700/50 transition-all duration-300 ease-in-out \n                                overflow-y-auto resize-none \n                                ${isCommentBoxFocused || newComment.trim() ? 'h-20' : 'h-12'}`}\n                            placeholder=\"添加评论...\"\n                            rows={isCommentBoxFocused || newComment.trim() ? 3 : 1}\n                            disabled={submitCommentMutation.isPending}\n                            onKeyDown={(e) => { \n                                if ((e.ctrlKey || e.metaKey) && e.key === 'Enter' && newComment.trim()) {\n                                    handleSubmitComment();\n                                }\n                            }}\n                        />\n                        {/* 发送按钮 (保持在输入框内部右下角) */}\n                        {(isCommentBoxFocused || newComment.trim()) && (\n                            <button \n                                onClick={handleSubmitComment} \n                                disabled={submitCommentMutation.isPending || !newComment.trim()}\n                                className=\"absolute bottom-2 right-2 z-20 p-1.5 text-blue-400 hover:text-blue-300 disabled:text-gray-500 disabled:cursor-not-allowed transition-colors duration-150 rounded-md hover:bg-gray-700/50 active:bg-gray-600/40 focus:outline-none\"\n                                title=\"发送 (Cmd/Ctrl+Enter)\"\n                            >\n                                {submitCommentMutation.isPending ? (\n                                    <FaSpinner className=\"animate-spin h-4 w-4\" />\n                                ) : (\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 transform rotate-180\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 10h10a8 8 0 018 8v2M3 10l4-4m-4 4l4 4\" /></svg>\n                                )}\n                            </button>\n                        )}\n                    </div>\n\n                    {/* 右侧按钮组：最新、热门、刷新 (Flex 容器) */}\n                    <div className=\"flex items-center space-x-1.5 flex-shrink-0\"> {/* 使用 space-x-1.5 或 space-x-2 调整按钮间距 */}\n                        <button\n                            onClick={() => handleSortChange('latest')}\n                            className={`px-3 py-1.5 rounded-full border transition-colors text-xs font-medium ${ \n                                sortBy === 'latest' \n                                    ? 'bg-gray-700/60 border-gray-500 text-gray-200' \n                                    : 'bg-transparent border-gray-600 text-gray-400 hover:border-gray-400 hover:text-gray-300'\n                            }`}\n                        >\n                            最新\n                        </button>\n                        <button\n                            onClick={() => handleSortChange('popular')}\n                            className={`px-3 py-1.5 rounded-full border transition-colors text-xs font-medium ${ \n                                sortBy === 'popular' \n                                    ? 'bg-gray-700/60 border-gray-500 text-gray-200' \n                                    : 'bg-transparent border-gray-600 text-gray-400 hover:border-gray-400 hover:text-gray-300'\n                            }`}\n                        >\n                            热门\n                        </button>\n                        <button\n                            onClick={handleRefreshComments}\n                            disabled={loadingComments}\n                            className=\"p-1.5 text-gray-400 hover:text-blue-300 active:text-blue-500 transition-colors duration-150 rounded-full hover:bg-gray-700/40 active:bg-gray-600/40 focus:outline-none\"\n                            title=\"刷新评论\"\n                        >\n                            {loadingComments ? (\n                                <FaSpinner className=\"animate-spin h-4 w-4\" />\n                            ) : (\n                                <motion.div\n                                    key={`action-comment-refresh-${refreshAnimationKey}`}\n                                    initial={{ rotate: 0 }}\n                                    animate={{ rotate: 360 }}\n                                    transition={{ duration: 0.4, ease: \"linear\" }}\n                                    style={{ display: 'flex' }}\n                                >\n                                    <RefreshCcw className=\"h-4 w-4 block\" />\n                                </motion.div>\n                            )}\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {/* 评论列表区域 */}\n            <div className=\"relative\">\n                {/* 评论列表 */} \n                {loadingComments && !comments.length && (\n                    <div className=\"flex justify-center items-center py-8\">\n                        <FaSpinner className=\"animate-spin h-6 w-6 text-blue-400\" />\n                        <p className=\"ml-2 text-gray-300\">正在加载评论...</p>\n                    </div>\n                )}\n                {isCommentErrorBoolean && (\n                    <div className=\"text-center py-4 text-red-400\">\n                        <p>{commentError || \"加载评论出错，请稍后重试或刷新页面。\"}</p>\n                    </div>\n                )}\n                {/* 修改：移除\"暂无评论\"的特定文本提示，直接依赖下方 comments.length > 0 的判断来显示空白或列表 */}\n                {!loadingComments && !isCommentErrorBoolean && comments.length === 0 && (\n                    <div className=\"py-6\"></div> // 留白，不再显示文字\n                )}\n                {comments.length > 0 && (\n                    <div className=\"comments-list space-y-2 md:space-y-3 pt-3\">\n                        {comments.map((comment, index) => (\n                            <CommentItem \n                                key={comment.id} \n                                comment={comment} \n                                currentUser={currentUser} \n                                token={token} \n                                replyToCommentId={replyToCommentId} \n                                setReplyToCommentId={handleSetReplyTo}\n                                replyContent={replyContent} \n                                setReplyContent={setReplyContent} \n                                handleReplySubmit={handleSubmitReply} \n                                submittingReply={submittingReply} \n                                formatCommentDate={formatCommentDate} \n                                handleDeleteComment={handleDeleteComment} \n                                forceExpandCommentId={forceExpandCommentId} \n                                handleLikeComment={handleLikeComment}\n                                scrollToCommentId={scrollToCommentId}\n                                onScrolledToComment={() => setScrollToCommentId(null)}\n                                isLastReply={index === comments.length - 1}\n                            />\n                        ))}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default ActionCommentSection; ","import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios'; // 导入 axios\nimport { useTimeline } from '../contexts/TimelineContext';\nimport { API_BASE_URL } from '../config'; // 导入 API base URL\nimport DynamicCard from './DynamicCard'; // 导入 DynamicCard\n// --- 导入 QuotedDynamicView 以获取其类型 --- \nimport { DynamicDetails } from './QuotedDynamicView'; \nimport SkeletonDynamicCard from './SkeletonDynamicCard'; // <--- 导入骨架屏组件\n// --- 新增：导入评论区组件 (假设我们创建一个新的或复用 Simple) --- \n// import CommentSectionForCard from './CommentSectionForCard'; // 稍后创建或替换\n// --- 新增：导入 ActionCommentSection --- \nimport ActionCommentSection from './ActionCommentSection'; \nimport { useAuth } from '../context/AuthContext';\nimport ImageViewer from './ImageViewer';\nimport { useQueryClient, useQuery } from '@tanstack/react-query'; // 导入TanStack Query\n// import { FaArrowLeft } from 'react-icons/fa'; // 不再使用左箭头\nimport { IoMdClose } from 'react-icons/io'; // 使用关闭图标\nimport { motion } from 'framer-motion'; // <--- 确认导入 motion\n\n// --- 修改：TimelineData 现在是一个扁平列表 --- \ntype TimelineData = DynamicDetails[]; \n\n/**\n * 动态时间线视图组件\n * \n * 显示与选定动态相关的时间线动态，包括：\n * - 原始动态及其评论\n * - 支持图片查看\n * - 紧凑型布局设计，显示更多评论内容\n * - 使用TanStack Query缓存数据，提高性能\n * - 卡片宽度扩展，减少右侧空白\n * - 移除了垂直连接线和原点标记\n * - 支持延迟加载评论区，以提高初始渲染性能\n */\n\n// 骨架屏组件\nconst TimelineSkeleton = () => (\n  <div>\n    {Array.from({ length: 3 }).map((_, i) => (\n      <div key={i} className=\"animate-pulse bg-gray-200 h-16 rounded mb-3\" />\n    ))}\n  </div>\n);\n\n// timeline数据获取函数\nconst fetchTimeline = async (actionId: number, token?: string) => {\n  if (!actionId) return null;\n  const response = await axios.get(\n    `${API_BASE_URL}/api/actions/${actionId}/timeline`,\n    { headers: token ? { Authorization: `Bearer ${token}` } : {} }\n  );\n  if (response.data && Array.isArray(response.data)) {\n    return response.data.reverse();\n  }\n  return response.data;\n};\n\nconst DynamicTimelineView: React.FC = () => {\n  const { selectedDynamicId, closeTimeline, selectedDynamicData } = useTimeline();\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n  const [viewerImages, setViewerImages] = useState<string[]>([]);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const { token } = useAuth();\n  const queryClient = useQueryClient();\n  \n  // 移除 visibleCommentSections 状态\n  // const [visibleCommentSections, setVisibleCommentSections] = useState<{ [key: number]: boolean }>({});\n\n  // 使用TanStack Query缓存数据\n  const { \n    data: actualData,\n    isLoading,\n    isFetching,\n    error, \n    status\n  } = useQuery<TimelineData | null>({\n    queryKey: ['timeline', selectedDynamicId],\n    queryFn: () => selectedDynamicId ? fetchTimeline(selectedDynamicId as number, token || undefined) : Promise.resolve(null),\n    enabled: !!selectedDynamicId,\n    staleTime: 1000 * 60 * 5,\n    gcTime: 1000 * 60 * 10,\n    placeholderData: () => {\n      if (selectedDynamicData && selectedDynamicData.action_id) {\n        return [selectedDynamicData as DynamicDetails]; \n      }\n      return undefined; \n    },\n  });\n\n  // 打开图片查看器\n  const handleImageClick = (images: string[], index: number) => {\n    setViewerImages(images.filter(img => img)); // 过滤掉空图片链接\n    setCurrentImageIndex(index);\n    setIsViewerOpen(true);\n    \n    // 记录当前滚动位置，以便图片关闭后恢复\n    document.body.setAttribute('data-scroll-position', window.scrollY.toString());\n  };\n  \n  // 关闭图片查看器\n  const handleCloseViewer = () => {\n    setIsViewerOpen(false);\n    \n    // 恢复滚动位置\n    const savedPosition = document.body.getAttribute('data-scroll-position');\n    if (savedPosition) {\n      setTimeout(() => {\n        window.scrollTo({\n          top: parseInt(savedPosition, 10),\n          behavior: 'auto'\n        });\n      }, 100);\n    }\n  };\n\n  // 判断是否需要显示骨架屏\n  const hasDisplayData = !!(actualData && actualData.length > 0);\n  const isFirstLoading = isLoading && !hasDisplayData && status === 'pending';\n\n  const renderContent = () => {\n    const displayData = actualData ?? (selectedDynamicData && selectedDynamicData.action_id ? [selectedDynamicData as DynamicDetails] : null);\n\n    // 2. 加载出错\n    if (status === 'error') {\n      console.log(\"[TimelineView] Render: Error\");\n      return (\n        <div className=\"relative px-1 pt-2 pb-2\">\n          <div className=\"p-4 text-red-400\">{(error as Error).message || '获取时间线数据失败'}</div>\n        </div>\n      );\n    }\n    // 3. 有数据显示 (无论是真实数据还是占位数据)\n    if (displayData && displayData.length === 0) {\n      console.log(\"[TimelineView] Render: Empty Data\");\n      return (\n        <div className=\"relative px-1 pt-2 pb-2\">\n          <div className=\"p-4 text-gray-500\">未能加载时间线数据或此动态没有更多上下文。</div>\n        </div>\n      );\n    }\n    // 渲染真实数据\n    return (\n      <div className=\"relative px-1 pt-2 pb-2\">\n        {/* 过滤已删除的动态 */}\n        {(() => {\n          // 过滤掉已删除的动态\n          const filteredData = displayData?.filter(dynamic => !dynamic.is_deleted);\n          \n          if(!filteredData || filteredData.length === 0) {\n            return <div className=\"p-4 text-gray-500\">未能加载时间线数据或此动态已被删除。</div>;\n          }\n          \n          return (\n            <motion.div \n              className=\"relative space-y-5 mt-0 w-full\"\n              variants={{\n                hidden: { opacity: 0 },\n                visible: {\n                  opacity: 1,\n                  transition: {\n                    staggerChildren: 0.1\n                  }\n                }\n              }}\n              initial=\"hidden\"\n              animate=\"visible\"\n            >\n              {filteredData.map((dynamic, index) => {\n                return (\n                <motion.div \n                  key={dynamic.action_id} \n                  className={`w-full relative ${index === filteredData.length - 1 ? 'mb-0' : ''}`}\n                  variants={{\n                    hidden: { opacity: 0, y: 20 },\n                    visible: { opacity: 1, y: 0 }\n                  }}\n                >\n                  <div className=\"w-full flex flex-col gap-3 relative\">\n                    <DynamicCard \n                      dynamic={dynamic} \n                      variant=\"timeline\"\n                      onImageClick={handleImageClick}\n                      forceExpandContent={true}\n                      onActionComplete={handleActionComplete}\n                      className=\"w-[750px] max-w-[750px] pr-0 mx-auto z-10\"\n                    />\n                    <ActionCommentSection \n                      actionId={dynamic.action_id}\n                      wrapperClassName=\"relative w-[750px] max-w-[750px] mx-auto mt-1 max-h-[450px] overflow-y-auto pr-0 bg-opacity-5 bg-purple-900 rounded-md p-2\"\n                      wrapperStyle={{ scrollbarWidth: 'thin' }}\n                    />\n                  </div>\n                </motion.div>\n                );\n              })}\n            </motion.div>\n          );\n        })()}\n        \n        {isViewerOpen && (\n          <ImageViewer\n            images={viewerImages}\n            initialIndex={currentImageIndex}\n            onClose={handleCloseViewer}\n            isOpen={isViewerOpen}\n          />\n        )}\n      </div>\n    );\n  };\n\n  // 添加一个处理操作完成的回调函数\n  const handleActionComplete = useCallback(() => {\n    // 当卡片上的操作(如点赞/收藏/删除)完成时，刷新数据\n    if (selectedDynamicId) {\n      console.log('操作完成，刷新时间线数据:', selectedDynamicId);\n      \n      // 强制刷新时间线数据\n      queryClient.invalidateQueries({\n        queryKey: ['timeline', selectedDynamicId],\n      });\n      \n      // 同时刷新全局动态列表，确保删除操作同步到主页面\n      queryClient.invalidateQueries({\n        queryKey: ['dynamics'],\n      });\n    }\n  }, [selectedDynamicId, queryClient]);\n\n  // 移除或调整useEffect，因为它依赖于 visibleCommentSections\n  useEffect(() => {\n    if (selectedDynamicId) {\n        // Placeholder\n    }\n  }, [selectedDynamicId, queryClient]); // 保持 queryClient 作为依赖，如果将来有其他基于 queryClient 的逻辑\n\n  // 预取逻辑：鼠标悬停时预取 timeline\n  const handleCardMouseEnter = (actionId: number | null) => {\n    if (!actionId) return;\n    queryClient.prefetchQuery({\n      queryKey: ['timeline', actionId],\n      queryFn: () => fetchTimeline(actionId, token || undefined),\n    });\n  };\n\n  // 监听浏览器返回按钮\n  useEffect(() => {\n    const handlePopState = (event: PopStateEvent) => {\n      // 如果用户点击了浏览器的后退按钮，需要检查是否在动态详情页\n      if (window.location.pathname.startsWith('/dynamic/')) {\n        // 如果还在动态详情页，但state丢失了，我们主动关闭时间线\n        if (!event.state || !event.state.dynamicId) {\n          console.log('检测到popstate事件，关闭时间线');\n          closeTimeline();\n          \n          // 强制恢复URL\n          const previousUrl = sessionStorage.getItem('previousUrl') || '/';\n          sessionStorage.removeItem('previousUrl');\n          window.history.replaceState(null, '', previousUrl);\n        }\n      }\n    };\n\n    window.addEventListener('popstate', handlePopState);\n    return () => {\n      window.removeEventListener('popstate', handlePopState);\n    };\n  }, [closeTimeline]);\n\n  // 新增一个包装函数处理关闭\n  const handleClose = () => {\n    // 1. 先执行原有的关闭逻辑\n    closeTimeline();\n    \n    // 2. 直接通过window.history强制恢复URL\n    if (window.location.pathname.startsWith('/dynamic/')) {\n      const previousUrl = sessionStorage.getItem('previousUrl') || '/';\n      console.log('强制恢复URL从', window.location.pathname, '到', previousUrl);\n      sessionStorage.removeItem('previousUrl');\n      window.history.replaceState(null, '', previousUrl);\n    }\n  };\n\n  return (\n    <div className=\"w-full px-0 text-white relative h-full overflow-y-auto scrollbar-thin scrollbar-thumb-gray-600 scrollbar-track-transparent\">\n      {/* 关闭按钮移到这里，脱离滚动容器的影响 */}\n      <button \n        onClick={handleClose} \n        className=\"fixed right-4 top-[var(--navbar-height,0px)] z-50 p-1.5 rounded-full text-white bg-blue-600/60 hover:bg-blue-500/80 transition-all duration-150 backdrop-blur-sm shadow-md\" \n        aria-label=\"关闭时间线\" \n        title=\"关闭时间线\"\n      >\n        <IoMdClose className=\"h-4 w-4\" />\n      </button>\n      \n      {/* 骨架屏只在首次无数据时显示 */}\n      {isFirstLoading ? (\n        <TimelineSkeleton />\n      ) : (\n        renderContent()\n      )}\n    </div>\n  );\n};\n\nexport default DynamicTimelineView; "],"names":["_ref","images","initialIndex","onClose","isOpen","currentIndex","setCurrentIndex","useState","useEffect","handleKeyDown","e","key","nextImage","prevImage","window","addEventListener","removeEventListener","useCallback","prev","length","viewerContent","_jsx","className","onClick","children","_jsxs","stopPropagation","src","alt","style","maxWidth","maxHeight","objectFit","borderRadius","_Fragment","createPortal","document","body","CommentItem","memo","_comment$user","_comment$user2","_comment$user3","_comment$user3$email","_comment$user4","_comment$user5","comment","currentUser","depth","isLastReply","token","replyToCommentId","setReplyToCommentId","replyContent","setReplyContent","handleReplySubmit","submittingReply","formatCommentDate","handleDeleteComment","forceExpandCommentId","handleLikeComment","scrollToCommentId","onScrolledToComment","isAIReply","is_ai_generated","displayName","user","nickname","email","split","userAvatar","DEFAULT_AVATAR","avatar","userIdForAvatar","undefined","id","indentStyle","paddingLeft","isCollapsed","setIsCollapsed","isReplying","canDelete","is_deleted","hasReplies","replies","replyBoxRef","useRef","commentItemRef","localIsLiked","setLocalIsLiked","is_liked","localLikesCount","setLocalLikesCount","likes_count","isLiking","setIsLiking","isStyleReady","setIsStyleReady","countTotalReplies","arguments","total","reply","totalRepliesCount","useMemo","handleClickOutside","event","current","contains","target","scrollIntoView","behavior","block","ref","opacity","transition","UserAvatar","userId","username","size","showName","created_at","content","BsArrowReturnRight","async","originalLiked","originalCount","error","toast","disabled","FaHeart","FaRegHeart","visibility","BsTrash","motion","div","initial","animate","height","duration","ease","value","onChange","placeholder","rows","autoFocus","tabIndex","trim","FaSpinner","map","index","_ref2","actionId","wrapperClassName","wrapperStyle","useAuth","queryClient","useQueryClient","newComment","setNewComment","submittingComment","setSubmittingComment","setSubmittingReply","setForceExpandCommentId","commentInputRef","isCommentBoxFocused","setIsCommentBoxFocused","refreshAnimationKey","setRefreshAnimationKey","sortBy","setSortBy","setScrollToCommentId","dateString","Date","toLocaleString","commentsQueryKey","data","apiResponse","isLoading","loadingComments","isError","isCommentErrorBoolean","commentErrorObject","refetch","refetchComments","useQuery","queryKey","queryFn","axios","get","API_BASE_URL","headers","enabled","placeholderData","previousData","comments","commentError","message","handleSortChange","newSortBy","info","submitCommentMutation","useMutation","mutationFn","mentionLynn","_ref3","postUrl","requestBody","mention_lynn","post","Authorization","onSuccess","invalidateQueries","success","onError","err","console","onSettled","handleSubmitComment","warn","toLowerCase","includes","mutate","submitReplyMutation","parentId","_ref4","replyUrl","parent_id","newReplyData","handleSubmitReply","mentionLynnForReply","confirm","delete","commentId","isLiked","url","handleSetReplyTo","onFocus","handleCommentInputFocus","onBlur","handleCommentInputBlur","isPending","onKeyDown","ctrlKey","metaKey","title","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","handleRefreshComments","rotate","display","RefreshCcw","TimelineSkeleton","Array","from","_","i","fetchTimeline","response","isArray","reverse","DynamicTimelineView","selectedDynamicId","closeTimeline","selectedDynamicData","useTimeline","isViewerOpen","setIsViewerOpen","viewerImages","setViewerImages","currentImageIndex","setCurrentImageIndex","actualData","isFetching","status","Promise","resolve","staleTime","gcTime","action_id","handleImageClick","filter","img","setAttribute","scrollY","toString","handleCloseViewer","savedPosition","getAttribute","setTimeout","scrollTo","top","parseInt","hasDisplayData","isFirstLoading","handleActionComplete","log","handlePopState","location","pathname","startsWith","state","dynamicId","previousUrl","sessionStorage","getItem","removeItem","history","replaceState","handleClose","IoMdClose","renderContent","displayData","filteredData","dynamic","variants","hidden","visible","staggerChildren","y","DynamicCard","variant","onImageClick","forceExpandContent","onActionComplete","ActionCommentSection","scrollbarWidth","ImageViewer"],"sourceRoot":""}