{"version":3,"file":"static/js/512.988991b5.chunk.js","mappings":"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","sources":["pages/NewCommunityPostPageToast.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { API_BASE_URL } from '../config';\nimport { useAuth } from '../context/AuthContext';\nimport ToastEditorWrapper from '../components/ToastEditorWrapper';\nimport axios from 'axios';\nimport { useSidebar } from '../contexts/SidebarContext';\nimport { useQueryClient } from '@tanstack/react-query';\n\n// Interface for Community data\ninterface Community {\n    id: number;\n    name: string;\n    slug: string;\n    description?: string;\n    // Add other relevant fields if needed\n}\n\nconst NewCommunityPostPageToast: React.FC = () => {\n  const { community_slug } = useParams<{ community_slug: string }>();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [communityName, setCommunityName] = useState<string>(''); // State to hold community name\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { isSidebarOpen } = useSidebar();\n  const navigate = useNavigate();\n  const { token } = useAuth();\n  const queryClient = useQueryClient();\n  // 添加状态记录社区类型和ID\n  const [communityType, setCommunityType] = useState<'topic' | 'relationship_topic' | null>(null);\n  const [communityId, setCommunityId] = useState<number | null>(null);\n\n  // Fetch community details based on slug\n  useEffect(() => {\n    const fetchCommunityDetails = async () => {\n      // console.log('[Debug] community_slug from URL params:', community_slug);\n      if (!community_slug) {\n        // console.error('[Debug] community_slug is missing!');\n        setError(\"无效的社区标识符\");\n        return;\n      }\n      try {\n        // 首先尝试获取普通主题\n        const topicResponse = await axios.get(`${API_BASE_URL}/api/slug/${community_slug}`);\n        // 如果成功获取到主题数据\n        if (topicResponse.data && topicResponse.data.name) {\n          setCommunityName(topicResponse.data.name);\n          setCommunityType('topic');\n          setCommunityId(topicResponse.data.id);\n          console.log('获取到主题数据:', topicResponse.data);\n        }\n      } catch (topicErr) {\n        console.log('主题获取失败，尝试获取关系主题');\n        // 如果普通主题获取失败，尝试关系主题\n        try {\n          const relationshipResponse = await axios.get(`${API_BASE_URL}/api/relationship-topics/slug/${community_slug}`);\n          if (relationshipResponse.data && relationshipResponse.data.name) {\n            setCommunityName(relationshipResponse.data.name);\n            setCommunityType('relationship_topic');\n            setCommunityId(relationshipResponse.data.id);\n            console.log('获取到关系主题数据:', relationshipResponse.data);\n          } else {\n            setError(\"无法从服务器获取社区名称\");\n          }\n        } catch (relationshipErr) {\n          console.error(\"无法获取社区信息:\", relationshipErr);\n          setError(\"无法加载社区信息\");\n        }\n      }\n    };\n    fetchCommunityDetails();\n  }, [community_slug]);\n\n  useEffect(() => {\n    if (!token) {\n      console.log(\"No token found, redirecting to login\");\n      navigate('/login', { state: { from: `/community/${community_slug}/new-post-toast` } });\n    }\n  }, [token, navigate, community_slug]);\n\n  const handleEditorChange = (value: string) => {\n    setContent(value);\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!token) {\n      setError('需要登录才能发帖。');\n      return;\n    }\n    if (!community_slug) {\n        setError('无效的社区标识。');\n        return;\n    }\n    \n    // 检查必要的社区信息\n    if (!communityId || !communityType) {\n      setError('无法确定社区信息，请刷新页面重试。');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('content', content);\n    \n    // 根据社区类型添加对应的参数\n    if (communityType === 'topic') {\n      formData.append('topic_id', communityId.toString());\n    } else if (communityType === 'relationship_topic') {\n      formData.append('relationship_topic_id', communityId.toString());\n    }\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/posts/`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          // Content-Type is set automatically for FormData by axios\n        },\n      });\n      setSuccess('帖子创建成功!');\n      setTitle('');\n      setContent('');\n      \n      // --- 在导航前使缓存失效 ---\n      const queryKey = communityType === 'topic' \n        ? ['topicPosts', community_slug] \n        : ['relationshipTopicPosts', community_slug]; // 假设关系社区的 key\n      if (community_slug) {\n          console.log(`[NewCommunityPostPageToast] Invalidating query cache for key:`, queryKey);\n          await queryClient.invalidateQueries({ queryKey: queryKey });\n      } else {\n          console.warn('[NewCommunityPostPageToast] community_slug is undefined, cannot invalidate query cache.');\n      }\n      // ------------------------\n      \n      // 跳转到对应的社区主题页面\n      if (communityType === 'topic') {\n        navigate(`/community/topic/${community_slug}`);\n      } else if (communityType === 'relationship_topic') {\n        navigate(`/community/relationship-topic/${community_slug}`);\n      } else {\n        // 如果无法确定类型或 slug 丢失，回退到通用社区页\n        navigate(community_slug ? `/community/${community_slug}` : '/community'); \n      }\n    } catch (err: any) {\n      console.error('Error creating post:', err.response?.data || err.message);\n      setError(err.response?.data?.error || '创建帖子失败');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-transparent text-gray-100\">\n      {/* 移除Navbar组件 */}\n      <div className=\"flex flex-1 pt-12\">\n        {/* 移除SideNavbar组件 */}\n        <main className={`flex-1 p-3 overflow-y-auto transition-all duration-300 ${isSidebarOpen ? 'lg:ml-64' : 'ml-0'}`}>\n          <h1 className=\"text-3xl font-bold mb-2 text-gray-100\">在 \"{communityName || community_slug}\" 中创建新帖子</h1>\n          {error && <div className=\"bg-red-700 text-white p-3 rounded mb-3\">{error}</div>}\n          {success && <div className=\"bg-green-700 text-white p-3 rounded mb-3\">{success}</div>}\n\n          <form onSubmit={handleSubmit} className=\"bg-gray-850/70 p-3 rounded-lg shadow-xl border border-gray-700 backdrop-blur-sm\">\n            <div>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                required\n                className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 text-gray-100 focus:ring-indigo-500 focus:border-indigo-500 placeholder-gray-400\"\n                placeholder=\"帖子标题\"\n              />\n            </div>\n\n            <div className=\"my-4\">\n              <div className=\"rounded bg-white\">\n                <ToastEditorWrapper \n                  initialData={content}\n                  onChange={handleEditorChange}\n                  token={token}\n                  placeholder=\"分享你的想法...\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex justify-end mt-2\">\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className={`py-2 px-4 rounded font-medium ${\n                  isLoading ? 'bg-gray-500 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700 focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                } text-white`}\n              >\n                {isLoading ? '发布中...' : '发布帖子'}\n              </button>\n            </div>\n          </form>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default NewCommunityPostPageToast; "],"names":["NewCommunityPostPageToast","community_slug","useParams","title","setTitle","useState","content","setContent","communityName","setCommunityName","error","setError","success","setSuccess","isLoading","setIsLoading","isSidebarOpen","useSidebar","navigate","useNavigate","token","useAuth","queryClient","useQueryClient","communityType","setCommunityType","communityId","setCommunityId","useEffect","async","topicResponse","axios","get","API_BASE_URL","data","name","id","console","log","topicErr","relationshipResponse","relationshipErr","fetchCommunityDetails","state","from","_jsx","className","children","_jsxs","onSubmit","event","preventDefault","formData","FormData","append","toString","post","headers","queryKey","invalidateQueries","warn","err","_err$response","_err$response2","_err$response2$data","response","message","type","value","onChange","e","target","required","placeholder","ToastEditorWrapper","initialData","disabled"],"sourceRoot":""}