{"version":3,"file":"static/js/811.b8a7243c.chunk.js","mappings":"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","sources":["pages/CategoryToolsPage.tsx"],"sourcesContent":["/**\n * \n * 注意: 导航栏组件(Navbar和SideNavbar)已移至全局布局，不需要在页面组件中引入\n * 此文件定义了展示特定分类下工具列表的 React 组件。\n *\n * 主要功能:\n * - 根据路由参数 (分类 id 或 slug) 获取并显示该分类下的工具列表。\n * - 可能显示分类的名称或描述。\n * - 提供到单个工具详情页的链接。\n *\n * 注意: 如果新增、删除或修改功能，必须在这开头的注释中同步修改，\n * 如发现功能与注释描述不同，也可以在确定后修改。\n */\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n// // 已移除: import Navbar from \"../components/Navbar\";\n// import SideNavbar from '../components/SideNavbar';\nimport ToolCard from '../components/ToolCard';\nimport { API_BASE_URL } from '../config';\nimport { useSidebar } from '../contexts/SidebarContext';\n\ninterface Tool {\n  id: number;\n  name: string;\n  description: string;\n  category: string;\n  rating: number;\n  image_url?: string;\n  tags?: string[];\n  is_free?: boolean;\n  slug?: string;\n}\n\ninterface Category {\n  id: number;\n  name: string;\n  description: string;\n  icon: string;\n}\n\nconst CategoryToolsPage: React.FC = () => {\n  const { categoryId } = useParams<{ categoryId: string }>();\n  const navigate = useNavigate();\n  const [tools, setTools] = useState<Tool[]>([]);\n  const [category, setCategory] = useState<Category | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [sortBy, setSortBy] = useState<string>('popularity');\n  const { isSidebarOpen } = useSidebar();\n\n  useEffect(() => {\n    const fetchCategoryAndTools = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Fetch category info\n        const categoryResponse = await fetch(`${API_BASE_URL}/api/categories/${categoryId}`);\n        if (!categoryResponse.ok) {\n          throw new Error('Failed to fetch category info');\n        }\n        \n        const categoryData = await categoryResponse.json();\n        setCategory(categoryData);\n        \n        // 添加时间戳参数防止缓存\n        const timestamp = new Date().getTime();\n        const toolsResponse = await fetch(`${API_BASE_URL}/api/tools?category=${categoryId}&_=${timestamp}`, {\n          headers: {\n            'Cache-Control': 'no-cache',\n            'Pragma': 'no-cache'\n          }\n        });\n        \n        if (!toolsResponse.ok) {\n          throw new Error('Failed to fetch tools for category');\n        }\n        \n        const toolsData = await toolsResponse.json();\n        console.log(\"分类工具数据:\", toolsData);\n        \n        if (toolsData && Array.isArray(toolsData.tools)) {\n          setTools(toolsData.tools);\n        } else {\n          console.error(\"工具数据格式不正确:\", toolsData);\n          setError('工具数据格式不正确');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to load data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchCategoryAndTools();\n  }, [categoryId]);\n\n  const handleSortChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(e.target.value);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-transparent text-white flex flex-col\">\n        {/* 移除Navbar组件 */}\n        <div className=\"flex flex-1 overflow-hidden\">\n          {/* 移除SideNavbar组件 */}\n          <main className={`flex-1 transition-all duration-300 ease-in-out overflow-y-auto ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'}`}>\n            <div className=\"container mx-auto px-4 py-12 flex justify-center items-center h-full\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-white\"></div>\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error || !category) {\n    return (\n      <div className=\"min-h-screen bg-transparent text-white flex flex-col\">\n        {/* 移除Navbar组件 */}\n        <div className=\"flex flex-1 overflow-hidden\">\n          {/* 移除SideNavbar组件 */}\n          <main className={`flex-1 transition-all duration-300 ease-in-out overflow-y-auto ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'}`}>\n            <div className=\"container mx-auto px-4 py-12 flex justify-center items-center h-full\">\n          <div className=\"max-w-xl mx-auto bg-white/10 backdrop-blur-sm rounded-lg p-6 shadow-lg\">\n            <h1 className=\"text-2xl font-bold mb-4 text-center\">出错了</h1>\n            <p className=\"text-center\">{error || '找不到该分类'}</p>\n            <div className=\"flex justify-center mt-6\">\n              <button \n                onClick={() => navigate('/tools')}\n                className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md transition-colors\"\n              >\n                返回所有工具\n              </button>\n            </div>\n          </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-transparent text-white flex flex-col\">\n      {/* 移除Navbar组件 */}\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* 移除SideNavbar组件 */}\n        <main className={`flex-1 transition-all duration-300 ease-in-out overflow-y-auto ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'}`}>\n          <div className=\"container mx-auto px-4 py-6\">\n        <header className=\"mb-12 text-center\">\n          <h1 className=\"text-4xl font-bold mb-4\">{category.name}</h1>\n          <p className=\"text-xl text-gray-200 max-w-2xl mx-auto\">{category.description}</p>\n        </header>\n        \n        {tools.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {tools.map(tool => (\n              <div \n                key={tool.id}\n                className=\"bg-white/10 backdrop-blur-sm rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 cursor-pointer\"\n                    onClick={() => navigate(`/tools/${tool.slug || tool.id}`)}\n              >\n                <div className=\"p-6\">\n                  <h2 className=\"text-xl font-bold mb-2\">{tool.name}</h2>\n                      <p className=\"text-gray-300 mb-4 line-clamp-3\">{tool.description}</p>\n                  <div className=\"flex justify-end\">\n                    <div className=\"text-sm text-white/70 bg-white/10 px-3 py-1 rounded-full hover:bg-white/20 transition-colors\">\n                      查看详情\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"bg-white/10 backdrop-blur-sm rounded-lg p-8 text-center max-w-md mx-auto\">\n            <p className=\"text-xl mb-4\">该分类下暂无工具</p>\n            <button \n              onClick={() => navigate('/tools')}\n              className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md transition-colors\"\n            >\n              浏览其他分类\n            </button>\n          </div>\n        )}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryToolsPage; "],"names":["CategoryToolsPage","categoryId","useParams","navigate","useNavigate","tools","setTools","useState","category","setCategory","loading","setLoading","error","setError","sortBy","setSortBy","isSidebarOpen","useSidebar","useEffect","async","categoryResponse","fetch","API_BASE_URL","ok","Error","categoryData","json","timestamp","Date","getTime","toolsResponse","headers","toolsData","console","log","Array","isArray","fetchCategoryAndTools","_jsx","className","children","_jsxs","onClick","name","description","length","map","tool","slug","id"],"sourceRoot":""}