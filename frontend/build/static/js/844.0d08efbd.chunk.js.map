{"version":3,"file":"static/js/844.0d08efbd.chunk.js","mappings":"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","sources":["pages/ArticleListPage.tsx"],"sourcesContent":["/**\n * \n * 注意: 导航栏组件(Navbar和SideNavbar)已移至全局布局，不需要在页面组件中引入\n * ArticleListPage.tsx\n * \n * 此文件定义了展示文章列表页面的 React 组件。\n *\n * 主要功能:\n * - 使用 TanStack Query 的自定义 Hook (`useArticles`) 获取并缓存文章列表。\n * - 使用 TanStack Query 的自定义 Hook (`useArticleTags`) 获取并缓存文章标签列表。\n * - 支持按分类、标签进行筛选。\n * - 包含分页功能，并使用 TanStack Query 的 `placeholderData` 优化分页/筛选时的加载体验。\n * - 提供到单个文章详情页的链接。\n *\n * 注意: 如果新增、删除或修改功能，必须在这开头的注释中同步修改，\n * 如发现功能与注释描述不同，也可以在确定后修改。\n */\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { API_BASE_URL } from '../config';\nimport axios from 'axios';\nimport { useSidebar } from '../contexts/SidebarContext';\n// --- TanStack Query Import ---\nimport { useQuery } from '@tanstack/react-query';\n// --- End TanStack Query Import ---\nimport { fixImageUrl } from '../utils/imageProxy';\n\n// --- Define Custom Hooks ---\n\nconst ARTICLES_PER_PAGE = 15; // Keep constant accessible\n\ninterface Author {\n  id: number;\n  email: string;\n  nickname?: string | null;\n}\n\ninterface Article {\n  id: number;\n  title: string;\n  author: Author | null;\n  category: string | null;\n  summary: string | null;\n  content: string;\n  cover_image: string | null;\n  created_at: string;\n  tags: string[] | null;\n  slug: string;\n  view_count: number;\n  series_name?: string | null;\n  series_articles?: any[] | null;\n  like_count?: number;\n  collect_count?: number;\n  share_count?: number;\n  comment_count?: number;\n}\n\n// --- Hook for fetching articles ---\nconst useArticles = (page: number, category: string | 'all', tag: string | 'all') => {\n  const queryKey = ['articles', { page, category, tag }];\n\n  const fetchArticlesAPI = async () => {\n    const offset = (page - 1) * ARTICLES_PER_PAGE;\n    const fields = 'id,title,summary,content,category,tags,author,cover_image,slug,view_count,created_at,series_name,like_count,collect_count,share_count,comment_count';\n    let articlesUrl = `${API_BASE_URL}/api/articles/?limit=${ARTICLES_PER_PAGE}&offset=${offset}&fields=${fields}`;\n\n    if (tag !== 'all') {\n      articlesUrl += `&tag=${encodeURIComponent(tag)}`;\n    } else if (category && category !== 'all') {\n      articlesUrl += `&category=${encodeURIComponent(category)}`;\n    }\n    articlesUrl += `&sort_by=created_at&sort_order=desc`;\n\n    const response = await axios.get<{ articles: Article[], total: number }>(articlesUrl);\n    return response.data; // Return { articles: [], total: 0 }\n  };\n\n  return useQuery<{ articles: Article[], total: number }, Error>({\n    queryKey: queryKey,\n    queryFn: fetchArticlesAPI,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    gcTime: 10 * 60 * 1000, // 10 minutes\n    placeholderData: (previousData) => previousData, // Correct option for TanStack Query v5+\n  });\n};\n\n// --- Hook for fetching article tags ---\nconst useArticleTags = () => {\n    const queryKey = ['articleTags'];\n\n    const fetchTagsAPI = async () => {\n        const response = await axios.get<{ tags: string[] }>(`${API_BASE_URL}/api/articles/tags`);\n        return response.data.tags || []; // Return tags array or empty array\n    };\n\n    return useQuery<string[], Error>({\n        queryKey: queryKey,\n        queryFn: fetchTagsAPI,\n        staleTime: 30 * 60 * 1000, // 30 minutes, tags might not change often\n        gcTime: 60 * 60 * 1000, // 1 hour\n    });\n};\n// --- End Custom Hooks ---\n\ninterface Tool {\n  id: number;\n  name: string;\n  description: string;\n  category_id: number;\n}\n\n// Define the static categories for filtering\nconst displayCategories = [\"全部\", \"AI发展\", \"投资\", \"未来\", \"心理\", \"理性\", \"时间\"];\n\nconst ArticleListPage: React.FC = () => {\n  // Removed useState for articles, loading, error, allTags, totalPages\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [selectedTag, setSelectedTag] = useState<string | 'all'>('all');\n  const { isSidebarOpen } = useSidebar();\n  const [currentPage, setCurrentPage] = useState(1);\n  // Removed totalPages state\n  \n  const location = useLocation(); // Get location object\n\n  // Effect to read category from URL query parameter on initial load\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const categoryFromUrl = params.get('category');\n    if (categoryFromUrl && displayCategories.includes(categoryFromUrl)) {\n      setSelectedCategory(categoryFromUrl);\n      setSelectedTag('all'); // Reset tag if category is loaded from URL\n      setCurrentPage(1); // Reset page when category changes from URL\n    } else {\n      setSelectedCategory('all'); // Default to 'all' if no valid category in URL\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps \n  }, [location.search]); // Rerun if the search query changes\n\n  // Fetch tags using the custom hook\n  const { data: allTags = [], isLoading: isLoadingTags, isError: isTagsError } = useArticleTags();\n\n  // Fetch articles using the custom hook\n  const { \n    data: articlesData, // articlesData is of type { articles: Article[], total: number } | undefined\n    isLoading: loadingArticles, \n    isError: isArticlesError,\n    error: articlesError,\n    isFetching: isFetchingArticles, // Use isFetching to show loading indicator during background updates/refetches\n   } = useArticles(currentPage, selectedCategory, selectedTag);\n\n  // Extract articles and calculate totalPages from articlesData\n  // Use optional chaining and default values for safety\n  const articles: Article[] = articlesData?.articles ?? []; \n  const totalArticles: number = articlesData?.total ?? 0;\n  const totalPages = Math.ceil(totalArticles / ARTICLES_PER_PAGE);\n\n  // Effect to reset page when category or tag changes (handled by user interaction)\n  // This useEffect replaces the previous one that was triggered by state changes\n  // Note: Resetting via URL change is handled in the useEffect above\n  // This handles direct button clicks\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedCategory, selectedTag]);\n\n\n  const handleCategoryChange = (category: string) => {\n    setSelectedCategory(category);\n    setSelectedTag('all');\n    // No need to manually set currentPage to 1 here, the effect above handles it.\n  };\n\n  const handleTagClick = (tag: string | 'all') => {\n      setSelectedTag(tag);\n      setSelectedCategory('all'); // Clicking a tag resets the category filter\n      // No need to manually set currentPage to 1 here, the effect above handles it.\n  };\n\n  const handlePageChange = (newPage: number) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('zh-CN', { \n      year: 'numeric', \n      month: 'long', \n      day: 'numeric' \n    });\n  };\n\n  const getImageUrl = (imagePath: string | null): string | undefined => {\n    if (!imagePath) return undefined;\n\n    // 使用我们的图片代理处理所有图片URL\n    return fixImageUrl(imagePath);\n  };\n\n  // Determine overall loading state (initial load vs background fetching)\n  const isLoading = loadingArticles && !articlesData; // Show main loading spinner only on initial load\n  const isFetching = isFetchingArticles; // Use for subtle loading indicators if needed\n\n  // Determine error state\n  const error = isArticlesError ? (articlesError?.message || '加载文章时出错') : null;\n\n  return (\n    <div className=\"min-h-screen flex flex-col text-black\">\n      {/* 移除Navbar组件 */}\n      \n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* 移除SideNavbar组件 */}\n        \n        <main className={`flex-grow overflow-y-auto transition-all duration-300 ease-in-out ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'}`}>\n          <div className=\"container mx-auto px-4 pb-4 pt-4\">\n\n            <div className=\"mb-6\">\n              <div className=\"flex flex-wrap gap-2\">\n                {displayCategories.map((category) => (\n                  <button\n                    key={category}\n                    className={`px-4 py-1.5 rounded-full text-sm font-medium transition-colors ${\n                      selectedCategory === (category === '全部' ? 'all' : category) && selectedTag === 'all'\n                        ? 'bg-blue-500/90 text-white shadow-md' \n                        : 'bg-gray-100/90 hover:bg-gray-200/90 text-gray-700 border border-gray-200/50'\n                    }`}\n                    onClick={() => handleCategoryChange(category === '全部' ? 'all' : category)}\n                  >\n                    {category}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Conditionally render tags section based on loading/error state */}\n            {!isLoadingTags && !isTagsError && allTags.length > 0 && (\n                <div className=\"mb-8 flex flex-wrap gap-2\"> \n                    <button\n                        onClick={() => handleTagClick('all')}\n                        className={`px-3 py-1.5 rounded-full text-xs font-medium transition-colors ${ \n                            selectedTag === 'all'\n                            ? 'bg-teal-500/90 text-white shadow-md' \n                            : 'bg-gray-100/90 hover:bg-gray-200/90 text-gray-700 border border-gray-200/50'\n                        }`}\n                    >\n                        # 所有标签\n                    </button>\n                    {allTags.map((tag) => (\n                        <button\n                            key={tag} \n                            onClick={() => handleTagClick(tag)}\n                            className={`px-3 py-1.5 rounded-full text-xs font-medium transition-colors ${ \n                                selectedTag === tag \n                                ? 'bg-teal-500/90 text-white shadow-md' \n                                : 'bg-gray-100/90 hover:bg-gray-200/90 text-gray-700 border border-gray-200/50'\n                            }`}\n                        >\n                            # {tag}\n                        </button>\n                    ))}\n                </div>\n            )}\n            {isLoadingTags && <p className=\"text-sm text-black mb-4\">正在加载标签...</p>}\n            {isTagsError && <p className=\"text-sm text-red-400 mb-4\">加载标签失败。</p>}\n            \n            {/* Use isLoading for the main loading spinner */}\n            {isLoading ? (\n              <div className=\"text-center py-10\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-black mx-auto\"></div>\n                <span className=\"mt-3 text-black block\">正在加载文章...</span>\n              </div>\n            ) : error ? (\n              <div className=\"text-center py-10 bg-red-900/30 border border-red-700 text-black p-4 rounded\">\n                <strong className=\"font-bold\">加载失败!</strong>\n                <span className=\"block sm:inline\"> {error}</span>\n              </div>\n            ) : articles.length > 0 ? (\n              <>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n                  {articles.map((article: Article) => (\n                    <Link \n                      to={`/article/${article.slug}`} \n                      key={article.id} \n                      className=\"block bg-gray-850/70 hover:bg-gray-800/90 backdrop-blur-lg border border-gray-700/50 rounded-lg overflow-hidden shadow-lg transition-all duration-200 group\"\n                    >\n                      {article.cover_image && (\n                        <div className=\"h-40 w-full overflow-hidden\">\n                          <img \n                            src={getImageUrl(article.cover_image) ?? '/placeholder.jpg'} // Added fallback\n                            alt={article.title} \n                            className=\"w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105\"\n                            onError={(e) => { (e.target as HTMLImageElement).src = '/placeholder.jpg'; }}\n                          />\n                        </div>\n                      )}\n                      <div className=\"p-3 flex flex-col flex-grow\">\n                          <h3 \n                          className=\"text-base font-semibold text-black mb-1.5 line-clamp-2 group-hover:text-black\"\n                            title={article.title}\n                          >\n                            {article.title}\n                          </h3>\n                        <p className={`text-xs text-black mb-3 flex-grow ${article.cover_image ? 'line-clamp-3' : 'line-clamp-6'}`}>\n                            {article.content || '无内容'}\n                          </p>\n                        <div className=\"flex justify-between items-center text-xs text-black mt-auto pt-1.5 border-t border-gray-700/50\">\n                            <span>{article.author?.nickname || article.author?.email?.split('@')[0] || '匿名'}</span>\n                            <div>{formatDate(article.created_at)}</div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n\n                {/* Pagination controls */}\n                {totalPages > 1 && (\n                  <div className=\"mt-8 flex justify-center items-center space-x-4\">\n                    <button\n                      onClick={() => handlePageChange(currentPage - 1)}\n                      disabled={currentPage === 1 || isFetching} // Disable during fetching\n                      className=\"px-3 py-1.5 bg-white/10 hover:bg-white/20 text-black rounded-md disabled:opacity-50 disabled:cursor-not-allowed transition-colors text-sm\"\n                    >\n                      上一页\n                    </button>\n                    <span className=\"text-black text-sm\">\n                      第 {currentPage} / {totalPages} 页 {isFetching ? '(加载中...)' : ''}\n                    </span>\n                    <button\n                      onClick={() => handlePageChange(currentPage + 1)}\n                      disabled={currentPage === totalPages || isFetching} // Disable during fetching\n                      className=\"px-3 py-1.5 bg-white/10 hover:bg-white/20 text-black rounded-md disabled:opacity-50 disabled:cursor-not-allowed transition-colors text-sm\"\n                    >\n                      下一页\n                    </button>\n                  </div>\n                )}\n              </>\n            ) : (\n              // Show this message when not loading, no error, but no articles found for the filter\n              <div className=\"text-center py-10 text-black\">\n                <p className=\"text-lg\">该分类/标签下暂无文章</p>\n              </div>\n            )}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleListPage; "],"names":["displayCategories","ArticleListPage","_articlesData$article","_articlesData$total","selectedCategory","setSelectedCategory","useState","selectedTag","setSelectedTag","isSidebarOpen","useSidebar","currentPage","setCurrentPage","location","useLocation","useEffect","categoryFromUrl","URLSearchParams","search","get","includes","data","allTags","isLoading","isLoadingTags","isError","isTagsError","useQuery","queryKey","queryFn","async","axios","API_BASE_URL","tags","staleTime","gcTime","articlesData","loadingArticles","isArticlesError","error","articlesError","isFetching","isFetchingArticles","useArticles","page","category","tag","offset","articlesUrl","encodeURIComponent","placeholderData","previousData","articles","totalArticles","total","totalPages","Math","ceil","handleTagClick","handlePageChange","newPage","window","scrollTo","getImageUrl","imagePath","fixImageUrl","message","_jsx","className","children","_jsxs","map","onClick","handleCategoryChange","length","_Fragment","article","_getImageUrl","_article$author","_article$author2","_article$author2$emai","dateString","Link","to","slug","cover_image","src","alt","title","onError","e","target","content","author","nickname","email","split","created_at","Date","toLocaleDateString","year","month","day","id","disabled"],"sourceRoot":""}