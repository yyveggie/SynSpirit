{"version":3,"file":"static/js/358.fa180be7.chunk.js","mappings":"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","sources":["components/CommunityInfoCard.tsx","components/FrostedPostCard.tsx","components/CommunityChatPanel.tsx","components/CommunityContentPageLayout.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface CommunityInfoCardProps {\n  name: string;\n  description: string | null;\n  slug: string;\n  id: number;\n  isFavorited: boolean;\n  onToggleFavorite: () => void;\n  isLoadingFavorite: boolean;\n  onCreatePost?: () => void;\n  // 可以添加更多属性，例如成员数、创建时间等\n}\n\nconst CommunityInfoCard: React.FC<CommunityInfoCardProps> = ({\n  name,\n  description,\n  slug,\n  id,\n  isFavorited,\n  onToggleFavorite,\n  isLoadingFavorite,\n  onCreatePost\n}) => {\n  const navigate = useNavigate();\n\n  const handleCreatePost = () => {\n    navigate(`/community/new-post`, { state: { topicId: id, topicName: name } });\n  };\n\n  return (\n    <div className=\"rounded-lg bg-gray-800/50 p-4 shadow-md backdrop-blur-sm border border-gray-700/50\">\n      <h2 className=\"text-xl font-semibold text-white mb-2\">{name}</h2>\n      <p className=\"text-sm text-gray-300 mb-4\">\n        {description || '暂无社区描述。'}\n      </p>\n      {/* 在这里可以使用 isFavorited, onToggleFavorite, isLoadingFavorite 来控制按钮状态或显示 */} \n      {/* 例如，可以修改收藏按钮的样式或禁用状态 */} \n      {/* 按钮的 onClick 事件现在应该调用 onToggleFavorite */} \n      {/* 创建帖子按钮 (如果提供了回调) */} \n      {/* {\n        onCreatePost && (\n          <button \n            onClick={onCreatePost}\n            className=\"...\"\n          >\n            创建新帖子\n          </button>\n        )\n      } */} \n    </div>\n  );\n};\n\nexport default CommunityInfoCard; ","/**\n * FrostedPostCard.tsx\n * \n * 功能注释：\n * 定义一个可重用的 UI 组件，用于展示单个帖子的预览卡片。\n * 负责渲染帖子的关键信息，包括：\n *   - 封面图片 (如果存在)，置于右侧并保持合适的比例。\n *   - 帖子标题 (限制最多显示 1 行)。\n *   - 作者名称和发布时间。\n *   - 帖子内容预览，及查看全文功能。\n * 应用特定的视觉样式：\n *   - \"毛玻璃\" (frosted glass) 背景效果 (bg-white/5 backdrop-blur-lg)。\n *   - 圆角、边框和阴影。\n *   - 水平方向的 flex 布局 (flex-row)。\n * 接收帖子数据对象 (post) 以及其所属的父主题类型/Slug 作为 props。\n * 根据父主题信息构建指向帖子详情页的正确链接 (Link)。\n */\nimport React, { useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL } from '../config';\n\n// --- 父主题类型 ---\ntype ParentTopicType = 'topic' | 'relationship';\n\ninterface Post {\n  id: number;\n  title: string;\n  author: any; // 可以是对象或字符串 \n  content?: string; // 帖子内容字段\n  excerpt?: string;\n  summary?: string; // 从API返回的数据使用 summary\n  upvotes?: number;\n  comments?: number;\n  timestamp?: string;\n  created_at?: string; // 从API返回的数据使用 created_at\n  slug?: string;\n  // 互动数据字段\n  likes_count?: number;\n  collects_count?: number;\n  shares_count?: number;\n  comments_count?: number;\n  // 后端API可能使用的替代命名\n  like_count?: number;\n  collect_count?: number;\n  comment_count?: number;\n  share_count?: number;\n}\n\ninterface FrostedPostCardProps {\n  post: Post;\n  parentType: ParentTopicType;\n  parentSlug: string | undefined; // 父 Slug 可能未定义\n}\n\n// 从 HTML 获取纯文本预览的辅助函数\nconst getContentPreview = (htmlContent: string | null | undefined, maxLength: number = 450): string => {\n  if (!htmlContent) return '';\n\n  // 0. 处理Markdown格式的图片链接，先将它们替换为占位符，避免提取为文本\n  let text = htmlContent.replace(/!\\[(.*?)\\]\\((https?:\\/\\/[^)]+)\\)/g, '[图片]');\n\n  // 1. 移除脚本和样式标签及其内容\n  text = text.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n  text = text.replace(/<style\\b[^<]*(?:(?!<\\/style>)<[^<]*)*<\\/style>/gi, '');\n\n  // 2. 将换行符、段落、列表项等视为可能的断句点\n  text = text.replace(/<br\\s*\\/?>/gi, '\\n');\n  text = text.replace(/<\\/p>/gi, '\\n');\n  text = text.replace(/<\\/li>/gi, '\\n');\n  text = text.replace(/<\\/div>/gi, '\\n');\n\n  // 3. 移除所有剩余的 HTML 标签\n  text = text.replace(/<[^>]+>/g, '');\n\n  // 4. 替换 HTML 实体编码\n  text = text.replace(/&nbsp;/g, ' ');\n  text = text.replace(/&lt;/g, '<');\n  text = text.replace(/&gt;/g, '>');\n  text = text.replace(/&amp;/g, '&');\n  text = text.replace(/&quot;/g, '\"');\n  text = text.replace(/&#39;/g, \"'\");\n\n  // 5. 规范化空白字符\n  text = text.replace(/\\s+/g, ' ').trim();\n\n  // 6. 截断到指定长度\n  if (text.length > maxLength) {\n    return text.substring(0, maxLength) + '...';\n  }\n  return text;\n};\n\nconst FrostedPostCard: React.FC<FrostedPostCardProps> = ({ post, parentType, parentSlug }) => {\n  // 格式化日期显示\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return '';\n    \n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return dateString;\n      \n      const year = date.getFullYear();\n      const month = date.getMonth() + 1;\n      const day = date.getDate();\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      \n      return `${year}/${month}/${day} ${hours}:${minutes}`;\n    } catch (e) {\n      return dateString;\n    }\n  };\n\n  // 获取作者名称\n  const getAuthorName = () => {\n    if (!post.author) return '匿名';\n    \n    // 如果 author 是字符串直接返回\n    if (typeof post.author === 'string') return post.author;\n    \n    // 优先显示昵称\n    if (post.author.nickname) return post.author.nickname;\n    \n    // 如果有 email 但没有昵称，显示 email\n    if (post.author.email) return post.author.email;\n    \n    // 如果都没有才显示匿名\n    return '匿名';\n  };\n\n  // 构建帖子链接\n  const buildPostUrl = () => {\n    const postIdentifier = post.slug || post.id; // 优先使用 slug\n    if (parentSlug && postIdentifier) {\n        const parentPath = parentType === 'topic' ? 'topic' : 'relationship-topic';\n        return `/community/${parentPath}/${parentSlug}/posts/${postIdentifier}`;\n    } else {\n        console.warn(`[FrostedPostCard] Missing parentSlug (${parentSlug}) or post identifier (${postIdentifier}) for post ID ${post.id}. Falling back to old URL.`);\n        return `/posts/${postIdentifier}`;\n    }\n  };\n\n  // 尝试获取内容，首先使用content字段，如果没有则尝试使用summary字段\n  const postContent = post.content || post.summary || post.excerpt || '';\n\n  // 获取互动数据，兼容不同命名\n  const likesCount = post.likes_count !== undefined ? post.likes_count : post.like_count;\n  const collectsCount = post.collects_count !== undefined ? post.collects_count : post.collect_count;\n  const commentsCount = post.comments_count !== undefined ? post.comments_count : (post.comment_count !== undefined ? post.comment_count : post.comments);\n  const sharesCount = post.shares_count !== undefined ? post.shares_count : post.share_count;\n\n  // 新增：预加载打开新标签页的函数\n  // useCallback 用于确保此函数在父组件重渲染时不被不必要地重新创建，\n  // 除非其依赖项发生变化（此处无依赖项，因此仅创建一次）。\n  const openInNewTabWithPreload = useCallback((url: string) => (e: React.MouseEvent) => {\n    e.preventDefault(); // 阻止<a>标签的默认导航行为\n    // preload.html 应该位于 public 文件夹下，因此路径通常是 /preload.html\n    const preloadPageUrl = `/preload.html?redirect=${encodeURIComponent(url)}`;\n    const newWindow = window.open(preloadPageUrl, '_blank');\n    if (newWindow) {\n      newWindow.opener = null; // 安全性考虑：移除新窗口对 window.opener 的引用\n    }\n  }, []); // 空依赖数组表示此函数永不改变\n\n  const postUrl = buildPostUrl(); // 获取帖子详情页的URL\n\n  return (\n    <div \n      className=\"rounded-lg overflow-hidden \n                 bg-gray-900/50 backdrop-blur-lg \n                 shadow-lg hover:shadow-xl \n                 transform transition-all duration-300 hover:scale-[1.02] hover:-translate-y-1\n                 flex flex-col\"\n    >\n      <div className=\"p-3\">\n          {/* \n            修改导航逻辑：\n            - 将 react-router-dom 的 <Link> 组件替换为普通的 <a> 标签。\n            - 为 <a> 标签添加 onClick 事件处理器，调用 openInNewTabWithPreload 函数。\n            - 保留 href 属性，这样用户仍然可以右键点击链接进行\"在新标签页中打开\"、\"复制链接地址\"等标准浏览器操作。\n            - 添加 cursor-pointer 样式，以提供视觉反馈，表明该元素是可点击的。\n            - 将帖子标题作为 title 属性添加到 <a> 标签，鼠标悬停时可以显示完整标题。\n          */}\n          <a \n            href={postUrl} \n            onClick={openInNewTabWithPreload(postUrl)}\n            className=\"hover:text-blue-300 transition-colors mb-2 block cursor-pointer\"\n            title={post.title} \n          >\n            <h3 className=\"text-lg font-semibold text-white line-clamp-1\">{post.title}</h3> {/* 限制标题只显示一行 */}\n          </a>\n          \n        {/* 直接显示完整内容 */}\n        {postContent && (\n          <div className=\"text-gray-300 text-sm my-4 post-content-container\">\n            <style>{`\n              .post-content-container img, \n              .post-content-container video,\n              .post-content-container iframe,\n              .post-content-container figure {\n                margin-left: auto;\n                margin-right: auto;\n                display: block;\n                max-width: 100%;\n              }\n              .post-content-container .post-content p {\n                margin-bottom: 1rem;\n              }\n              .post-content-container a {\n                color: #60a5fa;\n                text-decoration: none;\n              }\n              .post-content-container a:hover {\n                text-decoration: underline;\n              }\n            `}</style>\n            <div \n              className=\"post-content\" \n              dangerouslySetInnerHTML={{ \n                __html: postContent\n                  // 将Markdown格式的图片链接 ![alt](url) 转换为HTML的<img>标签\n                  .replace(/!\\[(.*?)\\]\\((https?:\\/\\/[^)]+)\\)/g, '<img src=\"$2\" alt=\"$1\" style=\"max-width:100%; display:block; margin:0 auto;\">')\n                  // 处理YouTube视频占位符，添加16:9容器\n                  .replace(/\\[视频占位符:\\s*(https?:\\/\\/(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/watch\\?v=)([a-zA-Z0-9_-]+))\\]/g, (match, originalUrl, videoId) => `\n                    <figure class=\"not-prose video-figure\" style=\"all: initial; display: block; text-align: center; width: 100%; margin: 1.5em 0; font-family: inherit; color: inherit;\">\n                      <div class=\"video-wrapper\" style=\"width: 100%; max-width: 720px; margin: 0 auto; aspect-ratio: 16/9; background: #000; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); overflow: hidden; position: relative;\">\n                        <iframe src=\"https://www.youtube.com/embed/${videoId}?autoplay=0&mute=0&controls=1\" class=\"video-iframe\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; border-radius: 8px;\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Embedded YouTube Video\"></iframe>\n                      </div>\n                    </figure>\n                  `)\n                  // 处理Bilibili视频占位符，添加16:9容器\n                  .replace(/\\[视频占位符:\\s*(https?:\\/\\/(?:www\\.)?bilibili\\.com\\/video\\/([A-Za-z0-9]+)(?:\\/)?.*?)\\]/g, (match, originalUrl, videoId) => `\n                    <figure class=\"not-prose video-figure\" style=\"all: initial; display: block; text-align: center; width: 100%; margin: 1.5em 0; font-family: inherit; color: inherit;\">\n                      <div class=\"video-wrapper\" style=\"width: 100%; max-width: 720px; margin: 0 auto; aspect-ratio: 16/9; background: #000; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); overflow: hidden; position: relative;\">\n                        <iframe src=\"https://player.bilibili.com/player.html?bvid=${videoId}&page=1&high_quality=1&danmaku=0&autoplay=0\" class=\"video-iframe\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; border-radius: 8px;\" frameborder=\"0\" scrolling=\"no\" allowfullscreen title=\"Embedded Bilibili Video\"></iframe>\n                      </div>\n                    </figure>\n                  `)\n              }} \n            />\n          </div>\n        )}\n        \n        {/* 底部作者信息和互动数据 */}\n        <div className=\"flex justify-between items-end mt-4\">\n          <div className=\"flex gap-3 text-xs text-gray-400\">\n        {likesCount !== undefined && (\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1.5}>\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n            </svg>\n            <span>{likesCount || 0}</span>\n          </div>\n        )}\n        \n        {commentsCount !== undefined && (\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1.5}>\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n            <span>{commentsCount || 0}</span>\n          </div>\n        )}\n        \n        {collectsCount !== undefined && (\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1.5}>\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\n            </svg>\n            <span>{collectsCount || 0}</span>\n          </div>\n        )}\n        \n        {sharesCount !== undefined && (\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1.5}>\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\" />\n            </svg>\n            <span>{sharesCount || 0}</span>\n          </div>\n        )}\n          </div>\n          <div className=\"text-xs text-gray-400\">\n            <span>由 {getAuthorName()} 发布于 {formatDate(post.created_at || post.timestamp)}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FrostedPostCard; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { io, Socket } from 'socket.io-client';\nimport { toast } from 'react-toastify';\nimport { API_BASE_URL, getSocketIOServerURL } from '../config';\nimport { useAuth } from '../context/AuthContext'; // 确保 useAuth 被正确导入\nimport { User } from '../context/AuthContext';\n\n// 定义聊天消息类型\ninterface RealtimeChatMessage {\n  id: string; \n  userId: number;\n  username: string; \n  nickname?: string | null;\n  avatar?: string | null;\n  message: string;\n  timestamp: string;\n  is_system_message?: boolean;\n  local_id?: string;\n}\n\n// 更新 Props 定义\ninterface CommunityChatPanelProps {\n  communityId: number; // 使用社区 ID\n  communityType: 'topic' | 'relationship_topic'; // 使用统一的社区类型\n  communityName: string; // 使用社区名称\n\n  isOpen: boolean; // 控制面板是否可见\n  onClose: () => void; // 关闭回调\n}\n\n// *** 修正：格式化时间戳的辅助函数 ***\nconst formatChatMessageTimestamp = (timestampStr: string): string => {\n  if (!timestampStr) return '';\n\n  try {\n    // *** 移除 .replace(' ', 'T') + 'Z' ***\n    // 后端返回的已经是有效的 ISO 8601 格式 (带 T 和 Z)\n    const messageDate = new Date(timestampStr); \n\n    // 检查日期是否有效\n    if (isNaN(messageDate.getTime())) {\n       console.error(`[Chat Timestamp] 解析时间戳失败，格式无效: ${timestampStr}`);\n       return timestampStr; // 解析失败则返回原始字符串\n    }\n\n    const now = new Date();\n    // *** 使用 toLocaleString 获取特定时区的 Date 对象进行比较 ***\n    const beijingNow = new Date(now.toLocaleString('en-US', { timeZone: 'Asia/Shanghai' }));\n    const beijingMessageDate = new Date(messageDate.toLocaleString('en-US', { timeZone: 'Asia/Shanghai' }));\n\n    const todayStartBeijing = new Date(beijingNow.getFullYear(), beijingNow.getMonth(), beijingNow.getDate());\n    const yesterdayStartBeijing = new Date(todayStartBeijing);\n    yesterdayStartBeijing.setDate(todayStartBeijing.getDate() - 1);\n\n    const timeOptions: Intl.DateTimeFormatOptions = {\n      timeZone: 'Asia/Shanghai', // 明确指定北京时间\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false, // 使用24小时制\n    };\n    // *** 直接对原始 Date 对象格式化为北京时间 ***\n    const formattedTime = messageDate.toLocaleTimeString('zh-CN', timeOptions);\n\n    if (beijingMessageDate >= todayStartBeijing) {\n      return formattedTime; // 今天\n    } else if (beijingMessageDate >= yesterdayStartBeijing) {\n      return `昨天 ${formattedTime}`; // 昨天\n    } else {\n      // 更早: YYYY/MM/DD HH:mm\n      // *** 从北京时间的 Date 对象获取年月日 ***\n      const year = beijingMessageDate.getFullYear();\n      const month = (beijingMessageDate.getMonth() + 1).toString().padStart(2, '0');\n      const day = beijingMessageDate.getDate().toString().padStart(2, '0');\n      return `${year}/${month}/${day} ${formattedTime}`;\n    }\n  } catch (e) {\n    console.error(\"[Chat Timestamp] 格式化聊天时间戳时捕获到异常:\", e);\n    return timestampStr; // 出错时返回原始字符串\n  }\n};\n\nconst CommunityChatPanel: React.FC<CommunityChatPanelProps> = ({\n  communityId,\n  communityType,\n  communityName,\n  isOpen,\n  onClose,\n}) => {\n  const { user, token } = useAuth(); // 从 Context 获取用户信息和 Token\n  // --- 聊天状态 ---\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const socketRef = useRef<Socket | null>(null);\n  const [chatMessages, setChatMessages] = useState<RealtimeChatMessage[]>([]);\n  const [currentChatMessage, setCurrentChatMessage] = useState('');\n  const [isChatConnected, setIsChatConnected] = useState(false);\n  const chatContainerRef = useRef<HTMLDivElement>(null);\n  const [isInitialHistoryLoaded, setIsInitialHistoryLoaded] = useState(false);\n  // --- 新增状态 ---\n  const [isFetchingHistory, setIsFetchingHistory] = useState(false);\n  const [hasMoreHistory, setHasMoreHistory] = useState(true); // 初始假设有更多历史\n  // *** 动画状态 ***\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  const [isConnectionError, setIsConnectionError] = useState(false);\n  const [showContent, setShowContent] = useState(false);\n  const [historyReceived, setHistoryReceived] = useState(false);\n  // *** 防止重复发送 ***\n  const [isSending, setIsSending] = useState(false);\n  const processedMessageIds = useRef<Set<string>>(new Set());\n  \n  // --- 滚动到底部 ---\n  const scrollToBottom = useCallback((behavior: 'auto' | 'smooth' = 'auto') => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTo({\n        top: chatContainerRef.current.scrollHeight,\n        behavior: behavior,\n      });\n    }\n  }, []);\n\n  // --- 面板显示/隐藏效果 ---\n  useEffect(() => {\n    if (isOpen) {\n      // 进入时，先淡入整个容器，但内容保持隐藏状态\n      const timer = setTimeout(() => {\n        setShowContent(true);\n      }, 300); // 等面板淡入后再显示内容\n      return () => clearTimeout(timer);\n    } else {\n      // 退出时，立即隐藏内容\n      setShowContent(false);\n    }\n  }, [isOpen]);\n\n  // --- Socket.IO 连接与事件处理 ---\n  useEffect(() => {\n    let isMounted = true;\n    let socketInstance: Socket | null = null;\n\n    const connectSocket = () => {\n      // 必须要有 communityId 和 token 才能连接\n      if (!communityId || !token) {\n        console.log(`[ChatPanel Connect] Pre-check failed (communityId: ${communityId}, token: ${!!token})`);\n        return;\n      }\n\n      // 如果已经存在 socket 或正在连接，则先断开\n      if (socketRef.current) {\n        console.log(\"[ChatPanel Connect] Disconnecting existing socket before new connection.\");\n        socketRef.current.disconnect();\n        socketRef.current = null;\n        setSocket(null);\n        setIsChatConnected(false);\n        setIsInitialHistoryLoaded(false);\n        setChatMessages([]); // 清空消息\n      }\n\n      // --- 构建房间名 ---\n      const roomName = communityType === 'topic' \n        ? `community_topic_${communityId}` \n        : `community_relationship_topic_${communityId}`;\n      console.log(`[ChatPanel Socket] Attempting to connect and join room: ${roomName} (ID: ${communityId})`);\n\n      // --- 重置状态 ---\n      setChatMessages([]);\n      setIsInitialHistoryLoaded(false);\n      setIsChatConnected(false);\n      setIsFetchingHistory(false); // 重置加载状态\n      setHasMoreHistory(true); // 重置是否有更多历史的状态\n      setLoadingProgress(0); // 重置加载进度\n      setIsConnectionError(false); // 重置连接错误状态\n      setHistoryReceived(false); // 重置历史记录接收状态\n      processedMessageIds.current.clear(); // 清空已处理消息ID集合\n\n      // --- 创建 Socket 实例 ---\n      socketInstance = io(getSocketIOServerURL(), { // 使用配置函数获取正确的服务器地址\n          path: '/socket.io', \n          transports: ['websocket', 'polling'], // 允许WebSocket和轮询两种方式\n          auth: { token: token }, // 使用 context 获取的 token\n          // 添加重连尝试配置\n          reconnection: true,\n          reconnectionAttempts: 5,\n          reconnectionDelay: 1000,\n          timeout: 10000\n      });\n      socketRef.current = socketInstance;\n      setSocket(socketInstance); // 更新状态\n\n      // --- 事件监听 ---\n      socketInstance.on('connect', () => {\n          if (!isMounted || socketRef.current !== socketInstance) return;\n          console.log(`[ChatPanel Socket] 连接成功! SID: ${socketInstance?.id}`);\n          setIsChatConnected(true); \n          socketInstance?.emit('join', { room: roomName, username: user?.nickname || 'Anonymous' });\n          console.log(`[ChatPanel Socket] Emitting initial request_history for room: ${roomName} with limit 30`);\n          // 初始加载时，不发送 before_message_id\n          socketInstance?.emit('request_history', { room: roomName, limit: 30 }); \n      });\n\n      socketInstance.on('message_history', (data: { history: RealtimeChatMessage[], has_more: boolean, requested_before_id?: string }) => {\n          if (!isMounted || socketRef.current !== socketInstance) return;\n          \n          const { history, has_more, requested_before_id } = data;\n          console.log(`[ChatPanel Socket] Received message_history (${history.length} messages). Has more: ${has_more}. Requested before ID: ${requested_before_id}`);\n          \n          // 更新 hasMoreHistory 状态\n          setHasMoreHistory(has_more);\n\n          if (requested_before_id) {\n              // --- 加载旧消息 ---\n              setIsFetchingHistory(true); // 开始处理旧消息\n              const container = chatContainerRef.current;\n              const oldScrollHeight = container?.scrollHeight || 0;\n              const oldScrollTop = container?.scrollTop || 0;\n\n              // 将新获取的历史消息标记为已处理\n              history.forEach(msg => processedMessageIds.current.add(msg.id));\n              \n              setChatMessages(prev => {\n                  // 去重，防止因网络问题重复添加\n                  const existingIds = new Set(prev.map(m => m.id));\n                  const newHistory = history.filter(m => !existingIds.has(m.id));\n                  // 确保 newHistory 是按时间顺序 (旧 -> 新) 的\n                  return [...newHistory, ...prev]; // 将旧消息加到前面\n              });\n\n              // 保持滚动位置\n              requestAnimationFrame(() => { \n                  if (container) {\n                      const newScrollHeight = container.scrollHeight;\n                      // 关键: 滚动位置恢复逻辑\n                      container.scrollTop = newScrollHeight - oldScrollHeight + oldScrollTop;\n                      console.log(`[ChatPanel Scroll] Restored scroll after loading older history. OldTop: ${oldScrollTop}, OldHeight: ${oldScrollHeight}, NewHeight: ${newScrollHeight}, NewTop: ${container.scrollTop}`);\n                  }\n              });\n              // 处理完成后，设置加载状态为 false\n              setIsFetchingHistory(false);\n\n          } else {\n              // --- 初始历史加载 ---\n              setHistoryReceived(true);\n              \n              if (history.length === 0) {\n                console.log('[ChatPanel Socket] Initial history is empty.');\n                setChatMessages([]); // 确保清空\n                setIsInitialHistoryLoaded(true);\n                return;\n              }\n              \n              // 将历史消息标记为已处理\n              history.forEach(msg => processedMessageIds.current.add(msg.id));\n              \n              // 直接设置消息并标记完成\n              setChatMessages(history);\n              setLoadingProgress(100);\n              \n              // 简单延迟后标记完成\n              setTimeout(() => {\n                setIsInitialHistoryLoaded(true);\n                // 滚动到底部\n                scrollToBottom('auto');\n              }, 100);\n          }\n      });\n\n      socketInstance.on('receive_message', (message: RealtimeChatMessage) => {\n          if (!isMounted || socketRef.current !== socketInstance) return;\n          console.log(`[ChatPanel Socket] Received new message object:`, message);\n          console.log(`[ChatPanel Socket] Message local_id from server:`, message.local_id);\n          \n          // 检查消息是否已经处理过，避免重复\n          if (processedMessageIds.current.has(message.id)) {\n              console.log(`[ChatPanel Socket] Skipping already processed message: ${message.id}`);\n              return;\n          }\n          \n          // 标记消息为已处理\n          processedMessageIds.current.add(message.id);\n          \n          const isOwnMessage = message.userId === user?.id && !message.is_system_message;\n          \n          // --- Enhanced Logging --- \n          console.log(`[ChatPanel Receive] Processing message ID: ${message.id}, Local ID: ${message.local_id}`);\n          console.log(`[ChatPanel Receive] Is own message? ${isOwnMessage} (User ID: ${user?.id}, Message UserID: ${message.userId})`);\n          \n          setChatMessages(prev => {\n              // 如果是自己的消息，尝试替换本地预览\n              if (isOwnMessage && message.local_id) {\n                  const existingIndex = prev.findIndex(m => m.id === message.local_id);\n                  \n                  if (existingIndex > -1) {\n                      // 替换逻辑\n                      const updatedMessages = [...prev];\n                      // *** 关键：用服务器确认的消息替换本地预览，确保使用服务器的 ID ***\n                      updatedMessages[existingIndex] = { ...message, id: message.id }; \n                      return updatedMessages;\n                  } else {\n                      // 找不到本地预览时的后备逻辑\n                      // Fallback to adding if local preview not found\n                      if (prev.some(msg => msg.id === message.id)) { \n                          return prev; // Avoid duplicates if already added somehow\n                      }\n                      return [...prev, message];\n                  }\n              } else if (!prev.some(msg => msg.id === message.id)) { // 添加非自己的消息或系统消息（避免重复）\n                  return [...prev, message];\n              }\n              return prev; // 如果是自己的消息且找不到本地预览，或者消息已存在，则不更新\n          });\n\n          // 如果收到新消息时用户不在底部附近，可能不滚动，或者给个提示？暂时先滚动\n          setTimeout(() => scrollToBottom('smooth'), 100); \n      });\n\n      socketInstance.on('status', (data: { msg: string }) => {\n          if (!isMounted || socketRef.current !== socketInstance) return; \n          console.log(\"[ChatPanel Socket] Status:\", data.msg);\n      });\n\n      socketInstance.on('error', (error: { message: string }) => {\n          if (!isMounted || socketRef.current !== socketInstance) return; \n          console.error(\"[ChatPanel Socket] Error:\", error.message);\n          toast.error(`聊天错误: ${error.message}`);\n      });\n\n      socketInstance.on('disconnect', (reason) => { \n          if (socketRef.current === socketInstance) { \n              console.log(`[ChatPanel Socket] Disconnected: ${reason}`); \n              setIsChatConnected(false); \n              setIsInitialHistoryLoaded(false); \n          }\n      });\n\n      socketInstance.on('connect_error', (err) => { \n          if (socketRef.current === socketInstance) {\n              console.error(`[ChatPanel Socket] 连接错误: ${err.message}, 正在尝试重连...`);\n              console.error('[ChatPanel Socket] Connection error:', err);\n              setIsChatConnected(false); \n              setIsConnectionError(true);\n          }\n      });\n    };\n\n    // 断开连接函数\n    const disconnectSocket = () => {\n      if (socketRef.current) {\n        console.log(`[ChatPanel Disconnect] Disconnecting socket for ${communityType} ID: ${communityId}`);\n        // 清理监听器\n        socketRef.current.off('connect');\n        socketRef.current.off('message_history');\n        socketRef.current.off('receive_message');\n        socketRef.current.off('status');\n        socketRef.current.off('error');\n        socketRef.current.off('disconnect');\n        socketRef.current.off('connect_error');\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n      // 重置状态\n      setSocket(null); \n      setIsInitialHistoryLoaded(false);\n      setIsChatConnected(false);\n      processedMessageIds.current.clear(); // 清空已处理消息ID集合\n    };\n\n    // 主要逻辑：根据 isOpen 状态决定连接或断开\n    if (isOpen) {\n      console.log(\"[ChatPanel Effect] isOpen is true, attempting to connect.\");\n      connectSocket();\n    } else {\n      console.log(\"[ChatPanel Effect] isOpen is false, disconnecting.\");\n      disconnectSocket();\n    }\n\n    // --- 清理函数 ---\n    return () => {\n        isMounted = false;\n        console.log(`[ChatPanel Effect Cleanup] Component unmounting or dependencies changed.`);\n        // 移除对 disconnectSocket 的直接调用，因为依赖项变化时 isOpen 会处理\n        // 如果 socketInstance 存在且未被 disconnectSocket 清理，则在此处清理\n        if (socketRef.current) {\n             console.log(\"[ChatPanel Effect Cleanup] Performing final disconnect.\");\n             disconnectSocket(); \n        }\n    };\n  // 修改依赖项：移除 isOpen，当这些核心 ID 或 token 变化时才重新执行连接逻辑\n  // isOpen 的变化通过上面的 if/else 控制连接/断开行为\n  }, [communityId, user?.id, token, communityType, scrollToBottom]); \n\n  // 新增 Effect：单独监听 isOpen 状态变化，执行连接/断开\n  useEffect(() => {\n    // 这个 Effect 只关心 isOpen 的变化\n    if (isOpen) {\n      // 如果面板打开，并且当前没有 socket 连接，则尝试连接\n      if (!socketRef.current) {\n        console.log(\"[ChatPanel isOpen Effect] Panel opened and no socket, triggering connect logic (handled by main effect if dependencies match).\");\n        // connectSocket(); // 主要 effect 会处理连接，这里避免重复调用\n        // 只需要确保主要 effect 被触发（如果依赖项变化了）\n        // 如果依赖项没变，但 socket 断了，需要一种机制重连，上面的逻辑已包含\n      } else {\n        console.log(\"[ChatPanel isOpen Effect] Panel opened, socket already exists/connecting.\");\n      }\n    } else {\n      // 如果面板关闭，则断开连接\n      if (socketRef.current) {\n        console.log(\"[ChatPanel isOpen Effect] Panel closed, triggering disconnect.\");\n        // 调用断开逻辑\n        socketRef.current.disconnect(); // 直接断开\n        socketRef.current = null;\n        setSocket(null);\n        setIsChatConnected(false);\n        setIsInitialHistoryLoaded(false);\n      } else {\n         console.log(\"[ChatPanel isOpen Effect] Panel closed, no socket to disconnect.\");\n      }\n    }\n  }, [isOpen]); // 只依赖 isOpen\n\n  // --- 滚动加载更多历史消息 ---\n  useEffect(() => {\n      const container = chatContainerRef.current;\n      if (!container) return;\n      \n      const fetchMoreHistory = () => {\n          if (!socketRef.current || !hasMoreHistory || isFetchingHistory || chatMessages.length === 0) {\n              // 如果正在加载、没有更多历史、或聊天记录为空，则不执行\n              return;\n          }\n          \n          // 设置正在加载状态，防止重复触发\n          setIsFetchingHistory(true);\n          \n          // 获取当前最旧的消息 ID 作为游标\n          const oldestMessageId = chatMessages[0]?.id;\n          \n          if (oldestMessageId) {\n              const roomName = communityType === 'topic' \n                  ? `community_topic_${communityId}` \n                  : `community_relationship_topic_${communityId}`;\n                  \n              console.log(`[ChatPanel Scroll] Requesting more history before message ID: ${oldestMessageId}`);\n              socketRef.current.emit('request_history', { \n                  room: roomName, \n                  limit: 30, // 可以调整每次加载的数量\n                  before_message_id: oldestMessageId \n              });\n          } else {\n               console.log('[ChatPanel Scroll] No oldest message ID found, cannot fetch more history.');\n               setIsFetchingHistory(false); // 如果没有旧消息ID，重置加载状态\n          }\n      };\n      \n      const handleScroll = () => {\n          // 检查是否滚动到顶部附近\n          if (container.scrollTop < 50 && hasMoreHistory && !isFetchingHistory) {\n              fetchMoreHistory();\n          }\n      };\n      \n      container.addEventListener('scroll', handleScroll);\n      \n      return () => {\n          container.removeEventListener('scroll', handleScroll);\n      };\n  }, [chatMessages, hasMoreHistory, isFetchingHistory, communityId, communityType, scrollToBottom]); // 添加依赖项\n\n  // --- 发送消息 ---\n  const handleSendCommunityChatMessage = () => {\n    // 如果已经在发送中，直接返回，防止重复发送\n    if (isSending) return;\n    \n    const roomName = communityType === 'topic' \n      ? `community_topic_${communityId}` \n      : `community_relationship_topic_${communityId}`;\n\n    if (socketRef.current && currentChatMessage.trim() && user && communityId) {\n      // 设置发送状态为true\n      setIsSending(true);\n      \n      const messageText = currentChatMessage.trim();\n      const isLynnMention = messageText.toLowerCase().includes('@lynn');\n      // *** 修改：为本地预览生成唯一 ID ***\n      const localId = `local_${Date.now()}_${Math.random().toString(36).substring(2)}`;\n      console.log(\"[ChatPanel] Generated localId for preview:\", localId);\n      \n      const messageData = {\n        room: roomName,\n        message: messageText,\n        is_ai_mention: isLynnMention,\n        local_id: localId // *** 发送本地ID给后端，用于确认 ***\n      };\n      console.log(\"[ChatPanel] Sending message:\", messageData);\n      \n      const localPreviewMessage: RealtimeChatMessage = {\n        id: localId, // *** 使用本地ID ***\n        userId: user.id,\n        username: user.nickname || user.email, \n        nickname: user.nickname,\n        avatar: user.avatar,\n        message: messageText,\n        timestamp: new Date().toISOString(),\n        is_system_message: false\n      };\n      // *** 修改：添加本地预览消息 ***\n      setChatMessages(prev => [...prev, localPreviewMessage]);\n      setTimeout(() => scrollToBottom('smooth'), 100); \n      \n      // 清空输入框\n      setCurrentChatMessage('');\n\n      // *** 修改：处理后端确认/错误 ***\n      socketRef.current.emit('send_message', messageData, (response: any) => {\n         // 重置发送状态\n         setIsSending(false);\n         \n         if (response?.error) {\n              console.error('[ChatPanel] Message send error:', response.error);\n              toast.error(`发送失败: ${response.error}`);\n              // 可选：移除发送失败的本地预览\n              setChatMessages(prev => prev.filter(msg => msg.id !== localId));\n          } else if (response?.success && response.message_id) {\n              console.log('[ChatPanel] Message send success, confirmed ID:', response.message_id);\n              // 添加服务器返回的消息ID到已处理列表，避免重复添加\n              if (response.message_id) {\n                processedMessageIds.current.add(response.message_id);\n              }\n          } else {\n              console.warn('[ChatPanel] Message send response did not contain success or error confirmation.');\n          }\n      });\n    } else {\n        if (!socketRef.current || !isChatConnected) toast.error(\"聊天服务未连接\");\n        else if (!currentChatMessage.trim()) toast.warn(\"请输入消息\");\n        else if (!user) toast.error(\"请先登录\");\n        else if (!communityId) console.error(\"无法发送消息: communityId 未提供\");\n    }\n  };\n\n  // --- 渲染聊天面板 ---\n  return (\n      <div\n        className={`w-full transition-opacity duration-700 ease-in-out mt-4 ${isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'}`}\n      >\n        {/* 容器没有阴影和边框 */}\n        <div className=\"w-full h-auto bg-transparent flex flex-col overflow-hidden\"> \n          \n          {/* 聊天内容区域 - 只在showContent为true时显示 */}\n          <div \n            ref={chatContainerRef} \n            className={`overflow-y-auto p-4 bg-transparent space-y-3 h-[500px] relative transition-opacity duration-500 ${showContent ? 'opacity-100' : 'opacity-0'}`}\n          >\n            {/* 正在加载更多历史指示器 */}\n            {isFetchingHistory && (\n                <div className=\"flex justify-center items-center py-2\">\n                    <div className=\"animate-pulse flex space-x-1\">\n                        <div className=\"h-1.5 w-1.5 bg-gray-400 rounded-full\"></div>\n                        <div className=\"h-1.5 w-1.5 bg-gray-400 rounded-full animation-delay-200\"></div>\n                        <div className=\"h-1.5 w-1.5 bg-gray-400 rounded-full animation-delay-400\"></div>\n                    </div>\n                </div>\n            )}\n            \n            {/* 没有更多历史提示 */}\n            {!hasMoreHistory && chatMessages.length > 0 && (\n                 <div className=\"text-center text-gray-500 text-xs py-2 animate-fade-in\">\n                     没有更早的消息了\n                 </div>\n             )}\n            \n            {/* --- 加载中提示：当历史记录还未接收时 --- */}\n            {!historyReceived && showContent && (\n              <div className=\"flex justify-center items-center h-full\">\n                <div className=\"text-gray-400 text-sm animate-pulse\">\n                  正在连接...\n                </div>\n              </div>\n            )}\n            \n            {/* --- 全部内容统一显示区域 --- */}\n            {historyReceived && (\n              <div className=\"space-y-3\">\n                {/* 如果没有消息 */}\n                {chatMessages.length === 0 ? (\n                  <div className=\"flex justify-center items-center h-full\">\n                    <div className=\"text-gray-500 text-sm animate-fade-in\">\n                      欢迎来到 {communityName} 讨论区！\n                    </div>\n                  </div>\n                ) : (\n                  /* 消息列表 - 使用统一动画效果 */\n                  chatMessages.map((msg, index) => {\n                    // 只有第一次加载完成前的消息需要序列动画\n                    const shouldAnimate = !isInitialHistoryLoaded;\n                    return renderChatMessage(msg, index, shouldAnimate ? index : -1);\n                  })\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* 输入区域 - 添加上边框作为分割线，移除背景和圆角 */}\n          <div className={`p-3 flex-shrink-0 border-t border-gray-700/50 transition-opacity duration-500 ${showContent ? 'opacity-100' : 'opacity-0'}`}>\n            {/* 将 form 移到外面，处理提示信息 */}\n            {!user ? (\n              <p className=\"text-xs text-yellow-600 text-center\">请 <Link to=\"/login\" className=\"underline hover:text-yellow-700\">登录</Link> 后参与讨论。</p>\n            ) : !isChatConnected ? (\n              <p className=\"text-xs text-amber-400 text-center\">讨论服务连接中...</p>\n            ) : (\n              <form onSubmit={(e) => { e.preventDefault(); handleSendCommunityChatMessage(); }} className=\"flex items-center space-x-2 w-full\">\n                <input\n                  type=\"text\"\n                  value={currentChatMessage}\n                  onChange={(e) => setCurrentChatMessage(e.target.value)}\n                  placeholder=\"\"\n                  disabled={!isChatConnected || !user || isSending}\n                  className=\"flex-grow px-3 py-1.5 bg-gray-900/40 border border-transparent rounded-md focus:outline-none focus:ring-1 focus:ring-indigo-500/60 text-gray-100 placeholder-gray-400 text-sm disabled:bg-gray-700/30 disabled:cursor-not-allowed\"\n                  onKeyDown={(e) => { if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') { e.preventDefault(); handleSendCommunityChatMessage(); } }}\n                />\n                <button\n                  type=\"submit\"\n                  className={`p-1.5 rounded-md focus:outline-none transition-colors duration-200\n                            ${!isChatConnected || !currentChatMessage.trim() || !user || isSending\n                              ? 'text-gray-500 cursor-not-allowed'\n                              : 'text-indigo-400 hover:text-indigo-300'}`}\n                  disabled={!isChatConnected || !currentChatMessage.trim() || !user || isSending}\n                >\n                  {/* 回车图标 */}\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M7 13l5 5 5-5M7 6l5 5 5-5\"/>\n                  </svg>\n                </button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n  );\n  \n  // 辅助函数：渲染单条消息\n  function renderChatMessage(msg: RealtimeChatMessage, index: number, animationIndex: number = -1) {\n    const isCurrentUser = msg.userId === user?.id; \n    const isLynnAI = msg.is_system_message;\n\n    // 只有新增的消息或已加载完成的消息才有弹入动画\n    const isNewMessage = msg.id === chatMessages[chatMessages.length - 1]?.id && \n                        chatMessages.length > 1 && \n                        isInitialHistoryLoaded && \n                        !msg.id.startsWith('local_');\n                        \n    const animationClass = isNewMessage ? 'animate-fade-in-up' : \n                           animationIndex >= 0 ? 'animate-fade-in' : '';\n    \n    // 计算序列动画延迟\n    const delayStyle = animationIndex >= 0 \n                      ? { animationDelay: `${Math.min(animationIndex * 30, 300)}ms` } \n                      : {};\n    \n    return ( \n      <div \n        key={msg.id || index} \n        className={`flex flex-col ${isCurrentUser ? 'items-end' : 'items-start'} ${animationClass}`}\n        style={delayStyle}\n      > \n        {/* Avatar and username (if not current user and not AI) */} \n        {!isCurrentUser && !isLynnAI && ( \n          <div className=\"flex items-center mb-1\"> \n            <img \n              src={msg.avatar || '/default-avatar.png'} \n              alt={msg.nickname || msg.username || '用户'} \n              className=\"w-5 h-5 rounded-full mr-2\" \n              onError={(e) => (e.currentTarget.src = '/default-avatar.png')} \n            /> \n            <span className=\"text-xs text-gray-400 font-medium\">{msg.nickname || msg.username || '匿名用户'}</span> \n          </div> \n        )} \n        {/* Message bubble */} \n        <div className={`max-w-[85%] px-3 py-1.5 rounded-lg text-sm shadow-sm break-words ${ \n          isLynnAI \n            ? 'bg-gradient-to-r from-purple-600/80 to-indigo-600/80 text-white rounded-bl-none self-start backdrop-blur-sm' \n            : isCurrentUser \n              ? 'bg-indigo-600/70 text-white rounded-br-none self-end backdrop-blur-sm' \n              : 'bg-teal-700/70 text-gray-100 rounded-bl-none self-start backdrop-blur-sm'\n        }`}> \n          <span>{msg.message}</span> \n        </div> \n        {/* Timestamp - MODIFIED */} \n        {msg.timestamp && ( \n          <span className={`text-xs text-gray-500 mt-1 px-1 ${isCurrentUser ? 'self-end' : 'self-start'}`}> \n            {/* 调用新的格式化函数 */} \n            {formatChatMessageTimestamp(msg.timestamp)} \n          </span> \n        )} \n      </div> \n    );\n  }\n};\n\nexport default CommunityChatPanel; ","/**\n * CommunityContentPageLayout.tsx\n * \n * 功能注释：\n * 定义社区内容页面（例如主题 Topic 或关系主题 Relationship Topic 页面）的通用布局结构。\n * 负责组织页面的主要组成部分，包括：\n *   - 主要内容区域，包含：\n *     - 左侧（或主要区域）的帖子列表：\n *       - 使用网格布局 (grid) 排列帖子卡片。\n *       - 调用 FrostedPostCard 组件来渲染每个帖子。\n *       - 处理帖子加载状态 (isLoadingPosts) 和空列表情况。\n *     - 右侧（或侧边栏区域）的信息与操作区：\n *       - 显示社区信息卡片 (CommunityInfoCard)。\n *       - 提供创建新帖子、收藏（可选）、社区讨论（可选）等操作按钮。\n * 处理整个页面的加载状态 (isLoading) 和错误状态 (error)。\n * 管理 Chatbot 的打开/关闭状态。\n * 接收页面所需的数据作为 props，例如主题详情 (topicDetails)、帖子列表 (posts) 等。\n * 允许通过 children prop 插入特定于页面的额外内容。\n * \n * 注意: 导航栏组件(Navbar和SideNavbar)已移至全局布局，不在此组件中引入\n */\nimport React, { ReactNode, useState } from 'react';\nimport CommunityInfoCard from './CommunityInfoCard';\nimport FrostedPostCard from './FrostedPostCard';\nimport { Link } from 'react-router-dom';\nimport { API_BASE_URL } from '../config';\nimport { useSidebar } from '../contexts/SidebarContext'; // 引入 useSidebar\nimport CommunityChatPanel from './CommunityChatPanel'; // 引入 CommunityChatPanel\n\n// 定义帖子类型 (与页面组件一致)\ninterface Post {\n  id: number;\n  title: string;\n  author: any;\n  summary?: string;\n  excerpt?: string;\n  upvotes?: number;\n  comments?: number;\n  created_at?: string;\n  timestamp?: string;\n  cover_image?: string;\n  imageUrl?: string;\n  slug: string;\n}\n\n// 定义通用的主题信息类型 (包含 Topic 和 RelationshipTopic 的共同字段)\ninterface CommonTopicInfo {\n  id: number;\n  name: string;\n  slug: string;\n  description: string | null;\n  // participant_topics?: any[]; // 如果需要特殊处理关系主题的参与者\n}\n\n// --- 新增：定义父主题类型 ---\ntype ParentTopicType = 'topic' | 'relationship';\n// --- 结束新增 ---\n\n// 定义 Props 接口\ninterface CommunityContentPageLayoutProps {\n  isLoading: boolean; // 页面主要内容是否加载中\n  error: string | null; // 加载错误信息\n  topicDetails: CommonTopicInfo | null; // 主题或关系主题的详情\n  posts: Post[]; // 帖子列表\n  isLoadingPosts: boolean; // 帖子是否加载中\n  \n  parentType: ParentTopicType;\n  parentSlug: string | undefined;\n  \n  showFavoriteButton?: boolean; \n  isFavorited?: boolean;\n  isLoadingFavorite?: boolean;\n  onToggleFavorite?: () => void;\n\n  onCreatePost?: () => void; \n\n  showChatButton?: boolean; \n  isChatAvailable?: boolean; \n\n  children?: ReactNode;\n}\n\nconst CommunityContentPageLayout: React.FC<CommunityContentPageLayoutProps> = ({\n  isLoading,\n  error,\n  topicDetails,\n  posts,\n  isLoadingPosts,\n  parentType,\n  parentSlug,\n  showFavoriteButton = false,\n  isFavorited = false,\n  isLoadingFavorite = false,\n  onToggleFavorite = () => {},\n  onCreatePost = () => {},\n  showChatButton = false,\n  isChatAvailable = false,\n  children\n}) => {\n  const { isSidebarOpen } = useSidebar(); // 使用 Context 获取状态\n  const [isChatVisible, setIsChatVisible] = useState(false); // 添加状态控制聊天面板显隐\n\n  return (\n    <div className=\"flex-1 overflow-y-auto transition-all duration-300 ease-in-out\">\n          {isLoading && (\n         <div className=\"flex justify-center items-center py-10\">\n               <p className=\"text-gray-400\">正在加载内容...</p>\n             </div>\n          )}\n          {error && !isLoading && (\n         <div className=\"flex justify-center items-center py-10\">\n               <p className=\"text-red-400\">错误: {error}</p>\n            </div>\n          )}\n\n          {!isLoading && !error && topicDetails && (\n            <div className=\"container mx-auto px-4 py-4\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-5\">\n                \n                <div className=\"lg:col-span-3\">\n                  <div className=\"grid grid-cols-1 gap-5\">\n                    {isLoadingPosts ? (\n                      <p className=\"text-center text-gray-400 py-10\">正在加载帖子...</p>\n                    ) : posts.length > 0 ? (\n                      posts.map(post => (\n                        <FrostedPostCard \n                          key={post.id} \n                          post={post} \n                          parentType={parentType}\n                          parentSlug={parentSlug}\n                        />\n                      ))\n                    ) : (\n                      <p className=\"text-center text-gray-400 py-10\">这里还没有帖子。</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"lg:col-span-2 space-y-5\">\n                  <CommunityInfoCard \n                    name={topicDetails.name}\n                    description={topicDetails.description}\n                    slug={topicDetails.slug}\n                    id={topicDetails.id}\n                    isFavorited={isFavorited}\n                    onToggleFavorite={onToggleFavorite}\n                    isLoadingFavorite={isLoadingFavorite}\n                  />\n                    \n                  <div className=\"flex flex-row justify-start gap-2 flex-wrap\">\n                    <button\n                      onClick={onCreatePost}\n                      className={`flex items-center justify-center px-3 py-1.5 rounded-md text-xs font-medium transition-colors duration-200 \\\n                                  bg-gray-700/50 text-gray-300 hover:bg-gray-600/70 \\\n                                  backdrop-blur-sm border border-gray-600/50`}\n                      title=\"发布新帖子\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                      </svg>\n                      新帖子\n                    </button>\n                    \n                    {showFavoriteButton && (\n                      <button \n                        onClick={onToggleFavorite} \n                        disabled={isLoadingFavorite}\n                        className={`flex items-center justify-center px-3 py-1.5 rounded-md text-xs font-medium transition-colors duration-200 backdrop-blur-sm border border-gray-600/50 \\\n                                    ${isLoadingFavorite \n                                      ? 'opacity-50 cursor-not-allowed bg-gray-600/50 text-gray-400'\n                                      : isFavorited \n                                        ? 'bg-yellow-500/60 text-yellow-100 hover:bg-yellow-600/70'\n                                        : 'bg-gray-700/50 text-gray-300 hover:bg-gray-600/70'\n                                    }`\n                                  }\n                      >\n                          {isLoadingFavorite ? (\n                            <>\n                            <svg className=\"animate-spin h-3.5 w-3.5 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle><path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg>\n                              <span>加载</span>\n                            </>\n                          ) : (\n                            <>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                            </svg>\n                              {isFavorited ? '已收藏' : '收藏'}\n                            </>\n                        )}\n                      </button>\n                    )}\n                    \n                    {showChatButton && (\n                      <button \n                        onClick={() => setIsChatVisible(!isChatVisible)}\n                        disabled={!isChatAvailable}\n                        className={`flex items-center justify-center px-3 py-1.5 rounded-md text-xs font-medium transition-colors duration-200 \\\n                                    bg-[#CD5C5C]/50 text-gray-200 hover:bg-[#CD5C5C]/70 \\\n                                    backdrop-blur-sm border border-gray-600/50 \\\n                                    ${!isChatAvailable ? 'opacity-50 cursor-not-allowed' : ''}`}\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" />\n                        </svg>\n                        讨论\n                      </button>\n                    )}\n                  </div>\n\n                  {isChatVisible && topicDetails && (\n                    <CommunityChatPanel\n                      isOpen={isChatVisible}\n                      onClose={() => setIsChatVisible(false)}\n                      communityId={topicDetails.id}\n                      communityType={parentType === 'topic' ? 'topic' : 'relationship_topic'}\n                      communityName={topicDetails.name}\n                    />\n                  )}\n\n                </div>\n              </div>\n            </div>\n          )}\n\n          {children}\n    </div>\n  );\n};\n\nexport default CommunityContentPageLayout; "],"names":["_ref","name","description","slug","id","isFavorited","onToggleFavorite","isLoadingFavorite","onCreatePost","useNavigate","_jsxs","className","children","_jsx","post","parentType","parentSlug","postContent","content","summary","excerpt","likesCount","undefined","likes_count","like_count","collectsCount","collects_count","collect_count","commentsCount","comments_count","comment_count","comments","sharesCount","shares_count","share_count","openInNewTabWithPreload","useCallback","url","e","preventDefault","preloadPageUrl","encodeURIComponent","newWindow","window","open","opener","postUrl","buildPostUrl","postIdentifier","console","warn","href","onClick","title","dangerouslySetInnerHTML","__html","replace","match","originalUrl","videoId","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","author","nickname","email","dateString","date","Date","isNaN","getTime","year","getFullYear","month","getMonth","day","getDate","hours","getHours","toString","padStart","getMinutes","formatDate","created_at","timestamp","formatChatMessageTimestamp","timestampStr","messageDate","error","now","beijingNow","toLocaleString","timeZone","beijingMessageDate","todayStartBeijing","yesterdayStartBeijing","setDate","timeOptions","hour","minute","hour12","formattedTime","toLocaleTimeString","communityId","communityType","communityName","isOpen","onClose","user","token","useAuth","socket","setSocket","useState","socketRef","useRef","chatMessages","setChatMessages","currentChatMessage","setCurrentChatMessage","isChatConnected","setIsChatConnected","chatContainerRef","isInitialHistoryLoaded","setIsInitialHistoryLoaded","isFetchingHistory","setIsFetchingHistory","hasMoreHistory","setHasMoreHistory","loadingProgress","setLoadingProgress","isConnectionError","setIsConnectionError","showContent","setShowContent","historyReceived","setHistoryReceived","isSending","setIsSending","processedMessageIds","Set","scrollToBottom","behavior","arguments","length","current","scrollTo","top","scrollHeight","useEffect","timer","setTimeout","clearTimeout","isMounted","socketInstance","disconnectSocket","log","off","disconnect","clear","connectSocket","roomName","io","getSocketIOServerURL","path","transports","auth","reconnection","reconnectionAttempts","reconnectionDelay","timeout","on","_socketInstance","_socketInstance2","_socketInstance3","emit","room","username","limit","data","history","has_more","requested_before_id","container","oldScrollHeight","oldScrollTop","scrollTop","forEach","msg","add","prev","existingIds","map","m","filter","has","requestAnimationFrame","newScrollHeight","message","local_id","isOwnMessage","userId","is_system_message","existingIndex","findIndex","updatedMessages","some","toast","reason","err","handleScroll","fetchMoreHistory","_chatMessages$","oldestMessageId","before_message_id","addEventListener","removeEventListener","handleSendCommunityChatMessage","trim","messageText","isLynnMention","toLowerCase","includes","localId","Math","random","substring","messageData","is_ai_mention","localPreviewMessage","avatar","toISOString","response","success","message_id","ref","index","_chatMessages","animationIndex","isCurrentUser","isLynnAI","isNewMessage","startsWith","animationClass","delayStyle","animationDelay","min","style","src","alt","onError","currentTarget","renderChatMessage","onSubmit","type","value","onChange","target","placeholder","disabled","onKeyDown","ctrlKey","metaKey","key","Link","to","isLoading","topicDetails","posts","isLoadingPosts","showFavoriteButton","showChatButton","isChatAvailable","isSidebarOpen","useSidebar","isChatVisible","setIsChatVisible","FrostedPostCard","CommunityInfoCard","fillRule","clipRule","_Fragment","cx","cy","r","CommunityChatPanel"],"sourceRoot":""}