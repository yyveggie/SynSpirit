{"version":3,"file":"static/js/650.72c822c1.chunk.js","mappings":"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","sources":["components/Skeletons/ArticleDetailSkeleton.tsx","pages/ArticlePage.tsx"],"sourcesContent":["import React from 'react';\n\nconst ArticleDetailSkeleton: React.FC = () => {\n  const skeletonStyle: React.CSSProperties = {\n    width: '100%',\n    minHeight: '100vh',\n    backgroundColor: 'var(--bg-base-color)', \n    backgroundImage: 'var(--bg-gradient)',\n    padding: '20px', \n    boxSizing: 'border-box',\n    color: 'white',\n  };\n\n  const placeholderBaseStyle: React.CSSProperties = {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: '4px',\n    marginBottom: '12px',\n    animation: 'pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n  };\n  \n  const keyframesStyle = `\n    @keyframes pulse {\n      0%, 100% {\n        opacity: 0.6;\n      }\n      50% {\n        opacity: 0.3;\n      }\n    }\n  `;\n\n  return (\n    <>\n      <style>{keyframesStyle}</style>\n      <div style={skeletonStyle} aria-busy=\"true\" aria-live=\"polite\" role=\"status\" aria-label=\"正在加载文章详情...\">\n        {/* 模拟文章大标题 */}\n        <div style={{ ...placeholderBaseStyle, height: '40px', width: '80%', marginBottom: '28px' }}></div>\n        \n        {/* 模拟作者信息区域 */}\n        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '28px' }}>\n          <div style={{ ...placeholderBaseStyle, width: '48px', height: '48px', borderRadius: '50%', marginRight: '16px' }}></div>\n          <div>\n            <div style={{ ...placeholderBaseStyle, height: '18px', width: '150px', marginBottom: '8px' }}></div>\n            <div style={{ ...placeholderBaseStyle, height: '14px', width: '100px' }}></div>\n          </div>\n        </div>\n        \n        {/* 模拟文章内容段落 */}\n        <div style={{ ...placeholderBaseStyle, height: '22px', width: '100%', marginBottom: '16px' }}></div>\n        <div style={{ ...placeholderBaseStyle, height: '22px', width: '100%', marginBottom: '16px' }}></div>\n        <div style={{ ...placeholderBaseStyle, height: '22px', width: '90%', marginBottom: '16px' }}></div>\n        <div style={{ ...placeholderBaseStyle, height: '22px', width: '95%', marginBottom: '30px' }}></div>\n\n        {/* 模拟图片或代码块占位 */}\n        <div style={{ ...placeholderBaseStyle, height: '180px', width: '100%', marginBottom: '30px' }}></div>\n\n        <div style={{ ...placeholderBaseStyle, height: '22px', width: '100%', marginBottom: '16px' }}></div>\n        <div style={{ ...placeholderBaseStyle, height: '22px', width: '85%', marginBottom: '16px' }}></div>\n      </div>\n    </>\n  );\n};\n\nexport default ArticleDetailSkeleton; ","/**\n * ArticlePage.tsx\n * \n * 功能注释：\n * 定义展示单个文章详情页面的 React 组件。\n * \n * 主要功能:\n * - 从 URL 参数获取文章 slug。\n * - 使用 TanStack Query 的自定义 Hook (`useArticleDetails`) 获取并缓存文章详情。\n * - 处理文章内容的渲染，包括 LaTeX 和 iframe 居中。\n * - 显示作者信息、发布时间、标签、系列文章等元数据。\n * - 管理用户对文章的点赞、收藏、分享操作及状态（本地状态管理，通过初始数据填充）。\n * - 如果当前用户是作者，提供编辑和删除按钮。\n * - 集成 `CommentSection` 组件用于显示和处理评论。\n * - 集成实时聊天功能 (Socket.IO)。\n * - 显示相关工具推荐。\n * \n * 注意: 导航栏组件(Navbar和SideNavbar)已移至全局布局，不需要在页面组件中引入\n */\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { API_BASE_URL } from '../config';\nimport { useAuth } from '../context/AuthContext';\nimport { useSidebar } from '../contexts/SidebarContext'; // 引入 useSidebar\nimport axios from 'axios';\nimport io, { Socket } from 'socket.io-client';\n// @ts-ignore\nimport 'katex/dist/katex.min.css';\nimport Modal from '../components/Modal';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CommentSection from '../components/CommentSection'; // 确保 CommentSection 引入\nimport { motion } from 'framer-motion'; // 导入 motion\n// --- TanStack Query Imports (Add these) ---\nimport { useQueryClient } from '@tanstack/react-query';\n// --- Import Custom Hook ---\nimport { useArticleDetails, useLikeArticle, useCollectArticle } from '../hooks/useArticleQueries'; // Import the hook\n// --- 导入分享组件 ---\nimport ShareDynamicModal from '../components/ShareDynamicModal';\nimport { Share2 } from 'lucide-react';\nimport ArticleDetailSkeleton from '../components/Skeletons/ArticleDetailSkeleton'; // 1. 导入骨架屏\nimport AuthorTooltip from '../components/AuthorTooltip'; // 导入 AuthorTooltip 组件\nimport { fixImageUrl, handleImageLoadError } from '../utils/imageProxy'; // 添加图片处理工具导入\n\n// --- 接口定义 (确保包含 nickname) ---\ninterface UserInfo { \n  id: number;\n  nickname?: string | null;\n  email?: string;\n  avatar?: string | null; // 添加avatar属性\n}\n// --- 结束接口定义 ---\n\n// Add Tool interface back\ninterface Tool {\n  id: number;\n  name: string;\n  description?: string; \n  category_id?: number; \n  slug?: string; \n}\n\n// --- 新增：聊天消息接口 ---\ninterface ChatMessage {\n  username: string;\n  message: string;\n  room: string; // 确认房间\n  timestamp?: string; // 可选时间戳\n}\n// --- 结束新增 ---\n\n// 添加User接口定义\ninterface User {\n  id: number;\n  username: string;\n  nickname?: string | null;\n  email?: string;\n  avatar?: string | null; // 添加avatar属性\n}\n\nconst ArticlePage: React.FC = () => {\n  const queryClient = useQueryClient(); // 将 useQueryClient() 移动到这里\n  const { slug } = useParams<{ slug: string }>();\n  // Removed useState for article, loading, error\n  const { isSidebarOpen } = useSidebar();\n  const [featuredTools, setFeaturedTools] = useState<Tool[]>([]);\n  const { token, user } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const contentRef = useRef<HTMLDivElement>(null);\n  const SERIES_WINDOW_SIDE = 5;\n  const [visibleSeriesStart, setVisibleSeriesStart] = useState(0);\n  const [visibleSeriesEnd, setVisibleSeriesEnd] = useState(-1);\n  const [totalSeriesCount, setTotalSeriesCount] = useState(0);\n  const [currentSeriesIndex, setCurrentSeriesIndex] = useState(-1);\n  const [isShareModalOpen, setIsShareModalOpen] = useState(false);\n  const [shareComment, setShareComment] = useState('');\n  // --- Tooltip State ---\n  const [tooltipData, setTooltipData] = useState<{ nickname: string; bio?: string | null; tags?: string[] | null; avatar?: string | null } | null>(null);\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n  // --- Add back shareCount state --- \n  const [shareCount, setShareCount] = useState(0);\n  // Keep interaction states locally\n  const [isSubmittingAction, setIsSubmittingAction] = useState(false); // Keep for share/delete actions\n  // Keep chat states locally\n  const socketRef = useRef<Socket | null>(null);\n  const [chatMessages, setChatMessages] = useState<ChatMessage[]>([]);\n  const [currentChatMessage, setCurrentChatMessage] = useState('');\n  const chatContainerRef = useRef<HTMLDivElement>(null); \n  const [isRealtimeChatOpen, setIsRealtimeChatOpen] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [commentBoxPosition, setCommentBoxPosition] = useState({ x: 0, y: 0 });\n\n  // --- Use TanStack Query Hooks --- \n  const { \n    data: article, \n    isLoading: loading, // Rename isLoading to loading\n    isError, \n    error: queryError \n  } = useArticleDetails(slug, token);\n\n  // --- Instantiate Mutation Hooks ---\n  const likeMutation = useLikeArticle(slug);\n  const collectMutation = useCollectArticle(slug);\n\n  // Determine effective error state\n  const effectiveError = isError \n    ? (queryError as Error)?.name === \"RateLimitExceeded\" \n      ? \"请求频率过高，请等待片刻后刷新页面。\" \n      : (queryError as Error)?.message || '获取文章详情失败，请稍后重试。' \n    : null;\n\n  // Add debug function to log content info right before render - 移动到组件顶部\n  useEffect(() => {\n    if (article?.content) {\n      \n      // Count Markdown images \n      const imageMatches = article.content.match(/!\\[(.*?)\\]\\((https?:\\/\\/[^)]+)\\)/g);\n      \n      if (imageMatches) {\n        imageMatches.forEach((match, index) => {\n          console.log(`图片${index+1}:`, match);\n        });\n      }\n      \n      // Preview processed content\n      const processed = processContentForVideos(article.content);\n    }\n  }, [article?.content]);\n\n  // --- Initialize shareCount from article data --- \n  useEffect(() => {\n      if (article) {\n          setShareCount(article.share_count || 0);\n      } else {\n          setShareCount(0);\n      }\n  }, [article]);\n\n  // --- Socket.IO useEffect (remains the same, depends on slug, user, isRealtimeChatOpen) --- \n  useEffect(() => {\n    if (!slug || !isRealtimeChatOpen) return;\n    let hasLoggedError = false;\n    console.log('初始化Socket.IO连接...');\n    const baseUrl = 'http://localhost:5001';\n    console.log('Socket.IO服务器地址:', baseUrl);\n    socketRef.current = io(baseUrl, {\n        path: '/socket.io',\n        transports: ['websocket'], \n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n        timeout: 10000\n    });\n    const socket = socketRef.current;\n    socket.on('connect', () => {\n      console.log('Socket连接成功:', socket.id);\n      setIsConnected(true);\n      hasLoggedError = false;\n      const username = user?.nickname || user?.email || 'Anonymous';\n      socket.emit('join', { room: slug, username: username });\n      console.log(`加入聊天室: ${slug} 用户名: ${username}`);\n    });\n    socket.on('status', (data: { msg: string }) => {\n      console.log('服务器状态信息:', data.msg);\n      setChatMessages(prev => [...prev, { username: 'System', message: data.msg, room: slug }]);\n    });\n    socket.on('receive_message', (data: ChatMessage) => {\n      if (data.room === slug) {\n        setChatMessages(prev => [...prev, data]);\n      }\n    });\n    socket.on('connect_error', (err) => {\n      if (!hasLoggedError) {\n        console.warn('聊天服务连接错误，将自动重试:', err.message);\n        hasLoggedError = true;\n      }\n      setIsConnected(false);\n    });\n    socket.on('disconnect', (reason) => {\n      console.log('Socket断开连接:', reason);\n      setIsConnected(false);\n    });\n    return () => {\n      if (socket && socket.connected) {\n        console.log(`离开聊天室: ${slug}`);\n        const username = user?.nickname || user?.email || 'Anonymous';\n        socket.emit('leave', { room: slug, username: username });\n        console.log('断开Socket连接...');\n        socket.disconnect();\n        socketRef.current = null;\n        setIsConnected(false);\n      }\n    };\n  }, [slug, user, isRealtimeChatOpen]);\n\n  // --- Chat auto-scroll useEffect (remains the same) --- \n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  // --- Featured Tools useEffect (remains the same, no dependency on article data) --- \n  useEffect(() => {\n    const loadFeaturedTools = async () => {\n      try {\n        // Use axios if preferred, ensure API_BASE_URL is correct\n        const response = await axios.get<{ tools: Tool[] }>(`${API_BASE_URL}/api/tools?limit=6&sort_by=popularity&sort_order=desc`);\n        setFeaturedTools(response.data.tools || []);\n      } catch (error) {\n        console.error('加载热门工具失败:', error);\n      }\n    };\n    loadFeaturedTools();\n  }, []); // Empty dependency array, fetch only once\n\n  // --- Series Navigation useEffect (remains the same, depends on article?.series_articles) --- \n  useEffect(() => {\n    if (article?.series_articles && article.series_articles.length > 0) {\n      const totalCount = article.series_articles.length;\n      const currentIndex = article.series_articles.findIndex(a => a.is_current);\n      setTotalSeriesCount(totalCount);\n      setCurrentSeriesIndex(currentIndex);\n      if (currentIndex !== -1) {\n        const start = Math.max(0, currentIndex - SERIES_WINDOW_SIDE);\n        const end = Math.min(totalCount - 1, currentIndex + SERIES_WINDOW_SIDE);\n        setVisibleSeriesStart(start);\n        setVisibleSeriesEnd(end);\n      } else {\n        setVisibleSeriesStart(0);\n        setVisibleSeriesEnd(Math.min(totalCount - 1, (SERIES_WINDOW_SIDE * 2)));\n      }\n    } else {\n      setVisibleSeriesStart(0);\n      setVisibleSeriesEnd(-1);\n      setTotalSeriesCount(0);\n      setCurrentSeriesIndex(-1);\n    }\n  }, [article?.series_articles]);\n\n  // --- Expand Series Handlers (remain the same) --- \n  const showEarlierSeries = () => {\n    const newStart = Math.max(0, visibleSeriesStart - (SERIES_WINDOW_SIDE * 2 + 1));\n    setVisibleSeriesStart(newStart);\n  };\n  const showLaterSeries = () => {\n    const newEnd = Math.min(totalSeriesCount - 1, visibleSeriesEnd + (SERIES_WINDOW_SIDE * 2 + 1));\n    setVisibleSeriesEnd(newEnd);\n  };\n\n  // --- formatDate Helper (remains the same) --- \n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleString('zh-CN', { \n      year: 'numeric', \n      month: 'long', // Changed from 'numeric' to 'long' for '月'\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    });\n  };\n\n  // --- getImageUrl Helper --- \n  const getImageUrl = (imagePath: string | null): string | undefined => {\n    if (!imagePath) return undefined;\n    \n    // 直接使用/api/upload/proxy/image确保使用代理，绕过全局设置\n    if (imagePath.startsWith('http')) {\n      const proxyDomain = '/api/upload/proxy/image';\n      const queryParams = new URLSearchParams();\n      queryParams.append('url', encodeURIComponent(imagePath));\n      \n      return `${proxyDomain}?${queryParams.toString()}`;\n    }\n    \n    // 非http URL直接返回（如相对路径或data:URLs）\n    return imagePath;\n  };\n\n  // --- LaTeX Rendering useEffect (remains the same, depends on article?.content) --- \n  useEffect(() => {\n    if (article?.content && contentRef.current) {\n      const processImages = () => {\n        if (!contentRef.current) return;\n        \n        // 1. 处理已有的img标签\n        const images = contentRef.current.querySelectorAll('img');\n        images.forEach(img => {\n          const currentSrc = img.getAttribute('src');\n          const dataOriginalSrc = img.getAttribute('data-original-src');\n\n          if (dataOriginalSrc) { // If data-original-src exists, it's our source of truth for the original URL\n            console.log(`[ArticlePage useEffect img dataOriginalSrc] URL before fixImageUrl: ${dataOriginalSrc}`);\n            const desiredSrc = fixImageUrl(dataOriginalSrc);\n            if (img.src !== desiredSrc) {\n              console.log(`(ArticlePage useEffect) Correcting src for ${dataOriginalSrc.substring(0, 50)}... to ${desiredSrc.substring(0, 50)}...`);\n              img.src = desiredSrc;\n              // Ensure onerror is re-attached if we are changing src, pointing to the true original URL\n              img.onerror = () => {\n                handleImageLoadError(dataOriginalSrc, img);\n                return true;\n              };\n            }\n          } else if (currentSrc && currentSrc.startsWith('http')) { // No data-original-src, and current src is an http URL\n            console.log(`(ArticlePage useEffect) Initial processing for ${currentSrc.substring(0, 50)}...`);\n            img.setAttribute('data-original-src', currentSrc);\n            console.log(`[ArticlePage useEffect img currentSrc] URL before fixImageUrl: ${currentSrc}`);\n            img.src = fixImageUrl(currentSrc);\n            img.onerror = () => {\n              handleImageLoadError(currentSrc, img);\n              return true;\n            };\n          }\n\n          // 基本样式应用\n          if (img.className === '') img.className = 'markdown-image';\n          if (img.style.maxWidth === '') img.style.maxWidth = '100%';\n          if (img.style.margin === '') img.style.margin = '10px auto';\n          if (img.style.display === '') img.style.display = 'block';\n        });\n\n        // 2. 处理Markdown格式图片（从文本节点动态创建）\n        const allElements = contentRef.current.querySelectorAll('*:not(script):not(style)'); // Avoid processing script/style tags\n        allElements.forEach(el => {\n          if (el.childNodes && el.childNodes.length > 0) {\n            Array.from(el.childNodes).forEach(node => { // Iterate over a copy if replacing nodes\n              if (node.nodeType === Node.TEXT_NODE && node.textContent) {\n                const text = node.textContent;\n                const imgRegex = /!\\[(.*?)\\]\\((https?:\\/\\/[^)]+)\\)/g;\n                let match;\n                let lastIndex = 0;\n                const fragment = document.createDocumentFragment();\n                let hasMatch = false;\n                \n                while ((match = imgRegex.exec(text)) !== null) {\n                  hasMatch = true;\n                  const matchStart = match.index;\n                  const matchEnd = matchStart + match[0].length;\n                  \n                  if (matchStart > lastIndex) {\n                    fragment.appendChild(document.createTextNode(text.substring(lastIndex, matchStart)));\n                  }\n                  \n                  const img = document.createElement('img');\n                  const originalUrlFromMarkdown = match[2]; // 图片URL from regex\n                  console.log(`(ArticlePage useEffect) Processing Markdown image from text node: ${originalUrlFromMarkdown.substring(0, 50)}...`);\n                  \n                  img.setAttribute('data-original-src', originalUrlFromMarkdown);\n                  console.log(`[ArticlePage useEffect markdown] URL before fixImageUrl: ${originalUrlFromMarkdown}`);\n                  img.src = fixImageUrl(originalUrlFromMarkdown);\n                  img.alt = match[1];\n                  img.className = 'markdown-image';\n                  img.style.maxWidth = '100%';\n                  img.style.margin = '10px auto';\n                  img.style.display = 'block';\n                  img.onerror = () => {\n                    handleImageLoadError(originalUrlFromMarkdown, img);\n                    return true;\n                  };\n                  fragment.appendChild(img);\n                  lastIndex = matchEnd;\n                }\n                \n                if (hasMatch) {\n                  if (lastIndex < text.length) {\n                    fragment.appendChild(document.createTextNode(text.substring(lastIndex)));\n                  }\n                  node.parentNode?.replaceChild(fragment, node);\n                }\n              }\n            });\n          }\n        });\n      };\n\n      processImages();\n\n      // LaTeX渲染逻辑 (保持不变)\n      // ... (KaTeX and observer logic) ...\n    }\n  }, [article?.content, fixImageUrl]); // fixImageUrl 作为依赖\n\n  // --- iframe centering useEffect (使用更宽松的选择器处理视频) ---\n  useEffect(() => {\n    if (contentRef.current && article?.content) {\n      // 查找所有的视频iframe元素，无论来源\n      const iframes = contentRef.current.querySelectorAll('iframe');\n      \n      // 处理每个找到的iframe\n      iframes.forEach(iframe => {\n        // 跳过已经处理过的iframe\n        if (iframe.parentElement?.classList.contains('video-processed')) return;\n        \n        // 确保iframe有一个清晰的宽高比例容器\n        const currentParent = iframe.parentElement;\n        if (!currentParent) return;\n        \n        // 重置当前父元素的样式\n        if (currentParent instanceof HTMLElement) {\n          currentParent.style.cssText = '';\n          currentParent.className = '';\n        }\n\n        // 创建新的视频容器div\n        const videoContainer = document.createElement('div');\n        videoContainer.className = 'video-container video-processed';\n        videoContainer.style.cssText = 'width: 100%; max-width: 800px; margin: 2em auto; position: relative; aspect-ratio: 16/9; background: #000; border-radius: 12px; box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); overflow: hidden;';\n        \n        // 设置iframe样式\n        if (iframe instanceof HTMLIFrameElement) {\n          iframe.style.cssText = 'position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; border-radius: 12px;';\n        }\n        \n        // 用新容器替换原来的父元素\n        if (currentParent.parentElement) {\n          // 创建外层容器以彻底隔离Prose样式\n          const outerContainer = document.createElement('div');\n          outerContainer.className = 'not-prose';\n          outerContainer.style.cssText = 'all: initial; display: block; text-align: center; width: 100%; margin: 2em 0; font-family: inherit; color: inherit;';\n          \n          // 构建DOM结构: outerContainer > videoContainer > iframe\n          videoContainer.appendChild(iframe.cloneNode(true));\n          outerContainer.appendChild(videoContainer);\n          currentParent.parentElement.replaceChild(outerContainer, currentParent);\n        }\n      });\n\n    }\n  }, [article?.content]);\n\n  // --- Refactor Interaction Handlers --- \n  const handleLikeToggle = () => {\n    if (!article || !token) {\n      toast.warn('请先登录再操作');\n      return;\n    }\n    // 调用 mutation，传递简化后的变量\n    likeMutation.mutate({\n        articleId: article.id, // 传递文章 ID\n        token: token,\n        // 直接从 article 读取当前状态和 action ID\n        currentActionState: article.is_liked || false, \n        currentActionId: article.like_action_id || null \n    });\n  };\n  \n  const handleCollectToggle = () => {\n    if (!article || !token) {\n      toast.warn('请先登录再操作');\n      return;\n    }\n    // 调用 mutation，传递简化后的变量\n    collectMutation.mutate({\n        articleId: article.id, // 传递文章 ID\n        token: token,\n        // 直接从 article 读取当前状态和 action ID\n        currentActionState: article.is_collected || false, \n        currentActionId: article.collect_action_id || null \n    });\n  };\n\n  const handleShareSubmit = async (content: string, images: string[] = []) => {\n    if (!article || !token) {\n      toast.warn('请先登录再分享');\n      return;\n    }\n    \n    setIsSubmittingAction(true);\n    \n    const payload = {\n      action_type: 'share',\n      target_type: 'article',\n      target_id: article.id,\n      content: content,\n      images: images // 添加图片数据\n    };\n    \n    try {\n      const res = await axios.post(\n        `${API_BASE_URL}/api/actions`,\n        payload,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      \n        setIsShareModalOpen(false);\n      toast.success('分享成功');\n      \n    } catch (err: any) {\n      const errorMsg = err.response?.data?.error || '分享失败，请稍后重试';\n      toast.error(`分享失败: ${errorMsg}`);\n      console.error(err);\n    } finally {\n      setIsSubmittingAction(false);\n    }\n  };\n\n  const handleDeleteArticle = async () => {\n    if (!article || !token || !user || !article.author || user.id !== article.author.id) return; // Added check for article.author\n    const articleSlug = article.slug;\n    const articleTitle = article.title;\n    if (window.confirm(`您确定要删除文章 \\\"${articleTitle}\\\" 吗？此操作无法撤销。`)) {\n      setIsSubmittingAction(true); // Indicate loading state for delete\n      try {\n        console.log(`开始删除文章 \"${articleTitle}\" (slug: ${articleSlug})`);\n        console.log('使用的API端点:', `${API_BASE_URL}/api/articles/${articleSlug}`);\n        \n        const response = await axios.delete(`${API_BASE_URL}/api/articles/${articleSlug}`, {\n          headers: { \n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('删除请求响应:', response.status, response.data);\n        \n        if (response.status === 200 || response.status === 204) {\n          console.log('删除成功，将跳转到文章列表页面');\n          toast.success('文章已成功删除！');\n          navigate('/articles');\n        } else {\n          throw new Error(response.data?.error || \"删除文章失败，状态码: \" + response.status);\n        }\n      } catch (err: any) {\n        console.error(`删除文章 ${articleSlug} 失败:`, err);\n        console.error('错误详情:', err.response?.data || err.message);\n        toast.error(`删除失败: ${err.response?.data?.error || err.message}`);\n      } finally {\n          setIsSubmittingAction(false);\n      }\n    }\n  };\n\n  const handleSendChatMessage = (e?: React.FormEvent) => {\n    e?.preventDefault();\n    if (currentChatMessage.trim() && socketRef.current && slug && isConnected) {\n      const username = user?.nickname || user?.email || 'Anonymous';\n      const messageData: ChatMessage = {\n        username: username,\n        message: currentChatMessage,\n        room: slug,\n        timestamp: new Date().toISOString()\n      };\n      socketRef.current.emit('send_message', messageData);\n      setCurrentChatMessage(''); \n    } else {\n      console.warn(\"无法发送消息: 消息为空, 或 Socket 未连接/slug 缺失.\");\n      if (!isConnected) {\n        toast.error(\"聊天服务器未连接，无法发送消息。\"); // User feedback\n      }\n    }\n  };\n  \n  // 在 return 之前准备并打印调试信息\n  const isUserLoggedIn = !!user;\n  const articleAuthor = article?.author;\n  const canShowButtons = isUserLoggedIn && !!articleAuthor && user.id === articleAuthor.id;\n\n  // 2. 在 return 语句的开头检查加载状态\n  if (loading) {\n    return <ArticleDetailSkeleton />;\n  }\n\n  if (isError || !article) { // 处理错误或文章未找到的情况\n    return (\n      <div \n        className=\"flex flex-col items-center justify-center min-h-screen text-white p-4\"\n        style={{backgroundColor: 'var(--bg-base-color)', backgroundImage: 'var(--bg-gradient)'}} // 使用CSS变量保持背景一致\n      >\n        <h2 className=\"text-2xl font-semibold mb-4\">无法加载文章</h2>\n        {/* 使用上面定义的 effectiveError */}\n        <p className=\"text-gray-400 mb-8\">{effectiveError || '文章可能已被删除或链接无效。'}</p>\n        <button\n          onClick={() => navigate(-1)} // 返回上一页\n          className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-md text-white transition-colors\"\n        >\n          返回\n        </button>\n      </div>\n    );\n  }\n\n  // --- 处理视频的辅助函数 --- \n  const processContentForVideos = (htmlContent: string) => {\n    if (!htmlContent) return '';\n    \n    // 添加Markdown图片格式的正则表达式 - 更精确的版本\n    const markdownImageRegex = /!\\[(.*?)\\]\\((https?:\\/\\/[^)]+)\\)/g;\n    \n    // YouTube视频占位符的正则表达式\n    const videoPlaceholderRegex = /\\[视频占位符:\\s*(https?:\\/\\/(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/watch\\?v=)([a-zA-Z0-9_-]+))\\]/g;\n    \n    // Bilibili视频占位符的正则表达式\n    const bilibiliPlaceholderRegex = /\\[视频占位符:\\s*(https?:\\/\\/(?:www\\.)?bilibili\\.com\\/video\\/([A-Za-z0-9]+)(?:\\/)?.*?)\\]/g;\n    \n    // 注意：首先处理Markdown格式的图片，这样它们就不会被其他处理干扰\n    let processedContent = htmlContent.replace(markdownImageRegex, (match, altText, imgUrl) => {\n      // 验证URL\n      if (!imgUrl) return match;\n      \n      console.log(`[ArticlePage processContentForVideos] URL before fixImageUrl: ${imgUrl}`);\n      // 使用 fixImageUrl 来获取代理 URL\n      const processedUrl = fixImageUrl(imgUrl);\n      \n      // 构建响应式图片标签，添加data-original-src属性用于错误处理\n      return `<img src=\"${processedUrl}\" data-original-src=\"${imgUrl}\" alt=\"${altText || '图片'}\" class=\"mx-auto my-4 max-w-full rounded-lg shadow-lg markdown-image\" style=\"display: block; max-width: 100%; margin: 10px auto;\" onerror=\"if(this.getAttribute('data-original-src')){window.handleImageLoadError?.(this.getAttribute('data-original-src'),this)}\" />`;\n    });\n    \n    // 处理YouTube视频\n    processedContent = processedContent.replace(videoPlaceholderRegex, (match, originalUrl, videoId) => {\n      if (!originalUrl || !videoId) return match;\n      \n      const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n      return `\n        <figure class=\"not-prose my-8\">\n          <div class=\"aspect-w-16 aspect-h-9 relative rounded-lg overflow-hidden\">\n            <iframe src=\"${embedUrl}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen class=\"absolute inset-0 w-full h-full rounded-lg shadow-xl\"></iframe>\n          </div>\n          <figcaption class=\"text-center text-sm text-gray-500 mt-2\">YouTube 视频</figcaption>\n        </figure>\n      `;\n    });\n    \n    // 处理Bilibili视频\n    processedContent = processedContent.replace(bilibiliPlaceholderRegex, (match, originalUrl, videoId) => {\n      if (!originalUrl || !videoId) return match;\n      \n      const embedUrl = `https://player.bilibili.com/player.html?bvid=${videoId}&page=1&high_quality=1&danmaku=0`;\n      return `\n        <figure class=\"not-prose my-8\">\n          <div class=\"aspect-w-16 aspect-h-9 relative rounded-lg overflow-hidden\">\n            <iframe src=\"${embedUrl}\" frameborder=\"0\" scrolling=\"no\" allowfullscreen class=\"absolute inset-0 w-full h-full rounded-lg shadow-xl\"></iframe>\n          </div>\n          <figcaption class=\"text-center text-sm text-gray-500 mt-2\">Bilibili 视频</figcaption>\n        </figure>\n      `;\n    });\n\n    return processedContent;\n  };\n\n  // --- Success State Rendering (Main JSX) --- \n  return (\n    <motion.div \n      className=\"article-detail-container bg-transparent text-black min-h-screen\" // 修改为黑色文本\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.4, delay: 0.1 }} \n    >\n      {/* 移除左侧偏移，使用固定宽度和水平居中实现整体居中布局 */}\n      <main className=\"flex-1 transition-all duration-300 ease-in-out overflow-y-auto px-4 sm:px-6 lg:px-8 py-8 w-full\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* 文章封面 - 移到标题之前 */}\n          {article.cover_image && (\n            <div className=\"mb-8 aspect-video overflow-hidden rounded-lg shadow-2xl bg-gray-800\">\n              <img \n                src={getImageUrl(article.cover_image)} \n                alt={article.title} \n                className=\"w-full h-full object-cover\" \n                onError={(e) => (e.currentTarget.style.display = 'none')} \n              />\n            </div>\n          )}\n\n          {/* 文章头部信息 */}\n          <header className=\"mb-8\">\n            {/* 标题单独一行 - 更新字体大小 */}\n            <div className=\"mb-4\">\n              <h1 className=\"text-3xl md:text-4xl font-bold text-black break-words\"> {/* 更改为黑色标题 */}\n                {article.title}\n              </h1>\n            </div>\n            \n            {/* 作者信息、阅读量、标签、按钮在同一行，两端对齐 */}\n            <div className=\"flex flex-wrap justify-between items-center text-sm text-gray-600 gap-x-4 gap-y-2\">\n              {/* 左侧：作者信息、发布日期、阅读量 - 更新样式和结构 */}\n              <div className=\"flex items-center flex-wrap gap-x-3 gap-y-1\"> {/* Reduced gap-x to 3 */}\n                {/* 作者头像和名字 - 使用 AuthorTooltip 包裹 */}\n                <div \n                  className=\"flex items-center relative\" // 添加 relative 定位\n                  onMouseEnter={() => {\n                    if (article?.author) {\n                      setTooltipData({\n                        nickname: article.author.nickname || article.author.email?.split('@')[0] || '匿名用户',\n                        bio: article.author.bio, // 直接访问，类型已更新\n                        tags: article.author.tags, // 直接访问，类型已更新\n                        avatar: article.author.avatar // 直接访问，类型已更新\n                      });\n                      setIsTooltipVisible(true);\n                    }\n                  }}\n                  onMouseLeave={() => {\n                    setIsTooltipVisible(false);\n                  }}\n                >\n                  <img \n                    src={article.author?.avatar || `https://via.placeholder.com/40/374151/FFFFFF?text=${(article.author?.nickname || article.author?.email || 'U').charAt(0).toUpperCase()}`} /* Updated to use article.author.avatar */\n                    alt={article.author?.nickname || article.author?.email || '作者头像'} \n                    className=\"w-6 h-6 rounded-full mr-2 object-cover bg-gray-700\" /* Updated avatar size */\n                  />\n                  {/* 作者链接 */}\n                  {article.author?.id ? (\n                    <Link \n                      to={`/profile/${article.author.id}`}\n                      className=\"text-blue-600 hover:text-blue-800 hover:underline\" /* 更新链接颜色 */\n                    >\n                      {article.author.nickname || article.author.email?.split('@')[0] || '匿名用户'}\n                    </Link>\n                  ) : (\n                    <span className=\"text-blue-600\">{/* 更新颜色 */}\n                      {article.author?.nickname || article.author?.email?.split('@')[0] || '匿名用户'}\n                    </span>\n                  )}\n                </div>\n                {/* 分隔点 */}\n                <span className=\"hidden sm:inline text-gray-500\">•</span> {/* Added separator */}\n                {/* 发布日期 */}\n                <span>{formatDate(article.created_at)}</span>\n                {/* 分隔点和阅读量 */}\n                {article.view_count !== undefined && (\n                  <>\n                    <span className=\"hidden sm:inline text-gray-500\">•</span> {/* Added separator */}\n                    <span>阅读量: {article.view_count}</span>\n                  </>\n                )}\n              </div>\n\n              {/* 右侧：标签和按钮 */}\n              <div className=\"flex items-center space-x-4 flex-shrink-0\">\n                {/* 标签 */}\n                {article.tags && article.tags.length > 0 && (\n                  <div className=\"flex flex-wrap gap-2\">\n                    {article.tags.map(tag => (\n                      <span key={tag} className=\"bg-indigo-600 text-white text-xs font-medium px-2.5 py-1 rounded-full\">\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n                )}\n                \n                {/* 编辑和删除按钮 */}\n                {canShowButtons && (\n                  <div className=\"flex items-center space-x-2 flex-shrink-0\">\n                    <button\n                      onClick={() => navigate(`/edit-article/${slug}`)}\n                      className=\"px-3 py-1 text-xs font-medium text-gray-300 hover:text-white \n                                 bg-transparent border border-gray-500/70 hover:border-white/70 \n                                 rounded-full transition-all duration-200 \n                                 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      title=\"编辑文章\"\n                      disabled={loading || isSubmittingAction} \n                    >\n                      编辑\n                    </button>\n                    <button\n                      onClick={handleDeleteArticle}\n                      className=\"px-3 py-1 text-xs font-medium text-gray-300 hover:text-white \n                                 bg-transparent border border-gray-500/70 hover:border-white/70 \n                                 rounded-full transition-all duration-200 \n                                 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      title=\"删除文章\"\n                      disabled={loading || isSubmittingAction} \n                    >\n                      {isSubmittingAction && (location.pathname.includes(slug || '不可能匹配到的slug')) ? \n                          (<svg className=\"animate-spin h-3.5 w-3.5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle><path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg>) : \n                          ( \"删除\" )\n                      }\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </header>\n\n          {/* 文章内容 */}\n          <div \n            ref={contentRef} \n            className=\"prose prose-lg max-w-none article-content-actual mt-8 text-black \n                       prose-headings:text-black prose-headings:font-semibold \n                       prose-a:text-blue-600 hover:prose-a:text-blue-800 \n                       prose-strong:text-black prose-code:text-pink-600 prose-code:bg-gray-100 prose-code:p-1 prose-code:rounded\n                       prose-blockquote:border-l-blue-500 prose-blockquote:text-gray-700 prose-blockquote:not-italic\n                       prose-img:rounded-md prose-img:shadow-lg prose-img:max-w-full prose-img:mx-auto\n                       prose-table:border-gray-300 prose-th:bg-gray-100 prose-th:text-black prose-td:border-gray-300\n                       prose-ul:list-disc prose-ul:ml-5 prose-ol:list-decimal prose-ol:ml-5\n                       leading-relaxed\"\n            dangerouslySetInnerHTML={{ __html: processContentForVideos(article.content) }} \n          />\n\n          {/* 系列文章导航 */}\n          {article.series_articles && article.series_articles.length > 0 && (\n             <div className=\"mb-8 p-4 bg-gray-100/90 border border-gray-300/50 rounded-lg backdrop-blur-sm shadow-md\"> {/* 更新背景样式 */}\n               <h3 className=\"text-lg font-semibold mb-3 text-black\">\n                 系列: {article.series_name || '未命名系列'}\n               </h3>\n               {visibleSeriesStart > 0 && (\n                 <button\n                   onClick={showEarlierSeries}\n                   className=\"text-xs text-blue-600 hover:text-blue-800 mb-2 block transition-colors\"\n                 >\n                   ↑ 显示更早\n                 </button>\n               )}\n               <ul className=\"space-y-1.5\"> {/* Increased spacing */}\n                 {article.series_articles?.slice(visibleSeriesStart, visibleSeriesEnd + 1).map((seriesArticle, index) => (\n                   <li key={seriesArticle.id} className={`text-sm transition-colors duration-150 ${seriesArticle.is_current ? 'font-semibold text-black bg-gray-200/80 rounded px-2 py-0.5' : 'text-gray-700 hover:text-black'}`}>\n                     <Link\n                       to={`/article/${seriesArticle.slug}`}\n                       className=\"hover:underline flex items-center\"\n                       title={seriesArticle.title}\n                     >\n                       <span className=\"mr-2 w-4 text-right\">{seriesArticle.series_order}.</span>\n                       <span className=\"truncate\">{seriesArticle.title}</span> \n                     </Link>\n                   </li>\n                 ))}\n               </ul>\n               {visibleSeriesEnd < totalSeriesCount - 1 && (\n                 <button\n                   onClick={showLaterSeries}\n                   className=\"text-xs text-blue-600 hover:text-blue-800 mt-2 block transition-colors\"\n                 >\n                   ↓ 显示后续\n                 </button>\n               )}\n             </div>\n           )}\n\n          {/* Comment Section */}\n          <div className=\"mt-12\"> {/* Increased margin */}\n            <CommentSection\n              targetType=\"article\"\n              targetId={article.id}\n              apiBaseUrl={API_BASE_URL}\n              token={token}\n              currentUser={user}\n              isLiked={article.is_liked || false}\n              isCollected={article.is_collected || false}\n              likeCount={article.like_count || 0}\n              collectCount={article.collect_count || 0}\n              shareCount={shareCount}\n              handleLikeToggle={handleLikeToggle}\n              handleCollectToggle={handleCollectToggle}\n              handleShareClick={() => setIsShareModalOpen(true)}\n              isSubmittingAction={likeMutation.isPending || collectMutation.isPending}\n            />\n          </div>\n        </div>\n      </main>\n\n      {/* 分享模态框 */}\n      {isShareModalOpen && (\n        <Modal \n          isOpen={isShareModalOpen} \n          onClose={() => setIsShareModalOpen(false)}\n        >\n          <ShareDynamicModal\n            isOpen={isShareModalOpen}\n            onClose={() => setIsShareModalOpen(false)}\n            onSubmit={handleShareSubmit}\n            comment={shareComment}\n            setComment={setShareComment}\n            error={null}\n            isLoading={isSubmittingAction}\n            dynamicToShare={article}\n            username={user?.nickname || user?.email?.split('@')[0] || '您'}\n            altText={`分享文章: ${article?.title}`}\n          />\n        </Modal>\n      )}\n\n      {/* Author Tooltip */} \n      {tooltipData && (\n        <AuthorTooltip \n          nickname={tooltipData.nickname}\n          bio={tooltipData.bio}\n          tags={tooltipData.tags}\n          avatar={tooltipData.avatar}\n          isVisible={isTooltipVisible}\n        />\n      )}\n    </motion.div>\n  );\n};\n\nexport default ArticlePage; "],"names":["ArticleDetailSkeleton","placeholderBaseStyle","backgroundColor","borderRadius","marginBottom","animation","_jsxs","_Fragment","children","_jsx","style","width","minHeight","backgroundImage","padding","boxSizing","color","role","height","display","alignItems","marginRight","ArticlePage","_article$author","_article$author2","_article$author3","_article$author4","_article$author5","_article$author6","_article$author$email2","_article$author7","_article$author8","_article$author8$emai","_article$series_artic","_user$email","useQueryClient","slug","useParams","isSidebarOpen","useSidebar","featuredTools","setFeaturedTools","useState","token","user","useAuth","navigate","useNavigate","location","useLocation","contentRef","useRef","visibleSeriesStart","setVisibleSeriesStart","visibleSeriesEnd","setVisibleSeriesEnd","totalSeriesCount","setTotalSeriesCount","currentSeriesIndex","setCurrentSeriesIndex","isShareModalOpen","setIsShareModalOpen","shareComment","setShareComment","tooltipData","setTooltipData","isTooltipVisible","setIsTooltipVisible","shareCount","setShareCount","isSubmittingAction","setIsSubmittingAction","socketRef","chatMessages","setChatMessages","currentChatMessage","setCurrentChatMessage","chatContainerRef","isRealtimeChatOpen","setIsRealtimeChatOpen","isConnected","setIsConnected","commentBoxPosition","setCommentBoxPosition","x","y","data","article","isLoading","loading","isError","error","queryError","useArticleDetails","likeMutation","useLikeArticle","collectMutation","useCollectArticle","effectiveError","name","message","useEffect","content","imageMatches","match","forEach","index","console","log","processContentForVideos","share_count","hasLoggedError","baseUrl","current","io","path","transports","reconnectionAttempts","reconnectionDelay","timeout","socket","on","id","username","nickname","email","emit","room","msg","prev","err","warn","reason","connected","disconnect","scrollTop","scrollHeight","async","response","axios","get","API_BASE_URL","tools","loadFeaturedTools","series_articles","length","totalCount","currentIndex","findIndex","a","is_current","start","Math","max","end","min","SERIES_WINDOW_SIDE","processImages","querySelectorAll","img","currentSrc","getAttribute","dataOriginalSrc","desiredSrc","fixImageUrl","src","substring","onerror","handleImageLoadError","startsWith","setAttribute","className","maxWidth","margin","el","childNodes","Array","from","node","nodeType","Node","TEXT_NODE","textContent","text","imgRegex","lastIndex","fragment","document","createDocumentFragment","hasMatch","exec","matchStart","matchEnd","appendChild","createTextNode","createElement","originalUrlFromMarkdown","alt","_node$parentNode","parentNode","replaceChild","iframe","_iframe$parentElement","parentElement","classList","contains","currentParent","HTMLElement","cssText","videoContainer","HTMLIFrameElement","outerContainer","cloneNode","isUserLoggedIn","articleAuthor","author","canShowButtons","onClick","htmlContent","processedContent","replace","altText","imgUrl","originalUrl","videoId","motion","div","initial","opacity","animate","transition","duration","delay","cover_image","imagePath","proxyDomain","queryParams","URLSearchParams","append","encodeURIComponent","toString","getImageUrl","title","onError","e","currentTarget","onMouseEnter","_article$author$email","split","bio","tags","avatar","onMouseLeave","charAt","toUpperCase","Link","to","dateString","created_at","Date","toLocaleString","year","month","day","hour","minute","hour12","undefined","view_count","map","tag","disabled","articleSlug","articleTitle","window","confirm","delete","headers","_response$data","status","Error","toast","success","_err$response2","_err$response3","_err$response3$data","pathname","includes","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","ref","dangerouslySetInnerHTML","__html","series_name","showEarlierSeries","newStart","slice","seriesArticle","series_order","showLaterSeries","newEnd","CommentSection","targetType","targetId","apiBaseUrl","currentUser","isLiked","is_liked","isCollected","is_collected","likeCount","like_count","collectCount","collect_count","handleLikeToggle","mutate","articleId","currentActionState","currentActionId","like_action_id","handleCollectToggle","collect_action_id","handleShareClick","isPending","Modal","isOpen","onClose","ShareDynamicModal","onSubmit","images","arguments","payload","action_type","target_type","target_id","post","Authorization","_err$response","_err$response$data","errorMsg","comment","setComment","dynamicToShare","AuthorTooltip","isVisible"],"sourceRoot":""}