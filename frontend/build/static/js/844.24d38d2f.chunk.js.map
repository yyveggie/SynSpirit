{"version":3,"file":"static/js/844.24d38d2f.chunk.js","mappings":"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","sources":["components/Chatbot.tsx","pages/ArticleListPage.tsx"],"sourcesContent":["/**\n * 此文件定义了 Chatbot 组件，提供一个悬浮的聊天机器人界面。\n *\n * 主要功能:\n * - 根据 isOpen prop 控制聊天窗口的显示和隐藏。\n * - 提供聊天输入框和消息显示区域。\n * - 与后端聊天 API 进行交互，发送用户消息并接收 AI 响应。\n * - 可能包含一些预设问题或功能按钮。\n * - 作为一个独立的、可嵌入到不同页面的组件。\n *\n * 注意: 如果新增、删除或修改功能，必须在这开头的注释中同步修改，\n * 如发现功能与注释描述不同，也可以在确定后修改。\n */\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useChatLogic, Message } from '../hooks/useChatLogic'; // 导入Hook和Message类型\nimport { API_BASE_URL } from '../config'; // 仍然需要API_BASE_URL用于测试重连\nimport { useAuth } from '../context/AuthContext'; // 添加 useAuth 导入\n\ninterface ChatbotProps {\n  isOpen: boolean;\n  onClose: () => void;\n  toolName?: string;\n  toolDescription?: string;\n  /** 启用内联模式，适用于嵌入在其他组件中而非悬浮显示 */\n  inlineMode?: boolean;\n}\n\n// Quick message interface (可以考虑移到共享文件)\ninterface QuickMessage {\n  label: string;\n  value: string;\n}\n\nconst Chatbot: React.FC<ChatbotProps> = ({ isOpen, onClose, inlineMode = false }) => {\n  const { token, user } = useAuth(); // 获取用户认证信息\n  const [input, setInput] = useState('');\n  const [isSmallScreen, setIsSmallScreen] = useState(window.innerWidth < 768);\n  \n  // 使用自定义Hook管理核心聊天逻辑\n  const {\n    messages, \n    setMessages, // 可能需要用于重试逻辑\n    currentConversationId,\n    setCurrentConversationId, // 可能需要用于导航逻辑\n    isLoading,\n    apiError,\n    isTyping,\n    messagesEndRef,\n    handleSend: sendChatMessage, // 重命名以避免与内部函数冲突\n    loadConversation,\n    createNewChat, // Chatbot本身可能不需要这个\n    handleRetry: retryApiConnection // 重命名\n  } = useChatLogic(); // 初始对话ID由Hook管理\n\n  const closeRef = useRef(onClose);\n  \n  useEffect(() => {\n    closeRef.current = onClose;\n  }, [onClose]);\n  \n  // 处理重试连接（现在使用Hook中的逻辑，但需要额外fetch测试）\n  const handleRetry = () => {\n    retryApiConnection(); // 调用Hook中的清理错误状态逻辑\n    \n    // 这里保留测试连接的逻辑，或者可以将其移入Hook?\n    // 为了简单起见，暂时保留在这里，但理想情况是Hook处理所有API交互\n    setMessages(prev => [...prev.filter(msg => !msg.content.includes('无法连接到聊天服务') && !msg.content.includes('正在尝试重新连接')),\n      { role: 'assistant', content: '正在尝试重新连接...', displayContent: '正在尝试重新连接...' }]);\n      \n    fetch(`${API_BASE_URL}/api/chat`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: '测试连接', conversation_id: null })\n    })\n    .then(response => {\n      if (response.ok) {\n        setMessages(prev => [...prev.filter(msg => msg.content !== '正在尝试重新连接...'),\n          { role: 'assistant', content: '连接已恢复！请问有什么需要帮助的？🥰', displayContent: '连接已恢复！请问有什么需要帮助的？🥰' }]);\n        const reader = response.body?.getReader();\n        if (reader) reader.cancel();\n      } else {\n        throw new Error('API仍然无法连接');\n      }\n    })\n    .catch(error => {\n      console.error('重试连接失败:', error);\n      setMessages(prev => [...prev.filter(msg => msg.content !== '正在尝试重新连接...'),\n        { role: 'assistant', content: '抱歉，服务器仍然无法连接。请检查后端服务是否正常运行。', displayContent: '抱歉，服务器仍然无法连接。请检查后端服务是否正常运行。' }]);\n      // Hook内部已经处理了apiError状态\n    });\n  };\n\n  // 处理发送消息（调用Hook中的函数）\n  const handleSend = async () => {\n    if (input.trim() === '' || isLoading) return;\n    const currentInput = input;\n    setInput(''); // 清空输入框\n    const newConvId = await sendChatMessage(currentInput);\n    if (newConvId && !currentConversationId) {\n      // 如果Hook创建了新对话，更新本地状态（如果需要）\n      setCurrentConversationId(newConvId);\n    }\n    // 注意：isLoading, messages, isTyping等状态由Hook自动管理\n  };\n  \n  // 处理键盘事件\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  \n  // 快速消息（保持不变，因为这是UI特定部分）\n  const quickMessages: QuickMessage[] = [\n    { label: '推荐AI绘画工具?', value: '推荐AI绘画工具?' },\n    { label: '生成视频的AI?', value: '有什么好用的AI视频生成工具？' },\n    { label: '写代码的AI助手?', value: '有哪些适合写代码的AI助手？' }\n  ];\n\n  // --- UI Rendering ---\n  if (inlineMode) {\n    return (\n      <div className={`${isOpen ? 'block' : 'hidden'} h-full`}>\n        <motion.div \n          initial={{ opacity: 0, scale: 0.95 }}\n          animate={isOpen ? { opacity: 1, scale: 1 } : { opacity: 0, scale: 0.95 }}\n          transition={{ duration: 0.2 }}\n          className=\"h-full\"\n        >\n          <div className=\"bg-white rounded-lg shadow-xl overflow-hidden flex flex-col w-full h-full\">\n            {/* Header */} \n            <div className=\"bg-gray-100 px-4 py-3 flex justify-between items-center border-b border-gray-200 flex-shrink-0\">\n              <h3 className=\"text-gray-800 font-medium text-lg\">Lynn</h3>\n              <div className=\"flex space-x-3 items-center\">\n                {apiError && (\n                  <span className=\"text-xs text-red-500\" title={apiError}>连接错误</span>\n                )}\n                <button \n                  onClick={onClose}\n                  className=\"text-gray-500 hover:text-gray-800 transition-colors\"\n                  title=\"关闭\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Message list */}\n            <div ref={messagesEndRef} className=\"flex-grow overflow-y-auto p-4 space-y-4 bg-gray-100\">\n              {messages.map((msg, index) => (\n                <div key={msg.id ?? `temp-${msg.role}-${index}`} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>\n                  <div className={`max-w-[80%] px-4 py-2 rounded-lg text-sm shadow ${msg.role === 'user' ? 'bg-gray-200 text-black' : 'bg-white text-black'}`}>\n                    {(msg.displayContent || '').split('\\n').map((line, i) => (\n                      <span key={i} className=\"block\">{line}</span>\n                    ))}\n                    {msg.role === 'assistant' && isTyping && index === messages.length - 1 && (\n                      <span className=\"inline-block w-2 h-4 bg-gray-500 ml-0.5 animate-pulse\"></span>\n                    )}\n                    {msg.role === 'assistant' && apiError && msg.content.includes('无法连接到聊天服务') && (\n                      <button onClick={handleRetry} className=\"mt-2 text-xs text-blue-600 hover:underline\">\n                        重试连接\n                      </button>\n                    )}\n                    {msg.role === 'assistant' && apiError && !msg.content.includes('无法连接到聊天服务') && msg.content.includes('出错啦') && (\n                      <span className=\"block mt-1 text-xs text-red-500\">错误: {apiError}</span>\n                    )}\n                  </div>\n                </div>\n              ))}\n              {isLoading && !isTyping && (\n                <div className=\"flex justify-start\">\n                  <div className=\"bg-white text-black px-4 py-2 rounded-lg text-sm shadow\">\n                    <span className=\"italic text-gray-500\">Lynn 正在思考...</span>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Quick messages */} \n            {messages.length <= 1 && !isLoading && ( \n              <div className=\"flex-shrink-0 p-2 border-t border-gray-200 bg-white flex flex-wrap gap-2 justify-center\">\n                {quickMessages.map((qm) => (\n                  <button\n                    key={`qm-${qm.label}-${qm.value}`}\n                    onClick={() => { setInput(qm.value); handleSend(); }} \n                    className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-xs hover:bg-gray-200 transition-colors\"\n                  >\n                    {qm.label}\n                  </button>\n                ))}\n              </div>\n            )}\n\n            {/* Input area */} \n            <div className=\"p-4 border-t border-gray-200 bg-white flex-shrink-0\">\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"text\"\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyDown={handleKeyDown}\n                  placeholder=\"输入你的需求...\"\n                  className=\"flex-grow px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-gray-400 text-black text-sm\"\n                  disabled={isLoading}\n                />\n                <button\n                  onClick={handleSend}\n                  className=\"px-3 py-2 bg-gray-100 text-gray-600 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-1 focus:ring-gray-400 disabled:opacity-50 text-sm\"\n                  disabled={isLoading || input.trim() === ''}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"> <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 16.571V11.69l3.226-3.225a.5.5 0 01.707 0l1.293 1.293a.5.5 0 010 .707L10.07 13.69V16.57a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\" /> </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    );\n  }\n\n  // 浮动窗口模式\n  return (\n    <div className=\"fixed bottom-6 right-6 z-50\">\n      <div className={`${isOpen ? 'block' : 'hidden'}`}>\n        <motion.div \n          initial={{ opacity: 0, y: 50, scale: 0.9 }}\n          animate={isOpen ? { opacity: 1, y: 0, scale: 1 } : { opacity: 0, y: 50, scale: 0.9 }}\n          transition={{ duration: 0.2 }}\n        >\n          <div className=\"bg-white rounded-lg shadow-xl overflow-hidden flex flex-col w-96 max-h-[80vh]\"\n            style={{ height: '600px' }}\n          >\n            {/* Header */} \n            <div className=\"bg-gray-100 px-4 py-3 flex justify-between items-center border-b border-gray-200 flex-shrink-0\">\n              <h3 className=\"text-gray-800 font-medium text-lg\">Lynn</h3>\n              <div className=\"flex space-x-3 items-center\">\n                {apiError && (\n                  <span className=\"text-xs text-red-500\" title={apiError}>连接错误</span>\n                )}\n                <button \n                  onClick={onClose}\n                  className=\"text-gray-500 hover:text-gray-800 transition-colors\"\n                  title=\"关闭\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Message list */}\n            <div ref={messagesEndRef} className=\"flex-grow overflow-y-auto p-4 space-y-4 bg-gray-100\">\n              {messages.map((msg, index) => (\n                <div key={msg.id ?? `temp-${msg.role}-${index}`} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>\n                  <div className={`max-w-[80%] px-4 py-2 rounded-lg text-sm shadow ${msg.role === 'user' ? 'bg-gray-200 text-black' : 'bg-white text-black'}`}>\n                    {(msg.displayContent || '').split('\\n').map((line, i) => (\n                      <span key={i} className=\"block\">{line}</span>\n                    ))}\n                    {msg.role === 'assistant' && isTyping && index === messages.length - 1 && (\n                      <span className=\"inline-block w-2 h-4 bg-gray-500 ml-0.5 animate-pulse\"></span>\n                    )}\n                    {msg.role === 'assistant' && apiError && msg.content.includes('无法连接到聊天服务') && (\n                      <button onClick={handleRetry} className=\"mt-2 text-xs text-blue-600 hover:underline\">\n                        重试连接\n                      </button>\n                    )}\n                    {msg.role === 'assistant' && apiError && !msg.content.includes('无法连接到聊天服务') && msg.content.includes('出错啦') && (\n                      <span className=\"block mt-1 text-xs text-red-500\">错误: {apiError}</span>\n                    )}\n                  </div>\n                </div>\n              ))}\n              {isLoading && !isTyping && (\n                <div className=\"flex justify-start\">\n                  <div className=\"bg-white text-black px-4 py-2 rounded-lg text-sm shadow\">\n                    <span className=\"italic text-gray-500\">Lynn 正在思考...</span>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Quick messages */} \n            {messages.length <= 1 && !isLoading && ( \n              <div className=\"flex-shrink-0 p-2 border-t border-gray-200 bg-white flex flex-wrap gap-2 justify-center\">\n                {quickMessages.map((qm) => (\n                  <button\n                    key={`qm-${qm.label}-${qm.value}`}\n                    onClick={() => { setInput(qm.value); handleSend(); }} \n                    className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-xs hover:bg-gray-200 transition-colors\"\n                  >\n                    {qm.label}\n                  </button>\n                ))}\n              </div>\n            )}\n\n            {/* Input area */} \n            <div className=\"p-4 border-t border-gray-200 bg-white flex-shrink-0\">\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"text\"\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyDown={handleKeyDown}\n                  placeholder=\"输入你的需求...\"\n                  className=\"flex-grow px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-gray-400 text-black text-sm\"\n                  disabled={isLoading}\n                />\n                <button\n                  onClick={handleSend}\n                  className=\"px-3 py-2 bg-gray-100 text-gray-600 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-1 focus:ring-gray-400 disabled:opacity-50 text-sm\"\n                  disabled={isLoading || input.trim() === ''}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"> <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 16.571V11.69l3.226-3.225a.5.5 0 01.707 0l1.293 1.293a.5.5 0 010 .707L10.07 13.69V16.57a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\" /> </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n","/**\n * \n * 注意: 导航栏组件(Navbar和SideNavbar)已移至全局布局，不需要在页面组件中引入\n * ArticleListPage.tsx\n * \n * 此文件定义了展示文章列表页面的 React 组件。\n *\n * 主要功能:\n * - 使用 TanStack Query 的自定义 Hook (`useArticles`) 获取并缓存文章列表。\n * - 使用 TanStack Query 的自定义 Hook (`useArticleTags`) 获取并缓存文章标签列表。\n * - 支持按分类、标签进行筛选。\n * - 包含分页功能，并使用 TanStack Query 的 `placeholderData` 优化分页/筛选时的加载体验。\n * - 提供到单个文章详情页的链接。\n *\n * 注意: 如果新增、删除或修改功能，必须在这开头的注释中同步修改，\n * 如发现功能与注释描述不同，也可以在确定后修改。\n */\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n// 已移除: import Navbar from \"../components/Navbar\";\nimport SideNavbar from '../components/SideNavbar';\nimport Chatbot from '../components/Chatbot';\nimport { API_BASE_URL } from '../config';\nimport axios from 'axios';\nimport { useSidebar } from '../contexts/SidebarContext';\n// --- TanStack Query Import ---\nimport { useQuery } from '@tanstack/react-query';\n// --- End TanStack Query Import ---\nimport { fixImageUrl } from '../utils/imageProxy';\n\n// --- Define Custom Hooks ---\n\nconst ARTICLES_PER_PAGE = 15; // Keep constant accessible\n\ninterface Author {\n  id: number;\n  email: string;\n  nickname?: string | null;\n}\n\ninterface Article {\n  id: number;\n  title: string;\n  author: Author | null;\n  category: string | null;\n  summary: string | null;\n  content: string;\n  cover_image: string | null;\n  created_at: string;\n  tags: string[] | null;\n  slug: string;\n  view_count: number;\n  series_name?: string | null;\n  series_articles?: any[] | null;\n  like_count?: number;\n  collect_count?: number;\n  share_count?: number;\n  comment_count?: number;\n}\n\n// --- Hook for fetching articles ---\nconst useArticles = (page: number, category: string | 'all', tag: string | 'all') => {\n  const queryKey = ['articles', { page, category, tag }];\n\n  const fetchArticlesAPI = async () => {\n    const offset = (page - 1) * ARTICLES_PER_PAGE;\n    const fields = 'id,title,summary,content,category,tags,author,cover_image,slug,view_count,created_at,series_name,like_count,collect_count,share_count,comment_count';\n    let articlesUrl = `${API_BASE_URL}/api/articles/?limit=${ARTICLES_PER_PAGE}&offset=${offset}&fields=${fields}`;\n\n    if (tag !== 'all') {\n      articlesUrl += `&tag=${encodeURIComponent(tag)}`;\n    } else if (category && category !== 'all') {\n      articlesUrl += `&category=${encodeURIComponent(category)}`;\n    }\n    articlesUrl += `&sort_by=created_at&sort_order=desc`;\n\n    const response = await axios.get<{ articles: Article[], total: number }>(articlesUrl);\n    return response.data; // Return { articles: [], total: 0 }\n  };\n\n  return useQuery<{ articles: Article[], total: number }, Error>({\n    queryKey: queryKey,\n    queryFn: fetchArticlesAPI,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    gcTime: 10 * 60 * 1000, // 10 minutes\n    placeholderData: (previousData) => previousData, // Correct option for TanStack Query v5+\n  });\n};\n\n// --- Hook for fetching article tags ---\nconst useArticleTags = () => {\n    const queryKey = ['articleTags'];\n\n    const fetchTagsAPI = async () => {\n        const response = await axios.get<{ tags: string[] }>(`${API_BASE_URL}/api/articles/tags`);\n        return response.data.tags || []; // Return tags array or empty array\n    };\n\n    return useQuery<string[], Error>({\n        queryKey: queryKey,\n        queryFn: fetchTagsAPI,\n        staleTime: 30 * 60 * 1000, // 30 minutes, tags might not change often\n        gcTime: 60 * 60 * 1000, // 1 hour\n    });\n};\n// --- End Custom Hooks ---\n\ninterface Tool {\n  id: number;\n  name: string;\n  description: string;\n  category_id: number;\n}\n\n// Define the static categories for filtering\nconst displayCategories = [\"全部\", \"AI发展\", \"投资\", \"未来\", \"心理\", \"理性\", \"时间\"];\n\nconst ArticleListPage: React.FC = () => {\n  // Removed useState for articles, loading, error, allTags, totalPages\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [selectedTag, setSelectedTag] = useState<string | 'all'>('all');\n  const { isSidebarOpen } = useSidebar();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  // Removed totalPages state\n  \n  const location = useLocation(); // Get location object\n\n  // Effect to read category from URL query parameter on initial load\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const categoryFromUrl = params.get('category');\n    if (categoryFromUrl && displayCategories.includes(categoryFromUrl)) {\n      setSelectedCategory(categoryFromUrl);\n      setSelectedTag('all'); // Reset tag if category is loaded from URL\n      setCurrentPage(1); // Reset page when category changes from URL\n    } else {\n      setSelectedCategory('all'); // Default to 'all' if no valid category in URL\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps \n  }, [location.search]); // Rerun if the search query changes\n\n  // Fetch tags using the custom hook\n  const { data: allTags = [], isLoading: isLoadingTags, isError: isTagsError } = useArticleTags();\n\n  // Fetch articles using the custom hook\n  const { \n    data: articlesData, // articlesData is of type { articles: Article[], total: number } | undefined\n    isLoading: loadingArticles, \n    isError: isArticlesError,\n    error: articlesError,\n    isFetching: isFetchingArticles, // Use isFetching to show loading indicator during background updates/refetches\n   } = useArticles(currentPage, selectedCategory, selectedTag);\n\n  // Extract articles and calculate totalPages from articlesData\n  // Use optional chaining and default values for safety\n  const articles: Article[] = articlesData?.articles ?? []; \n  const totalArticles: number = articlesData?.total ?? 0;\n  const totalPages = Math.ceil(totalArticles / ARTICLES_PER_PAGE);\n\n  // Effect to reset page when category or tag changes (handled by user interaction)\n  // This useEffect replaces the previous one that was triggered by state changes\n  // Note: Resetting via URL change is handled in the useEffect above\n  // This handles direct button clicks\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedCategory, selectedTag]);\n\n\n  const handleCategoryChange = (category: string) => {\n    setSelectedCategory(category);\n    setSelectedTag('all');\n    // No need to manually set currentPage to 1 here, the effect above handles it.\n  };\n\n  const handleTagClick = (tag: string | 'all') => {\n      setSelectedTag(tag);\n      setSelectedCategory('all'); // Clicking a tag resets the category filter\n      // No need to manually set currentPage to 1 here, the effect above handles it.\n  };\n\n  const handlePageChange = (newPage: number) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('zh-CN', { \n      year: 'numeric', \n      month: 'long', \n      day: 'numeric' \n    });\n  };\n\n  const getImageUrl = (imagePath: string | null): string | undefined => {\n    if (!imagePath) return undefined;\n\n    // 使用我们的图片代理处理所有图片URL\n    return fixImageUrl(imagePath);\n  };\n\n  // Determine overall loading state (initial load vs background fetching)\n  const isLoading = loadingArticles && !articlesData; // Show main loading spinner only on initial load\n  const isFetching = isFetchingArticles; // Use for subtle loading indicators if needed\n\n  // Determine error state\n  const error = isArticlesError ? (articlesError?.message || '加载文章时出错') : null;\n\n  return (\n    <div className=\"min-h-screen flex flex-col text-white\">\n      {/* 移除Navbar组件 */}\n      \n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* 移除SideNavbar组件 */}\n        \n        <main className={`flex-grow overflow-y-auto transition-all duration-300 ease-in-out ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'}`}>\n          <div className=\"container mx-auto px-4 pb-4 pt-4\">\n            <button \n              onClick={() => setIsChatOpen(true)}\n              className=\"fixed right-6 bottom-6 bg-white/10 backdrop-blur-md text-white rounded-full p-3 shadow-lg z-50 transition-colors hover:bg-white/20\"\n              title=\"AI 聊天\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\" />\n              </svg>\n            </button>\n\n            <div className=\"mb-6\">\n              <div className=\"flex flex-wrap gap-2\">\n                {displayCategories.map((category) => (\n                  <button\n                    key={category}\n                    className={`px-4 py-1.5 rounded-md text-sm font-medium transition-colors ${\n                      selectedCategory === (category === '全部' ? 'all' : category) && selectedTag === 'all'\n                        ? 'bg-indigo-600 text-white shadow' \n                        : 'bg-white/10 hover:bg-white/20 text-gray-200'\n                    }`}\n                    onClick={() => handleCategoryChange(category === '全部' ? 'all' : category)}\n                  >\n                    {category}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Conditionally render tags section based on loading/error state */}\n            {!isLoadingTags && !isTagsError && allTags.length > 0 && (\n                <div className=\"mb-8 flex flex-wrap gap-2\"> \n                    <button\n                        onClick={() => handleTagClick('all')}\n                        className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${ \n                            selectedTag === 'all'\n                            ? 'bg-teal-600 text-white shadow' \n                            : 'bg-gray-700/60 hover:bg-gray-600/80 text-gray-300'\n                        }`}\n                    >\n                        # 所有标签\n                    </button>\n                    {allTags.map((tag) => (\n                        <button\n                            key={tag} \n                            onClick={() => handleTagClick(tag)}\n                            className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${ \n                                selectedTag === tag \n                                ? 'bg-teal-600 text-white shadow' \n                                : 'bg-gray-700/60 hover:bg-gray-600/80 text-gray-300'\n                            }`}\n                        >\n                            # {tag}\n                        </button>\n                    ))}\n                </div>\n            )}\n            {isLoadingTags && <p className=\"text-sm text-gray-400 mb-4\">正在加载标签...</p>}\n            {isTagsError && <p className=\"text-sm text-red-400 mb-4\">加载标签失败。</p>}\n            \n            {/* Use isLoading for the main loading spinner */}\n            {isLoading ? (\n              <div className=\"text-center py-10\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-white mx-auto\"></div>\n                <span className=\"mt-3 text-gray-200 block\">正在加载文章...</span>\n              </div>\n            ) : error ? (\n              <div className=\"text-center py-10 bg-red-900/30 border border-red-700 text-red-300 p-4 rounded\">\n                <strong className=\"font-bold\">加载失败!</strong>\n                <span className=\"block sm:inline\"> {error}</span>\n              </div>\n            ) : articles.length > 0 ? (\n              <>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n                  {articles.map((article: Article) => (\n                    <Link \n                      to={`/article/${article.slug}`} \n                      key={article.id} \n                      className=\"block bg-gray-850/70 hover:bg-gray-800/90 backdrop-blur-lg border border-gray-700/50 rounded-lg overflow-hidden shadow-lg transition-all duration-200 group\"\n                    >\n                      {article.cover_image && (\n                        <div className=\"h-40 w-full overflow-hidden\">\n                          <img \n                            src={getImageUrl(article.cover_image) ?? '/placeholder.jpg'} // Added fallback\n                            alt={article.title} \n                            className=\"w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105\"\n                            onError={(e) => { (e.target as HTMLImageElement).src = '/placeholder.jpg'; }}\n                          />\n                        </div>\n                      )}\n                      <div className=\"p-3 flex flex-col flex-grow\">\n                          <h3 \n                          className=\"text-base font-semibold text-gray-100 mb-1.5 line-clamp-2 group-hover:text-white\"\n                            title={article.title}\n                          >\n                            {article.title}\n                          </h3>\n                        <p className=\"text-xs text-gray-300 mb-3 line-clamp-3 flex-grow\">\n                            {article.summary || '无摘要'}\n                          </p>\n                        <div className=\"flex justify-between items-center text-xs text-gray-400 mt-auto pt-1.5 border-t border-gray-700/50\">\n                            <span>{article.author?.nickname || article.author?.email?.split('@')[0] || '匿名'}</span>\n                            <div>{formatDate(article.created_at)}</div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n\n                {/* Pagination controls */}\n                {totalPages > 1 && (\n                  <div className=\"mt-8 flex justify-center items-center space-x-4\">\n                    <button\n                      onClick={() => handlePageChange(currentPage - 1)}\n                      disabled={currentPage === 1 || isFetching} // Disable during fetching\n                      className=\"px-3 py-1.5 bg-white/10 hover:bg-white/20 text-white rounded-md disabled:opacity-50 disabled:cursor-not-allowed transition-colors text-sm\"\n                    >\n                      上一页\n                    </button>\n                    <span className=\"text-gray-300 text-sm\">\n                      第 {currentPage} / {totalPages} 页 {isFetching ? '(加载中...)' : ''}\n                    </span>\n                    <button\n                      onClick={() => handlePageChange(currentPage + 1)}\n                      disabled={currentPage === totalPages || isFetching} // Disable during fetching\n                      className=\"px-3 py-1.5 bg-white/10 hover:bg-white/20 text-white rounded-md disabled:opacity-50 disabled:cursor-not-allowed transition-colors text-sm\"\n                    >\n                      下一页\n                    </button>\n                  </div>\n                )}\n              </>\n            ) : (\n              // Show this message when not loading, no error, but no articles found for the filter\n              <div className=\"text-center py-10 text-gray-400\">\n                <p className=\"text-lg\">该分类/标签下暂无文章</p>\n              </div>\n            )}\n          </div>\n        </main>\n        <Chatbot isOpen={isChatOpen} onClose={() => setIsChatOpen(false)} />\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleListPage; "],"names":["_ref","isOpen","onClose","inlineMode","token","user","useAuth","input","setInput","useState","isSmallScreen","setIsSmallScreen","window","innerWidth","messages","setMessages","currentConversationId","setCurrentConversationId","isLoading","apiError","isTyping","messagesEndRef","handleSend","sendChatMessage","loadConversation","createNewChat","handleRetry","retryApiConnection","useChatLogic","closeRef","useRef","useEffect","current","prev","filter","msg","content","includes","role","displayContent","fetch","API_BASE_URL","method","headers","body","JSON","stringify","message","conversation_id","then","response","ok","Error","_response$body","reader","getReader","cancel","catch","error","console","async","trim","currentInput","newConvId","handleKeyDown","e","key","shiftKey","preventDefault","quickMessages","label","value","_jsx","className","children","motion","div","initial","opacity","scale","animate","transition","duration","_jsxs","title","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","ref","map","index","_msg$id","split","line","i","length","id","qm","type","onChange","target","onKeyDown","placeholder","disabled","y","style","height","_msg$id2","displayCategories","ArticleListPage","_articlesData$article","_articlesData$total","selectedCategory","setSelectedCategory","selectedTag","setSelectedTag","isSidebarOpen","useSidebar","isChatOpen","setIsChatOpen","currentPage","setCurrentPage","location","useLocation","categoryFromUrl","URLSearchParams","search","get","data","allTags","isLoadingTags","isError","isTagsError","useQuery","queryKey","queryFn","axios","tags","staleTime","gcTime","articlesData","loadingArticles","isArticlesError","articlesError","isFetching","isFetchingArticles","useArticles","page","category","tag","offset","articlesUrl","encodeURIComponent","placeholderData","previousData","articles","totalArticles","total","totalPages","Math","ceil","handleTagClick","handlePageChange","newPage","scrollTo","getImageUrl","imagePath","fixImageUrl","stroke","strokeWidth","strokeLinecap","strokeLinejoin","handleCategoryChange","_Fragment","article","_getImageUrl","_article$author","_article$author2","_article$author2$emai","dateString","Link","to","slug","cover_image","src","alt","onError","summary","author","nickname","email","created_at","Date","toLocaleDateString","year","month","day","Chatbot"],"sourceRoot":""}