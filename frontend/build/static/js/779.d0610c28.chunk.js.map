{"version":3,"file":"static/js/779.d0610c28.chunk.js","mappings":"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","sources":["pages/EditPostPageToast.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport { useAuth } from '../context/AuthContext';\nimport ToastEditorWrapper from '../components/ToastEditorWrapper';\n// 已移除: import Navbar from \"../components/Navbar\";\nimport SideNavbar from '../components/SideNavbar';\nimport { useSidebar } from '../contexts/SidebarContext';\nimport { useQueryClient } from '@tanstack/react-query';\n\ninterface PostData {\n    id: number;\n    title: string;\n    content: string;\n    community_slug?: string; // Assuming posts might be associated with communities\n    slug: string; // 确保包含slug属性\n    // Add other fields as necessary, e.g., author, created_at\n}\n\nconst EditPostPageToast: React.FC = () => {\n    const { post_slug } = useParams<{ post_slug: string }>();\n    const navigate = useNavigate();\n    const { token } = useAuth();\n    const queryClient = useQueryClient();\n\n    const [post, setPost] = useState<PostData | null>(null);\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n    const [isSaving, setIsSaving] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [success, setSuccess] = useState<string | null>(null);\n    const { isSidebarOpen } = useSidebar();\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        if (!token) {\n            navigate('/login', { state: { from: `/edit-post-toast/${post_slug}` } });\n            return;\n        }\n\n        const fetchPost = async () => {\n            setIsLoading(true);\n            setError(null);\n            try {\n                // 使用slug查询帖子，而不是通过ID\n                const response = await axios.get<PostData>(`${API_BASE_URL}/api/posts/slug/${post_slug}`, {\n                    headers: { 'Authorization': `Bearer ${token}` },\n                });\n                \n                // 后端API直接返回帖子数据，没有嵌套在\"post\"字段中\n                const fetchedPost = response.data;\n                setPost(fetchedPost);\n                setTitle(fetchedPost.title);\n                setContent(fetchedPost.content);\n            } catch (err: any) {\n                console.error(\"Error fetching post for editing:\", err.response?.data || err.message);\n                setError(err.response?.data?.error || '无法加载帖子数据进行编辑');\n                // Optional: Navigate away if post not found or unauthorized\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchPost();\n    }, [post_slug, token, navigate]);\n\n    const handleEditorChange = (value: string) => {\n        setContent(value);\n    };\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!post || !token) return;\n\n        setIsSaving(true);\n        setError(null);\n        setSuccess(null);\n\n        try {\n            // 使用JSON格式而不是FormData\n            const postData: {\n                title: string;\n                content: string;\n            } = {\n                title,\n                content,\n            };\n\n            // 发送JSON格式的数据\n            const response = await axios.put(`${API_BASE_URL}/api/posts/${post.id}`, postData, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n            });\n            setSuccess('帖子更新成功!');\n            // Optionally update local state if needed, or rely on navigation\n            setPost(response.data); // 更新本地状态\n            \n            // 使相关缓存失效，确保获取最新数据\n            console.log(`[EditPostPageToast] 使帖子缓存失效: ${post.slug}`);\n            queryClient.invalidateQueries({ queryKey: ['postDetails', post.slug] });\n            \n            // Navigate back to the post page after a short delay\n            setTimeout(() => {\n                if (post.community_slug) {\n                    navigate(`/community/${post.community_slug}/post/${post.slug}`);\n                } else {\n                    // Fallback or navigate to a general posts list if no community\n                    navigate(`/posts/${post.slug}`);\n                }\n            }, 1500);\n\n        } catch (err: any) {\n            console.error('Error updating post:', err.response?.data || err.message);\n            setError(err.response?.data?.error || '更新帖子失败');\n        } finally {\n            setIsSaving(false);\n        }\n    };\n\n    if (isLoading) {\n        return (\n            <div className=\"flex flex-col min-h-screen bg-transparent text-gray-100\">\n                {/* 移除Navbar组件 */}\n                <div className=\"flex flex-1 pt-16 overflow-hidden\">\n                    {/* 移除SideNavbar组件 */}\n                    <main className={`flex-1 p-6 transition-all duration-300 ease-in-out overflow-y-auto ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'}`}>\n                        <div className=\"flex justify-center items-center h-full\">\n                            <p className=\"text-xl\">正在加载帖子...</p>\n                        </div>\n                    </main>\n                </div>\n            </div>\n        );\n    }\n\n    if (error && !post) {\n        return (\n            <div className=\"flex flex-col min-h-screen bg-transparent text-gray-100\">\n                {/* 移除Navbar组件 */}\n                <div className=\"flex flex-1 pt-16 overflow-hidden\">\n                    {/* 移除SideNavbar组件 */}\n                    <main className={`flex-1 p-6 transition-all duration-300 ease-in-out overflow-y-auto ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'}`}>\n                        <div className=\"bg-red-700 text-white p-4 rounded shadow-lg text-center\">\n                            <p className=\"text-lg font-semibold\">出错了</p>\n                            <p>{error}</p>\n                            <button \n                                onClick={() => navigate(-1)} \n                                className=\"mt-3 bg-white text-red-700 px-4 py-2 rounded\"\n                            >\n                                返回\n                            </button>\n                        </div>\n                    </main>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"flex flex-col min-h-screen bg-transparent text-gray-100\">\n            {/* 移除Navbar组件 */}\n            <div className=\"flex flex-1 pt-16 overflow-hidden\">\n                {/* 移除SideNavbar组件 */}\n                <main className={`flex-1 p-6 transition-all duration-300 ease-in-out overflow-y-auto ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'}`}>\n                    <h1 className=\"text-3xl font-bold mb-6\">编辑帖子</h1>\n                    \n                    {error && <div className=\"bg-red-700 text-white p-3 rounded mb-4\">{error}</div>}\n                    {success && <div className=\"bg-green-700 text-white p-3 rounded mb-4\">{success}</div>}\n                    \n                    <form onSubmit={handleSubmit} className=\"bg-gray-850/70 p-6 rounded-lg shadow-xl border border-gray-700\">\n                        <div className=\"mb-4\">\n                            <label htmlFor=\"title\" className=\"block text-gray-200 mb-2\">帖子标题</label>\n                            <input\n                                type=\"text\"\n                                id=\"title\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                required\n                                className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 text-gray-100 focus:ring-indigo-500 focus:border-indigo-500\"\n                                placeholder=\"帖子标题\"\n                            />\n                        </div>\n\n                        <div className=\"mb-6\">\n                            <label className=\"block text-gray-200 mb-2\">帖子内容</label>\n                                <ToastEditorWrapper\n                                    initialData={content}\n                                    onChange={handleEditorChange}\n                                    token={token}\n                                placeholder=\"请输入帖子内容...\"\n                                />\n                        </div>\n\n                            <button\n                                type=\"submit\"\n                                disabled={isSaving}\n                            className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n                            >\n                            {isSaving ? '正在保存...' : '更新帖子'}\n                            </button>\n                    </form>\n                </main>\n            </div>\n        </div>\n    );\n};\n\nexport default EditPostPageToast; "],"names":["EditPostPageToast","post_slug","useParams","navigate","useNavigate","token","useAuth","queryClient","useQueryClient","post","setPost","useState","title","setTitle","content","setContent","isLoading","setIsLoading","isSaving","setIsSaving","error","setError","success","setSuccess","isSidebarOpen","useSidebar","useRef","useEffect","state","from","async","fetchedPost","axios","get","API_BASE_URL","headers","data","err","_err$response","_err$response2","_err$response2$data","console","response","message","fetchPost","_jsx","className","children","_jsxs","onClick","onSubmit","event","preventDefault","postData","put","id","log","slug","invalidateQueries","queryKey","setTimeout","community_slug","_err$response3","_err$response4","_err$response4$data","htmlFor","type","value","onChange","e","target","required","placeholder","ToastEditorWrapper","initialData","disabled"],"sourceRoot":""}