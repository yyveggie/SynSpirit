{"version":3,"file":"static/js/471.432192be.chunk.js","mappings":"6MAyBA,MA8BA,EAhB0CA,IAA2C,IAA1C,GAAEC,EAAE,MAAEC,EAAK,QAAEC,EAAO,KAAEC,EAAI,OAAEC,GAAQL,EAC7E,MAAMM,EAAW,YAAYF,IAE7B,OACEG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,GAAIH,EACJI,UAAU,0HAAyHC,SAAA,EAEnIC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kEAAiEC,SAAET,IAChFG,IAAUE,EAAAA,EAAAA,MAAA,KAAGG,UAAU,6BAA4BC,SAAA,CAAC,iBAAKN,MAC1DO,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qCAAoCC,SAAER,MAE9C,E,cCrBX,MAAMU,EAAwB,CAC5B,CAAEZ,GAAI,IAAKC,MAAO,uFAAkBG,OAAQ,uBAASS,QAAS,gYAAsEV,KAAM,yBAC1I,CAAEH,GAAI,IAAKC,MAAO,+GAAqCG,OAAQ,iCAASS,QAAS,6RAA6DV,KAAM,uBACpJ,CAAEH,GAAI,IAAKC,MAAO,+GAAsBG,OAAQ,iCAASS,QAAS,uWAA2EV,KAAM,4BACnJ,CAAEH,GAAI,IAAKC,MAAO,uFAAkBG,OAAQ,iCAASS,QAAS,6RAAmDV,KAAM,yBACvH,CAAEH,GAAI,IAAKC,MAAO,yGAAqBG,OAAQ,2BAAQS,QAAS,qTAAyDV,KAAM,iCAC/H,CAAEH,GAAI,IAAKC,MAAO,yGAAqBG,OAAQ,iCAASS,QAAS,qQAA+CV,KAAM,yBACtH,CAAEH,GAAI,IAAKC,MAAO,sGAAuBG,OAAQ,2BAAQS,QAAS,oQAAwDV,KAAM,yBAiGlI,EAtFgCW,KAC9B,MAAM,cAAEC,IAAkBC,EAAAA,EAAAA,MACnBC,EAAOC,IAAYC,EAAAA,EAAAA,UAAqB,KACxCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAwB,OAC3CK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAiB,KAC1CO,EAAAA,EAAAA,MAgCjB,OA7BAC,EAAAA,EAAAA,YAAU,KACRN,GAAW,GAEXO,YAAW,KACTV,EAASN,GACTS,GAAW,EAAM,GAChB,IAAI,GACN,KAGHM,EAAAA,EAAAA,YAAU,KACkBE,WACxB,IAEEJ,EAAiB,CACf,CAAEzB,GAAI,EAAG8B,KAAM,cAAe3B,KAAM,eACpC,CAAEH,GAAI,EAAG8B,KAAM,gBAAiB3B,KAAM,iBACtC,CAAEH,GAAI,EAAG8B,KAAM,oBAAqB3B,KAAM,qBAC1C,CAAEH,GAAI,EAAG8B,KAAM,qBAAsB3B,KAAM,sBAC3C,CAAEH,GAAI,EAAG8B,KAAM,gBAAiB3B,KAAM,iBACtC,CAAEH,GAAI,EAAG8B,KAAM,eAAgB3B,KAAM,iBAEzC,CAAE,MAAOmB,GACPS,QAAQT,MAAM,oDAAaA,EAC7B,GAEFU,EAAmB,GAClB,KAGDrB,EAAAA,EAAAA,KAAA,OAAKF,UAAW,wCAAwCC,UAEtDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oCAAmCC,UAEhDC,EAAAA,EAAAA,KAAA,QACEF,UAAW,kEAAkEM,EAAgB,WAAa,4BAA4BL,UAEtIJ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBC,SAAA,CAC7BU,IACCT,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yCAAwCC,UACrDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAIlBa,IACCX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gEAA+DC,SAC3EY,KAIHF,IAAYE,GAA0B,IAAjBL,EAAMgB,SAC3BtB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wDAILU,IAAYE,GAASL,EAAMgB,OAAS,IACpCtB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SACpCO,EAAMiB,KAAKC,IACVxB,EAAAA,EAAAA,KAACyB,EAAQ,CAEPpC,GAAImC,EAAKnC,GACTC,MAAOkC,EAAKlC,MACZC,QAASiC,EAAKtB,QACdV,KAAMgC,EAAKhC,KACXC,OAAQ+B,EAAK/B,QALR+B,EAAKnC,gBAatB,C","sources":["components/PostCard.tsx","pages/PostsListPage.tsx"],"sourcesContent":["/**\n * 此文件定义了 PostCard 组件，用于以卡片形式展示单个社区帖子摘要。\n *\n * 主要功能:\n * - 接收帖子数据 (标题、摘要、作者、链接等) 作为 props。\n * - 以简洁的卡片布局展示帖子的关键信息。\n * - 提供点击卡片跳转到帖子详情页的功能。\n * - 可能包含点赞数、评论数等简单统计信息。\n *\n * 注意: 如果新增、删除或修改功能，必须在这开头的注释中同步修改，\n * 如发现功能与注释描述不同，也可以在确定后修改。\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface PostCardProps {\n  id: number;\n  title: string;\n  excerpt: string;\n  slug: string; // For linking to the detail page\n  author?: string; // <-- Add optional author prop\n  // Add other fields if needed later, e.g., author, date\n}\n\n// Helper function to generate excerpt (can be moved to a utils file later)\nconst generateExcerpt = (htmlContent: string | undefined | null, maxLength: number = 100): string => {\n  if (!htmlContent) return '';\n  let text = htmlContent\n    .replace(/<img[^>]*>/gi, '[图片]')\n    .replace(/<video[^>]*>.*?<\\/video>/gi, '[视频]')\n    .replace(/<figure[^>]*>.*?<\\/figure>/gi, '[媒体内容]');\n  text = text.replace(/<[^>]+>/g, '');\n  text = text.replace(/\\s+/g, ' ').trim();\n  if (text.length > maxLength) {\n    return text.substring(0, maxLength) + '...';\n  }\n  return text;\n};\n\nconst PostCard: React.FC<PostCardProps> = ({ id, title, excerpt, slug, author }) => {\n  const postLink = `/article/${slug}`; // Assuming posts use the same detail page structure for now\n\n  return (\n    <Link \n      to={postLink}\n      className=\"block p-4 rounded-lg border border-indigo-600/30 shadow-md hover:border-indigo-400/40 transition-all duration-200 group\"\n    >\n      <h3 className=\"text-lg font-semibold text-white mb-1 group-hover:text-blue-300\">{title}</h3>\n      {author && <p className=\"text-xs text-gray-400 mb-2\">作者: {author}</p>}\n      <p className=\"text-sm text-gray-300 line-clamp-3\">{excerpt}</p>\n      {/* Add other elements like author, date, tags later if needed */}\n    </Link>\n  );\n};\n\nexport default PostCard; ","/**\n * \n * 注意: 导航栏组件(Navbar和SideNavbar)已移至全局布局，不需要在页面组件中引入\n * 此文件定义了展示社区帖子列表页面的 React 组件。\n *\n * 主要功能:\n * - 获取并显示所有社区帖子或特定主题下的帖子列表。\n * - 可能支持分页或加载更多。\n * - 提供到单个帖子详情页的链接。\n *\n * 注意: 如果新增、删除或修改功能，必须在这开头的注释中同步修改，\n * 如发现功能与注释描述不同，也可以在确定后修改。\n */\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport PostCard from '../components/PostCard'; // Import the new PostCard\nimport { API_BASE_URL } from '../config';\nimport { useSidebar } from '../contexts/SidebarContext'; // 引入 useSidebar\n// import axios from 'axios'; // No longer needed for mock data\n\n// 修改: 使用模拟数据类型 (可以单独定义或复用)\ninterface MockPost {\n  id: number;\n  title: string;\n  author: string;\n  content: string;\n  slug: string;\n}\n\n// 定义模拟数据 (可以从 ArticleFeed 复制和扩展)\nconst mockPosts: MockPost[] = [\n  { id: 101, title: \"关于大型语言模型训练的新思考\", author: \"AI探索者\", content: \"最近在研究中发现，调整学习率的策略对最终模型的性能影响巨大，特别是对于长序列任务，采用逐步降低的学习率似乎比固定学习率效果更好...\", slug: \"llm-training-thoughts\" },\n  { id: 102, title: \"我用 Stable Diffusion 生成的几张赛博朋克风格图片\", author: \"数字艺术家\", content: \"分享一下周末用 SDXL 模型的 LoRA 尝试生成的图片，效果还不错，提示词工程确实是门学问啊！大家看看怎么样？\", slug: \"sd-cyberpunk-images\" },\n  { id: 103, title: \"如何克服学习新编程语言时的畏难情绪？\", author: \"终身学习者\", content: \"从 Python 转向 Rust 的过程中，遇到了不少挑战，尤其是所有权和生命周期的概念，分享一些我的心得体会，希望能帮助到同样在学习的朋友。\", slug: \"learning-rust-challenges\" },\n  { id: 104, title: \"周末徒步路线推荐：风景绝佳！\", author: \"户外爱好者\", content: \"上周末去了一条少有人知的徒步路线，山顶的风景简直太美了！强烈推荐给大家，附带路线图和注意事项。\", slug: \"hiking-recommendation\" },\n  { id: 105, title: \"最近读的一本好书：《思考，快与慢》\", author: \"读书笔记\", content: \"丹尼尔·卡尼曼的这本书深入浅出地介绍了系统1和系统2的思维模式，对理解我们如何做决策非常有帮助，强烈推荐！\", slug: \"thinking-fast-and-slow-review\" },\n  { id: 106, title: \"咖啡爱好者的福音：手冲咖啡入门技巧\", author: \"咖啡师小李\", content: \"从选豆、磨粉到水温、手法，分享一些我自己总结的手冲咖啡小技巧，让你在家也能冲出好咖啡。\", slug: \"pour-over-coffee-tips\" },\n  { id: 107, title: \"开源项目贡献初体验：修复了一个小Bug\", author: \"代码萌新\", content: \"第一次给 Github 上的开源项目提 PR，虽然只是个小小的文档修复，但感觉很有成就感！记录一下过程。\", slug: \"first-open-source-pr\" },\n  // ... add more mock posts if desired ...\n];\n\n// Placeholder for Featured Tools data type (copy if needed)\ninterface Tool {\n  id: number;\n  name: string;\n  slug: string;\n}\n\nconst PostsListPage: React.FC = () => {\n  const { isSidebarOpen } = useSidebar(); // 使用 Context\n  const [posts, setPosts] = useState<MockPost[]>([]); \n  const [loading, setLoading] = useState(true); // 可以保留 loading 状态模拟\n  const [error, setError] = useState<string | null>(null); // 保留错误处理\n  const [featuredTools, setFeaturedTools] = useState<Tool[]>([]); \n  const navigate = useNavigate();\n\n  // 修改: 使用模拟数据替换 API 调用\n  useEffect(() => {\n    setLoading(true);\n    // 模拟加载延迟\n    setTimeout(() => {\n      setPosts(mockPosts);\n      setLoading(false);\n    }, 300); // 模拟 300ms 加载时间\n  }, []);\n\n  // Fetch featured tools for the sidebar (保持不变)\n  useEffect(() => {\n    const loadFeaturedTools = async () => {\n      try {\n        // Using mock data for simplicity, replace with API call if needed\n        setFeaturedTools([\n          { id: 1, name: \"GPT-4 Turbo\", slug: \"gpt-4-turbo\" },\n          { id: 2, name: \"Midjourney V6\", slug: \"midjourney-v6\" },\n          { id: 3, name: \"Claude 3.5 Sonnet\", slug: \"claude-3.5-sonnet\" },\n          { id: 4, name: \"Stable Diffusion 3\", slug: \"stable-diffusion-3\" },\n          { id: 5, name: \"Perplexity AI\", slug: \"perplexity-ai\" },\n          { id: 6, name: \"Runway Gen-3\", slug: \"runway-gen-3\" }\n        ]);\n      } catch (error) {\n        console.error('加载热门工具失败:', error);\n      }\n    };\n    loadFeaturedTools();\n  }, []);\n\n  return (\n    <div className={`min-h-screen flex flex-col text-white`}>\n      {/* 移除Navbar组件 */}\n      <div className=\"flex flex-1 overflow-hidden pt-16\">\n        {/* 移除SideNavbar组件 */}\n        <main \n          className={`flex-1 overflow-y-auto transition-all duration-300 ease-in-out ${isSidebarOpen ? 'lg:ml-56' : 'ml-0'} px-6 md:px-10 py-8`}\n        >\n          <div className=\"max-w-3xl mx-auto\">\n              {loading && (\n                <div className=\"flex justify-center items-center py-10\">\n                  <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-white\"></div>\n                </div>\n              )}\n    \n              {error && (\n                <div className=\"border border-red-600 text-red-200 p-4 rounded-lg text-center\">\n                  {error}\n                </div>\n              )}\n    \n              {!loading && !error && posts.length === 0 && (\n                <div className=\"text-center py-10 text-gray-400\">\n                  <p>还没有帖子发布。</p>\n                </div>\n              )}\n    \n              {!loading && !error && posts.length > 0 && (\n                <div className=\"grid grid-cols-1 gap-5\">\n                  {posts.map((post) => (\n                    <PostCard \n                      key={post.id}\n                      id={post.id}\n                      title={post.title}\n                      excerpt={post.content} \n                      slug={post.slug}\n                      author={post.author} \n                    />\n                  ))}\n                </div>\n              )}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default PostsListPage; "],"names":["_ref","id","title","excerpt","slug","author","postLink","_jsxs","Link","to","className","children","_jsx","mockPosts","content","PostsListPage","isSidebarOpen","useSidebar","posts","setPosts","useState","loading","setLoading","error","setError","featuredTools","setFeaturedTools","useNavigate","useEffect","setTimeout","async","name","console","loadFeaturedTools","length","map","post","PostCard"],"sourceRoot":""}